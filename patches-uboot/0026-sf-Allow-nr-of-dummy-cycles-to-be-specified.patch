From 41589d08f7be87d705d35fb77b91c29f202d3a4e Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Mon, 3 Oct 2016 14:45:58 +0100
Subject: [PATCH] sf: Allow nr of dummy cycles to be specified

The existing code calculates the number of dummy bytes simply based
on the read command used, and increases the cmd size by the dummy
bytes. However, not all devices use the same default number of
dummy cycles for all commands, especially Dual I/O and Quad I/O.

For drivers that support it, this patch allows the number of dummy
cycles to be specified using the CONFIG_SPI_FLASH_DUMMY_CYCLES symbol.
Additionally, this can be overridden using the "sf_dummy_clks" env var.

Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 drivers/mtd/spi/spi_flash.c  | 19 +++++++++++++++++++
 include/spi_flash.h          |  4 +++-
 scripts/config_whitelist.txt |  1 +
 3 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/drivers/mtd/spi/spi_flash.c b/drivers/mtd/spi/spi_flash.c
index 25d0a93..c529f38 100644
--- a/drivers/mtd/spi/spi_flash.c
+++ b/drivers/mtd/spi/spi_flash.c
@@ -1144,6 +1144,25 @@ int spi_flash_scan(struct spi_flash *flash)
 		flash->dummy_byte = 1;
 	}
 
+	/* Equivalent number of dummy cycles to above calculation */
+	flash->dummy_cycles = 8;
+
+	/* Most SPI Flash devices require a different number of dummy cycles
+	 * for operation at higher clock rates, or can operate at lower clock
+	 * rates with fewer dummy cycles. It may not be possible to represent
+	 * the required number of dummy cycles as dummy bytes.
+	 * Therefore, allow it to be specified for drivers that support it.
+	 * This assumes that you will only be accessing a single SF device.
+	 */
+#if defined(CONFIG_SPI_FLASH_DUMMY_CYCLES)
+ #ifdef CONFIG_SPL_BUILD
+	flash->dummy_cycles = CONFIG_SPI_FLASH_DUMMY_CYCLES;
+ #else
+	flash->dummy_cycles = getenv_ulong("sf_dummy_clks", 10,
+			CONFIG_SPI_FLASH_DUMMY_CYCLES);
+ #endif	/* CONFIG_SPL_BUILD */
+#endif
+
 #ifdef CONFIG_SPI_FLASH_STMICRO
 	if (info->flags & E_FSR)
 		flash->flags |= SNOR_F_USE_FSR;
diff --git a/include/spi_flash.h b/include/spi_flash.h
index 0314996..03faef9 100644
--- a/include/spi_flash.h
+++ b/include/spi_flash.h
@@ -47,7 +47,8 @@ struct spi_slave;
  * @erase_cmd:		Erase cmd 4K, 32K, 64K
  * @read_cmd:		Read cmd - Array Fast, Extn read and quad read.
  * @write_cmd:		Write cmd - page and quad program.
- * @dummy_byte:		Dummy cycles for read operation.
+ * @dummy_byte:		Dummy bytes for read operation.
+ * @dummy_cycles:	Dummy cycles for read operation.
  * @memory_map:		Address of read-only SPI flash access
  * @memory_map_write:	Address of write SPI flash access
  * @flash_lock:		lock a region of the SPI Flash
@@ -84,6 +85,7 @@ struct spi_flash {
 	u8 read_cmd;
 	u8 write_cmd;
 	u8 dummy_byte;
+	u8 dummy_cycles;
 
 	void *memory_map;
 	void *memory_map_write;
diff --git a/scripts/config_whitelist.txt b/scripts/config_whitelist.txt
index 65311b4..2ade3f9 100644
--- a/scripts/config_whitelist.txt
+++ b/scripts/config_whitelist.txt
@@ -4053,6 +4053,7 @@ CONFIG_SPI_BOOTING
 CONFIG_SPI_CS_IS_VALID
 CONFIG_SPI_DATAFLASH_WRITE_VERIFY
 CONFIG_SPI_FLASH_ALL
+CONFIG_SPI_FLASH_DUMMY_CYCLES
 CONFIG_SPI_FLASH_ISSI
 CONFIG_SPI_FLASH_QUAD
 CONFIG_SPI_FLASH_READ_QUAD_CMD
-- 
2.7.4

