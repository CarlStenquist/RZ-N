From 9339cd7dd59ac9120ef7b85c745d00a61dbbb79e Mon Sep 17 00:00:00 2001
From: Phil Edworthy <phil.edworthy@renesas.com>
Date: Thu, 17 Nov 2016 15:30:06 +0000
Subject: [PATCH] Add Renesas RZ/N1 device family

The RZ/N1 family of devices target industrial Ethernet applications. They
share a common set of peripherals such as dual Ethernet MACs, a 5-port
switch, QSPI, NAND, USB Host and Device.

The RZ/N1D has a dual-core Cortex-A7 and DDR interface, whereas the RZ/N1S
has a single-core Cortex-A7 with large internal SRAM replacing DDR.

Signed-off-by: Michel Pollet <michel.pollet@bp.renesas.com>
Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com>
---
 arch/arm/Kconfig                                  |   47 +
 arch/arm/cpu/armv7/Makefile                       |    1 +
 arch/arm/cpu/armv7/rzn1/Kconfig                   |   17 +
 arch/arm/cpu/armv7/rzn1/Makefile                  |   10 +
 arch/arm/cpu/armv7/rzn1/clock.c                   |  132 +++
 arch/arm/cpu/armv7/rzn1/cpu.c                     |  303 ++++++
 arch/arm/cpu/armv7/rzn1/ddr_phy.c                 |  118 +++
 arch/arm/cpu/armv7/rzn1/eth.c                     |  257 +++++
 arch/arm/cpu/armv7/rzn1/ipcm.c                    |   96 ++
 arch/arm/cpu/armv7/rzn1/ipcm.h                    |   25 +
 arch/arm/cpu/armv7/rzn1/pinmux.c                  |  116 +++
 arch/arm/cpu/armv7/rzn1/spl.c                     |   45 +
 arch/arm/cpu/armv7m/Makefile                      |    5 +
 arch/arm/dts/rzn1-clocks.dtsi                     | 1069 +++++++++++++++++++++
 arch/arm/dts/rzn1.dtsi                            |  897 +++++++++++++++++
 arch/arm/dts/rzn1s.dtsi                           |   34 +
 arch/arm/include/asm/arch-rzn1/gpio.h             |   12 +
 include/configs/rzn1-common.h                     |   98 ++
 include/configs/rzn1-spl.h                        |   26 +
 include/renesas/jedec_ddr2_1g_x16_533c_250_CL4.h  |  400 ++++++++
 include/renesas/jedec_ddr3_2g_x16_1333h_500_cl8.h |  400 ++++++++
 include/renesas/pinctrl-rzn1.h                    |  197 ++++
 include/renesas/rzn1-clkctrl-tables.h             |  297 ++++++
 include/renesas/rzn1-clocks.h                     |  183 ++++
 include/renesas/rzn1-irq.h                        |  169 ++++
 include/renesas/rzn1-memory-map.h                 |  193 ++++
 include/renesas/rzn1-sysctrl.h                    |  768 +++++++++++++++
 include/renesas/rzn1-utils.h                      |   73 ++
 scripts/config_whitelist.txt                      |    1 +
 29 files changed, 5989 insertions(+)
 create mode 100644 arch/arm/cpu/armv7/rzn1/Kconfig
 create mode 100644 arch/arm/cpu/armv7/rzn1/Makefile
 create mode 100644 arch/arm/cpu/armv7/rzn1/clock.c
 create mode 100644 arch/arm/cpu/armv7/rzn1/cpu.c
 create mode 100644 arch/arm/cpu/armv7/rzn1/ddr_phy.c
 create mode 100644 arch/arm/cpu/armv7/rzn1/eth.c
 create mode 100644 arch/arm/cpu/armv7/rzn1/ipcm.c
 create mode 100644 arch/arm/cpu/armv7/rzn1/ipcm.h
 create mode 100644 arch/arm/cpu/armv7/rzn1/pinmux.c
 create mode 100644 arch/arm/cpu/armv7/rzn1/spl.c
 create mode 100644 arch/arm/dts/rzn1-clocks.dtsi
 create mode 100644 arch/arm/dts/rzn1.dtsi
 create mode 100644 arch/arm/dts/rzn1s.dtsi
 create mode 100644 arch/arm/include/asm/arch-rzn1/gpio.h
 create mode 100644 include/configs/rzn1-common.h
 create mode 100644 include/configs/rzn1-spl.h
 create mode 100755 include/renesas/jedec_ddr2_1g_x16_533c_250_CL4.h
 create mode 100644 include/renesas/jedec_ddr3_2g_x16_1333h_500_cl8.h
 create mode 100644 include/renesas/pinctrl-rzn1.h
 create mode 100644 include/renesas/rzn1-clkctrl-tables.h
 create mode 100644 include/renesas/rzn1-clocks.h
 create mode 100644 include/renesas/rzn1-irq.h
 create mode 100644 include/renesas/rzn1-memory-map.h
 create mode 100644 include/renesas/rzn1-sysctrl.h
 create mode 100644 include/renesas/rzn1-utils.h

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 2b2ec28..e3e760d 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -157,6 +157,29 @@ config ARCH_OMAP2
 	select CPU_V7
 	select SUPPORT_SPL
 
+config ARCH_RZN1
+	bool
+	select CADENCE_QSPI if SPI_FLASH
+	select CADENCE_QSPI_MMAP if SPI_FLASH
+	select CMD_SF if SPI_FLASH
+	select OF_CONTROL
+	select DM
+	select DM_GPIO
+	select DM_I2C
+	select DM_MMC
+	select DM_SERIAL
+	select DM_SPI
+	select DM_SPI_FLASH
+	select DWAPB_GPIO
+	select SPL_DM if SPL
+	select SPL_LIBCOMMON_SUPPORT if SPL
+	select SPL_LIBGENERIC_SUPPORT if SPL
+	select SPL_OF_CONTROL if SPL
+	select SPL_SYS_MALLOC_SIMPLE if SPL
+	select SYS_I2C_DW
+	select SYS_NS16550
+	select USB_GADGET_RZN1 if USB_GADGET
+
 config ARM64_SUPPORT_AARCH32
 	bool "ARM64 system support AArch32 execution state"
 	default y if ARM64 && !TARGET_THUNDERX_88XX
@@ -551,6 +574,28 @@ config ARCH_RMOBILE
 	select DM
 	select DM_SERIAL
 
+config ARCH_RZN1D
+	bool "Renesas RZ/N1D SoCs"
+	select ARCH_RZN1
+	select CPU_V7
+	select CPU_V7_HAS_NONSEC
+	select CPU_V7_HAS_VIRT
+	select SUPPORT_SPL
+
+config ARCH_RZN1S
+	bool "Renesas RZ/N1S SoCs"
+	select ARCH_RZN1
+	select CPU_V7
+	select CPU_V7_HAS_NONSEC
+	select CPU_V7_HAS_VIRT
+	select SUPPORT_SPL
+
+config ARCH_RZN1L
+	bool "Renesas RZ/N1L Cortex M3 SoCs"
+	select ARCH_RZN1
+	select CPU_V7M
+	select SUPPORT_SPL
+
 config TARGET_S32V234EVB
 	bool "Support s32v234evb"
 	select ARM64
@@ -957,6 +1002,8 @@ source "arch/arm/cpu/armv7/mx5/Kconfig"
 
 source "arch/arm/mach-omap2/Kconfig"
 
+source "arch/arm/cpu/armv7/rzn1/Kconfig"
+
 source "arch/arm/cpu/armv8/fsl-layerscape/Kconfig"
 
 source "arch/arm/mach-orion5x/Kconfig"
diff --git a/arch/arm/cpu/armv7/Makefile b/arch/arm/cpu/armv7/Makefile
index 0e515a4..cb3c6b1 100644
--- a/arch/arm/cpu/armv7/Makefile
+++ b/arch/arm/cpu/armv7/Makefile
@@ -38,6 +38,7 @@ obj-$(if $(filter mx5,$(SOC)),y) += mx5/
 obj-$(CONFIG_MX6) += mx6/
 obj-$(CONFIG_MX7) += mx7/
 obj-$(CONFIG_RMOBILE) += rmobile/
+obj-$(CONFIG_ARCH_RZN1) += rzn1/
 obj-$(if $(filter stv0991,$(SOC)),y) += stv0991/
 obj-$(CONFIG_ARCH_SUNXI) += sunxi/
 obj-$(CONFIG_VF610) += vf610/
diff --git a/arch/arm/cpu/armv7/rzn1/Kconfig b/arch/arm/cpu/armv7/rzn1/Kconfig
new file mode 100644
index 0000000..07d48e2
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/Kconfig
@@ -0,0 +1,17 @@
+if ARCH_RZN1
+
+config RZN1D
+	bool
+	default y
+
+config RZN1S
+	bool
+
+choice
+	prompt "RZN1 board select"
+	optional
+
+config SYS_SOC
+	default "rzn1"
+
+endif
diff --git a/arch/arm/cpu/armv7/rzn1/Makefile b/arch/arm/cpu/armv7/rzn1/Makefile
new file mode 100644
index 0000000..dcdc6b8
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/Makefile
@@ -0,0 +1,10 @@
+#
+# (C) Copyright 2015 Renesas Electronics Europe Ltd
+#
+# SPDX-License-Identifier:     GPL-2.0+
+#
+
+obj-y	:= cpu.o clock.o pinmux.o ipcm.o
+obj-$(CONFIG_SPL_BUILD)		+= spl.o
+obj-$(CONFIG_CADENCE_DDR_CTRL)	+= ddr_phy.o
+obj-$(CONFIG_NET)		+= eth.o
diff --git a/arch/arm/cpu/armv7/rzn1/clock.c b/arch/arm/cpu/armv7/rzn1/clock.c
new file mode 100644
index 0000000..d73acc0
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/clock.c
@@ -0,0 +1,132 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier:	BSD-2-Clause
+ */
+#include <asm/io.h>
+#include <common.h>
+#include "renesas/rzn1-memory-map.h"
+#include "renesas/rzn1-utils.h"
+#include "renesas/rzn1-clocks.h"
+
+/* Generic register/bit group descriptor */
+struct rzn1_onereg {
+	uint16_t reg : 7,	/* Register number (word) */
+		pos : 5,	/* Bit number */
+		size : 4;	/* Optional: size in bits */
+} __attribute__((packed));
+
+struct rzn1_clkdesc {
+	struct rzn1_onereg clock, reset, ready, masteridle, scon, mirack, mistat;
+} __attribute__((packed));
+
+#define _BIT(_r, _p) { .reg = _r, .pos = _p }
+
+#define _CLK(_n, _clk, _rst, _rdy, _midle, _scon, _mirack, _mistat) \
+	{ .clock = _clk, .reset = _rst, .ready = _rdy, .masteridle = _midle, \
+	  .scon = _scon, .mirack = _mirack, .mistat = _mistat }
+
+#include "renesas/rzn1-clkctrl-tables.h"
+
+#define clk_readl readl
+#define clk_writel writel
+
+static void *clk_mgr_base_addr = (void *)RZN1_SYSTEM_CTRL_BASE;
+
+static void clk_mgr_desc_set(const struct rzn1_onereg *one, int on)
+{
+	u32 *reg = ((u32 *)clk_mgr_base_addr) + one->reg;
+	u32 val = clk_readl(reg);
+	val = (val & ~(1 << one->pos)) | ((!!on) << one->pos);
+	clk_writel(val, reg);
+}
+
+static u32 clk_mgr_desc_get(const struct rzn1_onereg *one)
+{
+	u32 *reg = ((u32 *)clk_mgr_base_addr) + one->reg;
+	u32 val = clk_readl(reg);
+	val = (val >> one->pos) & 1;
+	return val;
+}
+
+int rzn1_clk_set_gate(int clkdesc_id, int on)
+{
+	const struct rzn1_clkdesc *g = &rzn1_clock_list[clkdesc_id];
+	u32 timeout;
+
+	BUG_ON(!clk_mgr_base_addr);
+	BUG_ON(!g->clock.reg);
+
+	if (!on && g->masteridle.reg) {
+		/* Set 'Master Idle Request' bit */
+		clk_mgr_desc_set(&g->masteridle, 1);
+
+		/* Wait for Master Idle Request acknowledge */
+		if (g->mirack.reg) {
+			for (timeout = 100000; timeout &&
+				!clk_mgr_desc_get(&g->mirack); timeout--)
+					;
+			if (!timeout)
+				return -1;
+		}
+
+		/* Wait for Master Idle Status signal */
+		if (g->mistat.reg) {
+			for (timeout = 100000; timeout &&
+				!clk_mgr_desc_get(&g->mistat); timeout--)
+					;
+			if (!timeout)
+				return -1;
+		}
+	}
+
+	/* Enable/disable the clock */
+	clk_mgr_desc_set(&g->clock, on);
+
+	/* If the peripheral is memory mapped (i.e. an AXI slave), there is an
+	 * associated SLVRDY bit in the System Controller that needs to be set
+	 * so that the FlexWAY bus fabric passes on the read/write requests.
+	 */
+	if (g->ready.reg)
+		clk_mgr_desc_set(&g->ready, on);
+
+	/* Clear 'Master Idle Request' bit */
+	if (g->masteridle.reg)
+		clk_mgr_desc_set(&g->masteridle, !on);
+
+	/* Wait for FlexWAY Socket Connection signal */
+	if (on && g->scon.reg) {
+		for (timeout = 100000; timeout &&
+			!clk_mgr_desc_get(&g->scon); timeout--)
+				;
+		if (!timeout)
+			return -1;
+	}
+
+	return 0;
+}
+
+void rzn1_clk_reset(int clkdesc_id)
+{
+	const struct rzn1_clkdesc *g = &rzn1_clock_list[clkdesc_id];
+
+	BUG_ON(!clk_mgr_base_addr);
+	BUG_ON(!g->clock.reg);
+
+	if (g->reset.reg) {
+		clk_mgr_desc_set(&g->reset, 0);
+		udelay(1);
+		clk_mgr_desc_set(&g->reset, 1);
+	}
+}
+
+void rzn1_clk_reset_state(int clkdesc_id, int level)
+{
+	const struct rzn1_clkdesc *g = &rzn1_clock_list[clkdesc_id];
+
+	BUG_ON(!clk_mgr_base_addr);
+	BUG_ON(!g->clock.reg);
+
+	if (g->reset.reg)
+		clk_mgr_desc_set(&g->reset, level);
+}
diff --git a/arch/arm/cpu/armv7/rzn1/cpu.c b/arch/arm/cpu/armv7/rzn1/cpu.c
new file mode 100644
index 0000000..9fd3a22
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/cpu.c
@@ -0,0 +1,303 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier:	BSD-2-Clause
+ */
+#include <common.h>
+#include <cadence_ddr_ctrl.h>
+#include <asm/armv7.h>
+#include <asm/io.h>
+#include <usb.h>
+#include "ipcm.h"
+#include "renesas/rzn1-memory-map.h"
+#include "renesas/rzn1-utils.h"
+#include "renesas/rzn1-clocks.h"
+#include "renesas/rzn1-sysctrl.h"
+
+void lowlevel_init(void)
+{
+}
+
+void rzn1_sysctrl_div(u32 reg, u32 div)
+{
+	/* Wait for busy bit to be cleared */
+	while (sysctrl_readl(reg) & (1 << 31))
+		;
+
+	/* New divider setting */
+	sysctrl_writel((1 << 31) | div, reg);
+
+	/* Wait for busy bit to be cleared */
+	while (sysctrl_readl(reg) & (1 << 31))
+		;
+}
+
+void rzn1_setup_pinmux(void);
+
+int arch_cpu_init(void)
+{
+	/* 500MHz clock input to the CPU clock divider */
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV, 1);
+
+	/* Setup clocks to IP blocks, all are divided down from a 1GHz PLL */
+
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV, 1000000000 / CONFIG_SYS_NS16550_CLK);
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV, 1000000000 / CONFIG_SYS_NS16550_CLK);
+
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV, 1000000000 / CONFIG_SYS_NAND_CLOCK);
+
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV, 1000000000 / CONFIG_CQSPI_REF_CLK);
+
+	if (!is_rzn1d())
+		rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV, 1000000000 / CONFIG_CQSPI_REF_CLK);
+
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV, 1000 / IC_CLK);
+
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV, 1000/SDHC_CLK_MHZ);
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV, 1000/SDHC_CLK_MHZ);
+	sysctrl_writel(SDHC_CLK_MHZ, RZN1_SYSCTRL_REG_CFG_SDIO0);
+	sysctrl_writel(SDHC_CLK_MHZ, RZN1_SYSCTRL_REG_CFG_SDIO1);
+
+	/* Enable pinmux clocks and FlexWAY connection for UART */
+	rzn1_clk_set_gate(RZN1_HCLK_PINCONFIG_ID, 1);
+	rzn1_clk_set_gate(RZN1_HCLK_GPIO0_ID, 1);
+	rzn1_clk_set_gate(RZN1_HCLK_GPIO1_ID, 1);
+
+	/* Enable UART clock and FlexWAY connection */
+#if (CONFIG_CONS_INDEX == 1)
+	rzn1_clk_set_gate(RZN1_HCLK_UART0_ID, 1);
+	rzn1_clk_set_gate(RZN1_CLK_UART0_ID, 1);
+#elif (CONFIG_CONS_INDEX == 2)
+	rzn1_clk_set_gate(RZN1_HCLK_UART1_ID, 1);
+	rzn1_clk_set_gate(RZN1_CLK_UART1_ID, 1);
+#elif (CONFIG_CONS_INDEX == 3)
+	rzn1_clk_set_gate(RZN1_HCLK_UART2_ID, 1);
+	rzn1_clk_set_gate(RZN1_CLK_UART2_ID, 1);
+#endif
+	rzn1_setup_pinmux();
+
+	return 0;
+}
+
+/* Configure clocks for the USB blocks and reset IP */
+int rzn1_usb_init(int index, enum usb_init_type init)
+{
+#define USBFUNC_EPCTR		(RZN1_USB_DEV_BASE + 0x1000 + 0x10)
+
+	u32 val;
+
+	/* Enable USB clocks */
+	rzn1_clk_set_gate(RZN1_HCLK_USBPM_ID, 1);
+	rzn1_clk_set_gate(RZN1_HCLK_USBF_ID, 1);
+	rzn1_clk_set_gate(RZN1_HCLK_USBH_ID, 1);
+
+	/* USB Host clocks */
+	rzn1_clk_set_gate(RZN1_CLK_PCI_USB_ID, 1);
+	rzn1_clk_set_gate(RZN1_CLK_48MHZ_PG_F_ID, 1);
+
+	/*
+	 * Enable USB on port 1 as the Linux kernel doesn't deal with
+	 * these irregular register bits
+	 */
+	val = sysctrl_readl(RZN1_SYSCTRL_REG_CFG_USB);
+	val |= (1 << RZN1_SYSCTRL_REG_CFG_USB_DIRPD);
+	val |= (1 << RZN1_SYSCTRL_REG_CFG_USB_FRCLK48MOD);
+	if (index == 0 && init == USB_INIT_HOST)
+		val |= (1 << RZN1_SYSCTRL_REG_CFG_USB_H2MODE);
+	sysctrl_writel(val, RZN1_SYSCTRL_REG_CFG_USB);
+
+	/* Hold USBF in reset */
+	writel(5, USBFUNC_EPCTR);
+	udelay(100);
+
+	/* Power up USB PLL */
+	val = sysctrl_readl(RZN1_SYSCTRL_REG_CFG_USB);
+	val &= ~(1 << RZN1_SYSCTRL_REG_CFG_USB_DIRPD);
+	sysctrl_writel(val, RZN1_SYSCTRL_REG_CFG_USB);
+	udelay(100000);
+
+	/* Release USBF resets */
+	writel(0, USBFUNC_EPCTR);
+
+	/* Wait for USB PLL lock */
+	do {
+		val = sysctrl_readl(RZN1_SYSCTRL_REG_USBSTAT);
+	} while (!(val & (1 << RZN1_SYSCTRL_REG_USBSTAT_PLL_LOCK)));
+
+	return 0;
+}
+
+void reset_cpu(ulong addr)
+{
+	sysctrl_writel((1 << RZN1_SYSCTRL_REG_RSTEN_SWRST_EN) | (1 << RZN1_SYSCTRL_REG_RSTEN_MRESET_EN),
+			RZN1_SYSCTRL_REG_RSTEN);
+	sysctrl_writel((1 << RZN1_SYSCTRL_REG_RSTCTRL_SWRST_REQ), RZN1_SYSCTRL_REG_RSTCTRL);
+
+	while (1)
+		;
+}
+
+#ifndef CONFIG_SYS_DCACHE_OFF
+void post_mmu_setup(void)
+{
+	/* Set on-chip SRAMs & QSPI as cached, but set them to write-through */
+	mmu_set_region_dcache_behaviour(RZN1_SRAM_ID_BASE,
+					RZN1_SRAM_ID_SIZE,
+					DCACHE_WRITETHROUGH);
+	mmu_set_region_dcache_behaviour(RZN1_SRAM_SYS_BASE,
+					RZN1_SRAM_SYS_SIZE,
+					DCACHE_WRITETHROUGH);
+	mmu_set_region_dcache_behaviour(RZN1_V_QSPI_BASE,
+					RZN1_V_QSPI_SIZE,
+					DCACHE_WRITETHROUGH);
+	if (!is_rzn1d()) {
+		mmu_set_region_dcache_behaviour(RZN1_V_QSPI1_BASE,
+					RZN1_V_QSPI1_SIZE,
+					DCACHE_WRITETHROUGH);
+	}
+}
+
+void enable_caches(void)
+{
+	/* Enable D-cache. I-cache is already enabled in start.S */
+	dcache_enable();
+}
+#endif
+
+#if defined(CONFIG_ARMV7_NONSEC) || defined(CONFIG_ARMV7_VIRT)
+#include <asm/secure.h>
+/* This is the location the smp_pen code will loop onto to find it's
+ * boot address. The address of /this/ variable is passed down to the
+ * kernel via the /chosen/rzn1,bootaddr property for the kernel to
+ * take over the parked core */
+u32 smp_secondary_bootaddr[10] __secure_data = { 0, 0x525a4e31 };
+
+/* Setting the address at which secondary core starts from */
+void smp_set_core_boot_addr(unsigned long addr, int corenr)
+{
+	debug("%s: writing %08lx to SYSCTRL reg and 2nd bootaddr (%08x)\n",
+		__func__, addr, (u32)smp_secondary_bootaddr);
+
+	/*
+	 * To protect against spurious wake up events, the smp_waitloop will go
+	 * back into wfi/wfe if the jump address is the the address of where it
+	 * got the jump address. In our case, the jump address is stored in
+	 * smp_secondary_bootaddr[0], so that's why we set it here.
+	 */
+	smp_secondary_bootaddr[0] = addr;
+	flush_dcache_all();
+
+	/* BootROM holding pen */
+	writel(addr, RZN1_SYSTEM_CTRL_BASE + RZN1_SYSCTRL_REG_BOOTADDR);
+}
+
+#endif
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+#include <fdt_support.h>
+
+/* this allows rzn1 boards to override and add properties */
+int __weak __ft_board_setup(void *blob, bd_t *bd)
+{
+	return 0;
+}
+
+/* This function updates the Device Tree that is passed to Linux for starting
+ * up core 1 (SMP). Note that full U-Boot may or may not switch to NONSEC, or
+ * NONSEC+HYP, depending on env variables.
+ */
+int ft_board_setup(void *blob, bd_t *bd)
+{
+#if defined(CONFIG_ARMV7_NONSEC)
+#if !defined(CONFIG_SPL_BUILD)
+	if (!armv7_boot_nonsec())
+		return 0;
+#endif
+
+	u32 bootaddr = htonl((u32)smp_secondary_bootaddr);
+
+	__ft_board_setup(blob, bd);
+
+	fdt_find_and_setprop(blob, "/chosen", "rzn1,bootaddr",
+			     &bootaddr, sizeof(bootaddr), 1);
+#endif
+	return 0;
+}
+#endif
+
+#define IPC_TX_MBOX		1
+#define IPC_RX_MBOX		0
+
+struct ipc_msg {
+	uint32_t	msg_type;	/* Number to allow different msgs */
+	uint32_t	wait_rsp;
+	uint32_t	env_ptr;
+	uint32_t	pad[4];
+};
+
+void rzn1_ddr_ctrl_init(const u32 *reg0, const u32 *reg350, u32 ddr_size)
+{
+	u32 ddr_start_addr = 0;
+
+	/*
+	 * On ES1.0 devices, the DDR start address that the DDR Controller sees
+	 * is the physical address of the DDR. However, later devices changed it
+	 * to be 0 in order to fix an issue with DDR out-of-range detection.
+	 */
+	if (sysctrl_readl(RZN1_SYSCTRL_REG_VERSION) == 0x10)
+		ddr_start_addr = RZN1_V_DDR_BASE;
+
+	/* DDR Controller is always in ASYNC mode */
+	cdns_ddr_ctrl_init((void *)RZN1_DDR_BASE, 1,  reg0, reg350,
+			   ddr_start_addr, ddr_size);
+}
+
+/* Enable the Cortex M3 clock and it starts executing, IVT is at 0x04000000 */
+static int do_rzn1_start_cm3(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	struct ipc_msg msg = { 0 };
+
+	msg.msg_type = 1;
+	msg.wait_rsp = 0;
+	msg.env_ptr = RZN1_V_QSPI_BASE + CONFIG_ENV_OFFSET;
+
+	/* Check the CM3 reset vector has something there */
+	if (readl(RZN1_SRAM_ID_BASE + 4) == 0)
+		printf("Warning: CM3 reset vector is 0!\n");
+
+	if (argc >= 2) {
+		msg.wait_rsp = simple_strtoul(argv[1], NULL, 10);
+		if (!msg.wait_rsp)
+			return -1;
+	}
+	if (argc >= 3) {
+		msg.env_ptr = simple_strtoul(argv[2], NULL, 16);
+		if (!msg.env_ptr)
+			return -1;
+	}
+
+	ipc_init(RZN1_MAILBOX_BASE);
+	ipc_setup_1to1(IPC_TX_MBOX, IPC_RX_MBOX);
+	ipc_setup_1to1(IPC_RX_MBOX, IPC_TX_MBOX);
+
+	ipc_send(IPC_TX_MBOX, (void *)&msg);
+
+	/* Reset then enable the Cortex M3 clock */
+	sysctrl_writel(0x5, RZN1_SYSCTRL_REG_PWRCTRL_CM3);
+	udelay(10);
+	sysctrl_writel(0x3, RZN1_SYSCTRL_REG_PWRCTRL_CM3);
+
+	/* Wait for the CM3 to send a msg back */
+	if (msg.wait_rsp)
+		ipc_recv_all(IPC_RX_MBOX, (void *)&msg);
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	rzn1_start_cm3, 3, 0, do_rzn1_start_cm3,
+	"Start Cortex M3 core",
+	   "<wait> 0x<address>\n"
+	   "    - wait = 0|1: Wait for cm3 to ack using IPCM register\n"
+	   "    - Pass the address specified via the IPCM register\n"
+);
diff --git a/arch/arm/cpu/armv7/rzn1/ddr_phy.c b/arch/arm/cpu/armv7/rzn1/ddr_phy.c
new file mode 100644
index 0000000..6ffc1a5
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/ddr_phy.c
@@ -0,0 +1,118 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier: BSD-2-Clause
+ */
+#include <asm/io.h>
+#include <common.h>
+#include "renesas/rzn1-memory-map.h"
+#include "renesas/rzn1-utils.h"
+#include "renesas/rzn1-clocks.h"
+#include "renesas/rzn1-sysctrl.h"
+
+#define FUNCCTRL	0x00
+#define  FUNCCTRL_MASKSDLOFS	(0x18 << 16)
+#define  FUNCCTRL_DVDDQ_1_5V	(1 << 8)
+#define  FUNCCTRL_RESET_N	(1 << 0)
+#define DLLCTRL		0x04
+#define  DLLCTRL_ASDLLOCK	(1 << 26)
+#define  DLLCTRL_MFSL_500MHz	(2 << 1)
+#define  DLLCTRL_MDLLSTBY	(1 << 0)
+#define ZQCALCTRL	0x08
+#define  ZQCALCTRL_ZQCALEND	(1 << 30)
+#define  ZQCALCTRL_ZQCALRSTB	(1 << 0)
+#define ZQODTCTRL	0x0c
+#define RDCTRL		0x10
+#define RDTMG		0x14
+#define FIFOINIT	0x18
+#define  FIFOINIT_RDPTINITEXE	(1 << 8)
+#define  FIFOINIT_WRPTINITEXE	(1 << 0)
+#define OUTCTRL		0x1c
+#define  OUTCTRL_ADCMDOE	(1 << 0)
+#define WLCTRL1		0x40
+#define  WLCTRL1_WLSTR		(1 << 24)
+#define DQCALOFS1	0xe8
+
+/* DDR PHY setup */
+void ddr_phy_init(int ddr_type)
+{
+	u32 val;
+
+	/* Disable DDR Controller clock and FlexWAY connection */
+	rzn1_clk_set_gate(RZN1_HCLK_DDRC_ID, 0);
+	rzn1_clk_set_gate(RZN1_CLK_DDRC_ID, 0);
+
+	rzn1_clk_reset_state(RZN1_HCLK_DDRC_ID, 0);
+	rzn1_clk_reset_state(RZN1_CLK_DDRC_ID, 0);
+
+	/* Enable DDR Controller clock and FlexWAY connection */
+	rzn1_clk_set_gate(RZN1_CLK_DDRC_ID, 1);
+	rzn1_clk_set_gate(RZN1_HCLK_DDRC_ID, 1);
+
+	/* DDR PHY Soft reset assert */
+	writel(FUNCCTRL_MASKSDLOFS | FUNCCTRL_DVDDQ_1_5V, RZN1_DDRPHY_BASE + FUNCCTRL);
+
+	rzn1_clk_reset_state(RZN1_CLK_DDRC_ID, 1);
+	rzn1_clk_reset_state(RZN1_HCLK_DDRC_ID, 1);
+
+	/* DDR PHY setup */
+	writel(DLLCTRL_MFSL_500MHz | DLLCTRL_MDLLSTBY, RZN1_DDRPHY_BASE + DLLCTRL);
+	writel(0x00000186, RZN1_DDRPHY_BASE + ZQCALCTRL);
+	if (ddr_type == RZN1_DDR3_DUAL_BANK)
+		writel(0xAB330031, RZN1_DDRPHY_BASE + ZQODTCTRL);
+	else if (ddr_type == RZN1_DDR3_SINGLE_BANK)
+		writel(0xAB320051, RZN1_DDRPHY_BASE + ZQODTCTRL);
+	else /* DDR2 */
+		writel(0xAB330071, RZN1_DDRPHY_BASE + ZQODTCTRL);
+	writel(0xB545B544, RZN1_DDRPHY_BASE + RDCTRL);
+	writel(0x000000B0, RZN1_DDRPHY_BASE + RDTMG);
+	writel(0x020A0806, RZN1_DDRPHY_BASE + OUTCTRL);
+	if (ddr_type == RZN1_DDR3_DUAL_BANK)
+		writel(0x80005556, RZN1_DDRPHY_BASE + WLCTRL1);
+	else
+		writel(0x80005C5D, RZN1_DDRPHY_BASE + WLCTRL1);
+	writel(0x00000101, RZN1_DDRPHY_BASE + FIFOINIT);
+	writel(0x00004545, RZN1_DDRPHY_BASE + DQCALOFS1);
+
+	/* Step 9 MDLL reset release */
+	val = readl(RZN1_DDRPHY_BASE + DLLCTRL);
+	val &= ~DLLCTRL_MDLLSTBY;
+	writel(val, RZN1_DDRPHY_BASE + DLLCTRL);
+
+	/* Step 12 Soft reset release */
+	val = readl(RZN1_DDRPHY_BASE + FUNCCTRL);
+	val |= FUNCCTRL_RESET_N;
+	writel(val, RZN1_DDRPHY_BASE + FUNCCTRL);
+
+	/* Step 13 FIFO pointer initialize */
+	writel(FIFOINIT_RDPTINITEXE | FIFOINIT_WRPTINITEXE, RZN1_DDRPHY_BASE + FIFOINIT);
+
+	/* Step 14 Execute ZQ Calibration */
+	val = readl(RZN1_DDRPHY_BASE + ZQCALCTRL);
+	val |= ZQCALCTRL_ZQCALRSTB;
+	writel(val, RZN1_DDRPHY_BASE + ZQCALCTRL);
+
+	/* Step 15 Wait for 200us or more, or wait for DFIINITCOMPLETE to be "1" */
+	while (!(readl(RZN1_DDRPHY_BASE + DLLCTRL) & DLLCTRL_ASDLLOCK))
+		;
+	while (!(readl(RZN1_DDRPHY_BASE + ZQCALCTRL) & ZQCALCTRL_ZQCALEND))
+		;
+
+	/* Step 16 Enable Address and Command output */
+	val = readl(RZN1_DDRPHY_BASE + OUTCTRL);
+	val |= OUTCTRL_ADCMDOE;
+	writel(val, RZN1_DDRPHY_BASE + OUTCTRL);
+
+	/* Step 17 Wait for 200us or more(from MRESETB=0) */
+	udelay(200);
+}
+
+void ddr_phy_enable_wl(void)
+{
+	u32 val;
+
+	/* Step 26 (Set Write Leveling) */
+	val = readl(RZN1_DDRPHY_BASE + WLCTRL1);
+	val |= WLCTRL1_WLSTR;
+	writel(val, RZN1_DDRPHY_BASE + WLCTRL1);
+}
diff --git a/arch/arm/cpu/armv7/rzn1/eth.c b/arch/arm/cpu/armv7/rzn1/eth.c
new file mode 100644
index 0000000..ef5c386
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/eth.c
@@ -0,0 +1,257 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier:	BSD-2-Clause
+ */
+#include <asm/io.h>
+#include <common.h>
+#include <miiphy.h>
+#include "renesas/rzn1-memory-map.h"
+#include "renesas/rzn1-utils.h"
+#include "renesas/rzn1-clocks.h"
+#include "renesas/rzn1-sysctrl.h"
+
+/* MoreThanIP 5pt Switch regs */
+#define MT5PT_REVISION		0x0
+#define MT5PT_SCRATCH		0x4
+#define MT5PT_PORT_ENA		0x8
+#define  MT5PT_PORT_ENA_TX(x)		(1 << ((x) + 16))
+#define  MT5PT_PORT_ENA_RX(x)		(1 << (x))
+#define  MT5PT_PORT_ENA_TXRX(x)		(MT5PT_PORT_ENA_TX(x) | MT5PT_PORT_ENA_RX(x))
+#define MT5PT_AUTH_PORT(x)	(0x240 + (x) * 4)
+#define  MT5PT_AUTH_PORT_AUTHORIZED	(1 << 0)
+#define  MT5PT_AUTH_PORT_CONTROLLED	(1 << 1)
+#define  MT5PT_AUTH_PORT_EAPOL_EN	(1 << 2)
+#define  MT5PT_AUTH_PORT_GUEST		(1 << 3)
+#define  MT5PT_AUTH_PORT_EAPOL_PORT(x)	((x) << 12)
+#define MT5PT_MAC_CMD_CFGn(x)	(0x808 + (x) * 0x400)
+#define  MT5PT_TX_ENA			(1 << 0)
+#define  MT5PT_RX_ENA			(1 << 1)
+#define  MT5PT_MBPS_1000		(1 << 3)
+#define MT5PT_MAC_FRM_LENGTHn(x)	(0x814 + (x) * 0x400)
+
+void rzn1_mt5pt_switch_enable_port(int port)
+{
+	u8 *regs = (u8 *)RZN1_SWITCH_BASE;
+	u32 val;
+
+	val = readl(regs + MT5PT_AUTH_PORT(port));
+	val |= MT5PT_AUTH_PORT_AUTHORIZED;
+	writel(val, regs + MT5PT_AUTH_PORT(port));
+
+	val = readl(regs + MT5PT_PORT_ENA);
+	val |= MT5PT_PORT_ENA_TXRX(port);
+	writel(val, regs + MT5PT_PORT_ENA);
+
+	/* Max frame size */
+	writel(9224, regs + MT5PT_MAC_FRM_LENGTHn(port));
+}
+
+void rzn1_mt5pt_switch_setup_port_speed(int port, int speed)
+{
+	u8 *regs = (u8 *)RZN1_SWITCH_BASE;
+	u32 val;
+
+	val = readl(regs + MT5PT_MAC_CMD_CFGn(port));
+	val &= ~MT5PT_MBPS_1000;
+	if (speed == SPEED_1000)
+		val |= MT5PT_MBPS_1000;
+	writel(val, regs + MT5PT_MAC_CMD_CFGn(port));
+}
+
+void rzn1_switch_setup_port_speed(int port, int speed, int enable)
+{
+	/*
+	 * The MoreThanIP 5 port switch has 5 ports. Port 4 is also known as
+	 * PORTIN and is connected to GMAC2 or MAC RTOS. The other 4 ports (0
+	 * to 3) are downstream and can connect to a PHY.
+	 */
+	rzn1_mt5pt_switch_setup_port_speed(port, speed);
+
+	if (enable)
+		rzn1_mt5pt_switch_enable_port(port);
+}
+
+void rzn1_mt5pt_switch_init(void)
+{
+	/* 5pt Switch clock divider setting */
+	rzn1_sysctrl_div(RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV, 5);
+
+	/* Enable 5pt Switch clocks */
+	rzn1_clk_set_gate(RZN1_CLK_SWITCH_ID, 1);
+	rzn1_clk_set_gate(RZN1_HCLK_SWITCH_ID, 1);
+	rzn1_clk_reset(RZN1_CLK_SWITCH_ID);
+}
+
+/* RIN Ether Accessory (Switch Control) regs */
+#define PRCMD			0x0		/* Ethernet Protect */
+#define IDCODE			0x4		/* EtherSwitch IDCODE */
+#define MODCTRL			0x8		/* Mode Control */
+#define PTP_MODE_CTRL		0xc		/* PTP Mode Control */
+#define PHY_LINK_MODE		0x14		/* Ethernet PHY Link Mode */
+
+/* RIN RGMII/RMII Converter regs */
+#define CONVCTRL(x)		(0x100 + ((x)) * 4) /* RGMII/RMII Converter */
+#define  CONVCTRL_10_MBPS		(0 << 0)
+#define  CONVCTRL_100_MBPS		(1 << 0)
+#define  CONVCTRL_1000_MBPS		(1 << 1)
+#define  CONVCTRL_MII			(0 << 2)
+#define  CONVCTRL_RMII			(1 << 2)
+#define  CONVCTRL_RGMII			(1 << 3)
+#define  CONVCTRL_REF_CLK_OUT		(1 << 4)
+#define  CONVCTRL_HALF_DUPLEX		(0 << 8)
+#define  CONVCTRL_FULL_DUPLEX		(1 << 8)
+#define CONVRST			0x114		/* RGMII/RMII Converter RST */
+#define  PHYIF_RST(x)			(1 << (x))
+
+/* RIN SwitchCore regs */
+#define RIN_SWCTRL		0x304		/* SwitchCore Control */
+#define  RIN_SWCTRL_MPBS_10(x)		(((0 << 4) | (1 << 0)) << (x))
+#define  RIN_SWCTRL_MPBS_100(x)		(((0 << 4) | (0 << 0)) << (x))
+#define  RIN_SWCTRL_MPBS_1000(x)	(((1 << 4) | (0 << 0)) << (x))
+#define  RIN_SWCTRL_MPBS_MASK(x)	(((1 << 4) | (1 << 0)) << (x))
+#define RIN_SWDUPC		0x308		/* SwitchCore Duplex Mode */
+#define  RIN_SWDUPC_DUPLEX_MASK(x)	(1 << (x))
+#define  RIN_SWDUPC_DUPLEX_FULL(x)	(1 << (x))
+
+void rzn1_rin_prot_writel(u32 val, u32 reg)
+{
+	u8 *regs = (u8 *)RZN1_SWITCH_CTRL_REG_BASE;
+
+	/* RIN: Unprotect register writes */
+	writel(0x00a5, regs + PRCMD);
+	writel(0x0001, regs + PRCMD);
+	writel(0xfffe, regs + PRCMD);
+	writel(0x0001, regs + PRCMD);
+
+	writel(val, regs + reg);
+
+	/* Enable protection */
+	writel(0x0000, regs + PRCMD);
+}
+
+void rzn1_rin_switchcore_setup(int port, int full_duplex, int speed)
+{
+	u8 *regs = (u8 *)RZN1_SWITCH_CTRL_REG_BASE;
+	u32 val;
+
+	/* speed */
+	val = readl(regs + RIN_SWCTRL);
+	val &= ~RIN_SWCTRL_MPBS_MASK(port);
+
+	if (speed == SPEED_1000)
+		val |= RIN_SWCTRL_MPBS_1000(port);
+	else if (speed == SPEED_100)
+		val |= RIN_SWCTRL_MPBS_100(port);
+	else
+		val |= RIN_SWCTRL_MPBS_10(port);
+
+	rzn1_rin_prot_writel(val, RIN_SWCTRL);
+
+	/* duplex */
+	val = readl(regs + RIN_SWDUPC);
+	val &= ~RIN_SWDUPC_DUPLEX_MASK(port);
+	if (full_duplex)
+		val |= RIN_SWDUPC_DUPLEX_FULL(port);
+	rzn1_rin_prot_writel(val, RIN_SWDUPC);
+}
+
+/*
+ * RIN RGMII/RMII Converter set speed
+ * RGMII/RMII Converter number: 0..4
+ * speed: 10, 100, 1000
+ */
+void rzn1_rgmii_rmii_conv_speed(int phy, int full_duplex, int speed)
+{
+	u8 *regs = (u8 *)RZN1_SWITCH_CTRL_REG_BASE;
+	u32 val = 0;
+
+	val = readl(regs + CONVCTRL(phy));
+
+	val &= CONVCTRL_MII | CONVCTRL_RMII | CONVCTRL_RGMII |
+		CONVCTRL_REF_CLK_OUT;
+
+	/* The interface type and speed bits are somewhat intertwined */
+	if (val != CONVCTRL_MII) {
+		if (speed == SPEED_1000)
+			val |= CONVCTRL_1000_MBPS;
+		else if (speed == SPEED_100)
+			val |= CONVCTRL_100_MBPS;
+		else if (speed == SPEED_10)
+			val |= CONVCTRL_10_MBPS;
+	}
+
+	if (full_duplex)
+		val |= CONVCTRL_FULL_DUPLEX;
+
+	writel(val, regs + CONVCTRL(phy));
+
+	if (phy > 0)
+		rzn1_rin_switchcore_setup(4 - phy, full_duplex, speed);
+}
+
+/*
+ * RIN RGMII/RMII Converter setup one
+ * RGMII/RMII Converter number: 0..4
+ * if_type: Type of PHY interface, see phy_interface_t
+ */
+void rzn1_rgmii_rmii_conv_setup(int phy, u32 if_type, int rmii_ref_clk_out)
+{
+	u8 *regs = (u8 *)RZN1_SWITCH_CTRL_REG_BASE;
+	u32 val = 0;
+	int is_rgmii = 0;
+
+	switch (if_type) {
+	case PHY_INTERFACE_MODE_RGMII:
+	case PHY_INTERFACE_MODE_RGMII_ID:
+	case PHY_INTERFACE_MODE_RGMII_RXID:
+	case PHY_INTERFACE_MODE_RGMII_TXID:
+		val |= CONVCTRL_RGMII;
+		is_rgmii = 1;
+		break;
+	case PHY_INTERFACE_MODE_RMII:
+		val |= CONVCTRL_RMII;
+		break;
+	case PHY_INTERFACE_MODE_MII:
+		val |= CONVCTRL_MII;
+		break;
+	};
+
+	if (if_type == PHY_INTERFACE_MODE_RMII && rmii_ref_clk_out)
+		val |= CONVCTRL_REF_CLK_OUT;
+
+	writel(val, regs + CONVCTRL(phy));
+
+	if (is_rgmii)
+		rzn1_rgmii_rmii_conv_speed(phy, DUPLEX_FULL, SPEED_1000);
+	else
+		rzn1_rgmii_rmii_conv_speed(phy, DUPLEX_FULL, SPEED_100);
+
+	/* reset */
+	val = readl(regs + CONVRST);
+	val &= ~PHYIF_RST(phy);
+	rzn1_rin_prot_writel(val, CONVRST);
+	udelay(1000);
+	val |= PHYIF_RST(phy);
+	rzn1_rin_prot_writel(val, CONVRST);
+}
+
+void rzn1_rin_init(void)
+{
+	/* Enable RIN clocks */
+	rzn1_clk_set_gate(RZN1_HCLK_SWITCH_RG_ID, 1);
+
+	/* Set PTP to use 25MHz PLL clock */
+	rzn1_rin_prot_writel(0x4, PTP_MODE_CTRL);
+}
+
+void rzn1_rin_reset_clks(void)
+{
+	u32 val;
+
+	/* Clear ETH and CLK25 resets */
+	val = readl(RZN1_SYSTEM_CTRL_BASE + RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL);
+	val |= (1 << RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_RSTN_ETH);
+	val |= (1 << RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_RSTN_CLK25);
+	writel(val, RZN1_SYSTEM_CTRL_BASE + RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL);
+}
diff --git a/arch/arm/cpu/armv7/rzn1/ipcm.c b/arch/arm/cpu/armv7/rzn1/ipcm.c
new file mode 100644
index 0000000..d46231c
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/ipcm.c
@@ -0,0 +1,96 @@
+/*
+ * Simple driver for the ARM PL320 IPCM
+ *
+ * Based on Linux drivers/mailbox/pl320-ipc.c
+ * Copyright 2012 Calxeda, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0
+ */
+#include <common.h>
+#include <asm/io.h>
+#include "ipcm.h"
+
+#define IPCMxSOURCE(m)		((m) * 0x40)
+#define IPCMxDSET(m)		(((m) * 0x40) + 0x004)
+#define IPCMxDSTATUS(m)		(((m) * 0x40) + 0x00c)
+#define IPCMxMSET(m)		(((m) * 0x40) + 0x014)
+#define IPCMxSEND(m)		(((m) * 0x40) + 0x020)
+ #define IPCMxSEND_SEND		BIT(0)
+ #define IPCMxSEND_ACK		BIT(1)
+#define IPCMxDR(m, dr)		(((m) * 0x40) + ((dr) * 4) + 0x024)
+
+#define IPCMRIS(irq)		(((irq) * 8) + 0x804)
+#define IPCMCFGSTAT		0x900
+#define  NR_MBOXES(x)		(((x) >> 16) & 63)
+#define  NR_DATAWORDS(x)	((x) & 7)
+
+#define ALL_CHANS(x)		((1 << (x)) - 1)
+
+static uintptr_t ipc_base;
+static uint32_t nr_mboxes;
+static uint32_t nr_datawords;
+static uint32_t all_chans;
+
+void ipc_init(uintptr_t _ipc_base)
+{
+	ipc_base = _ipc_base;
+	nr_mboxes = NR_MBOXES(readl(ipc_base + IPCMCFGSTAT));
+	nr_datawords = NR_DATAWORDS(readl(ipc_base + IPCMCFGSTAT));
+	all_chans = ALL_CHANS(nr_mboxes);
+}
+
+void ipc_setup_1to1(uint32_t tx_mbox, uint32_t rx_mbox)
+{
+	uint32_t rx_mboxes = IPC_CHAN_MASK(rx_mbox);
+
+	ipc_setup_custom(tx_mbox, rx_mboxes);
+}
+
+void ipc_setup_broadcast(uint32_t tx_mbox)
+{
+	uint32_t rx_mboxes = all_chans - IPC_CHAN_MASK(tx_mbox);
+
+	ipc_setup_custom(tx_mbox, rx_mboxes);
+}
+
+void ipc_setup_custom(uint32_t tx_mbox, uint32_t rx_mboxes)
+{
+	writel(0, ipc_base + IPCMxSEND(tx_mbox));
+	writel(IPC_CHAN_MASK(tx_mbox), ipc_base + IPCMxSOURCE(tx_mbox));
+	writel(rx_mboxes, ipc_base + IPCMxDSET(tx_mbox));
+	writel(rx_mboxes, ipc_base + IPCMxMSET(tx_mbox));
+}
+
+void ipc_send(uint32_t tx_mbox, uint32_t *data)
+{
+	int i;
+
+	for (i = 0; i < nr_datawords; i++)
+		writel(data[i], ipc_base + IPCMxDR(tx_mbox, i));
+	writel(IPCMxSEND_SEND, ipc_base + IPCMxSEND(tx_mbox));
+}
+
+void ipc_wait_for_ack(uint32_t tx_mbox)
+{
+	while (!(readl(ipc_base + IPCMxSEND(tx_mbox)) & IPCMxSEND_ACK))
+		;
+}
+
+/* Note that this blocks */
+void ipc_recv(uint32_t rx_mbox, uint32_t from_mboxes, uint32_t *data)
+{
+	int i;
+
+	while (!(readl(ipc_base + IPCMxDSTATUS(rx_mbox)) & from_mboxes))
+		;
+
+	for (i = 0; i < nr_datawords; i++)
+		data[i] = readl(ipc_base + IPCMxDR(rx_mbox, i));
+
+	writel(IPCMxSEND_ACK, ipc_base + IPCMxSEND(rx_mbox));
+}
+
+void ipc_recv_all(uint32_t rx_mbox, uint32_t *data)
+{
+	ipc_recv(rx_mbox, all_chans, data);
+}
diff --git a/arch/arm/cpu/armv7/rzn1/ipcm.h b/arch/arm/cpu/armv7/rzn1/ipcm.h
new file mode 100644
index 0000000..beafdcb
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/ipcm.h
@@ -0,0 +1,25 @@
+/*
+ * Simple driver for the ARM PL320 IPCM
+ *
+ * SPDX-License-Identifier:	GPL-2.0
+ */
+#ifndef __IPCM_H__
+#define __IPCM_H__
+
+#define IPC_CHAN_MASK(n)	(1 << (n))
+
+void ipc_init(uintptr_t _ipc_base);
+void ipc_setup_1to1(uint32_t tx_mbox, uint32_t rx_mbox);
+void ipc_setup_broadcast(uint32_t tx_mbox);
+
+/* rx_mboxes is a bit mask for the mailboxes to send to */
+void ipc_setup_custom(uint32_t tx_mbox, uint32_t rx_mboxes);
+void ipc_send(uint32_t tx_mbox, uint32_t *data);
+void ipc_wait_for_ack(uint32_t tx_mbox);
+
+/* from_mboxes is a bit mask of the sending mailboxes to wait on */
+void ipc_recv(uint32_t rx_mbox, uint32_t from_mboxes, uint32_t *data);
+
+void ipc_recv_all(uint32_t rx_mbox, uint32_t *data);
+
+#endif /* __IPCM_H__ */
diff --git a/arch/arm/cpu/armv7/rzn1/pinmux.c b/arch/arm/cpu/armv7/rzn1/pinmux.c
new file mode 100644
index 0000000..735a6fb
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/pinmux.c
@@ -0,0 +1,116 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier:	BSD-2-Clause
+ */
+#include <asm/io.h>
+#include <common.h>
+#include "renesas/rzn1-memory-map.h"
+#include "renesas/rzn1-utils.h"
+#include "renesas/pinctrl-rzn1.h"
+
+#define GPIO_LVL1_CONFIG_B(x)		(RZN1_PINCTRL_BASE + (x << 2))
+#define GPIO_LVL2_CONFIG(x)		(RZN1_PINCTRL_L2_BASE + (x << 2))
+#define GPIO_LVL1_STATUS_PROTECT	(RZN1_PINCTRL_BASE + 0x400)
+#define GPIO_LVL2_STATUS_PROTECT	(RZN1_PINCTRL_L2_BASE + 0x400)
+#define WRITE_ACCESS_MASK		0xfffffff8
+#define DISABLE_WRITE_ACCESS		1
+#define PADS_FUNCTION_USE_L2_SEL	15
+#define RZN1_L1_PADFUNC_MASK		0xf
+#define RZN1_L2_PADFUNC_MASK		0x3f
+
+static void pinmux_unprotect(u32 reg)
+{
+	/* Enable write access to port multiplex registers */
+	/* write the address of the register to the register */
+	writel(reg & WRITE_ACCESS_MASK, reg);
+}
+
+static void pinmux_protect(u32 reg)
+{
+	/* Disable write access to port multiplex registers */
+	/* write the address of the register to the register */
+	u32 val = reg;
+	val &= WRITE_ACCESS_MASK;
+	val |= DISABLE_WRITE_ACCESS;
+	writel(val, reg);
+}
+
+static void set_lvl1_pinmux(u8 pin, u32 func, u32 attrib)
+{
+	u32 reg = readl(GPIO_LVL1_CONFIG_B(pin));
+
+	/* Set pad function */
+	reg &= ~RZN1_L1_PADFUNC_MASK;
+	reg |= func & RZN1_L1_PADFUNC_MASK;
+
+	if (attrib & RZN1_DRIVE_SET) {
+		reg &= ~RZN1_DRIVE_MASK;
+		reg |= attrib & RZN1_DRIVE_MASK;
+	}
+
+	if (attrib & RZN1_PULL_SET) {
+		reg &= ~RZN1_PULL_MASK;
+		reg |= attrib & RZN1_PULL_MASK;
+	}
+
+	pinmux_unprotect(GPIO_LVL1_STATUS_PROTECT);
+	writel(reg, GPIO_LVL1_CONFIG_B(pin));
+	pinmux_protect(GPIO_LVL1_STATUS_PROTECT);
+}
+
+static void rzn1_pinmux_mdio_select(u8 mdio, u32 func)
+{
+       pinmux_unprotect(GPIO_LVL2_STATUS_PROTECT);
+       writel(func, GPIO_LVL2_STATUS_PROTECT + 4 + (mdio * 4));
+       pinmux_protect(GPIO_LVL2_STATUS_PROTECT);
+}
+
+void rzn1_pinmux_select(u8 pin, u32 func, u32 attrib)
+{
+	/* Special 'virtual' pins for the MDIO muxing */
+	if (pin >= RZN1_MDIO_BUS0 && pin <= RZN1_MDIO_BUS1) {
+		if (func >= RZN1_FUNC_MDIO_MUX_HIGHZ &&
+				func <= RZN1_FUNC_MDIO_MUX_SWITCH) {
+			pin -= RZN1_MDIO_BUS0;
+			func -= RZN1_FUNC_MDIO_MUX_HIGHZ;
+			rzn1_pinmux_mdio_select(pin, func);
+		}
+		return;
+	}
+
+	if (func >= RZN1_FUNC_LEVEL2_OFFSET) {
+		func -= RZN1_FUNC_LEVEL2_OFFSET;
+
+		/* Level 1 first otherwise you can introduce a glitch */
+		set_lvl1_pinmux(pin, PADS_FUNCTION_USE_L2_SEL, attrib);
+
+		/* Level 2 */
+		pinmux_unprotect(GPIO_LVL2_STATUS_PROTECT);
+		writel(func, GPIO_LVL2_CONFIG(pin));
+		pinmux_protect(GPIO_LVL2_STATUS_PROTECT);
+	} else {
+		/* Level 1 */
+		set_lvl1_pinmux(pin, func, attrib);
+	}
+}
+
+void rzn1_pinmux_set(u32 setting)
+{
+	u8 pin = setting & 0xff;
+	u32 func = (setting >> RZN1_MUX_FUNC_BIT) & 0x7f;
+	u32 attrib = 0;
+	u32 tmp;
+
+	if (setting & (1 << RZN1_MUX_HAS_DRIVE_BIT)) {
+		tmp = (setting >> RZN1_MUX_DRIVE_BIT) & 3;
+		attrib |= RZN1_DRIVE_SET | (tmp << 10);
+	}
+
+	if (setting & (1 << RZN1_MUX_HAS_PULL_BIT)) {
+		tmp = (setting >> RZN1_MUX_PULL_BIT) & 3;
+		attrib |= RZN1_PULL_SET | (tmp << 8);
+	}
+
+	rzn1_pinmux_select(pin, func, attrib);
+}
diff --git a/arch/arm/cpu/armv7/rzn1/spl.c b/arch/arm/cpu/armv7/rzn1/spl.c
new file mode 100644
index 0000000..a9b421a
--- /dev/null
+++ b/arch/arm/cpu/armv7/rzn1/spl.c
@@ -0,0 +1,45 @@
+/*
+ * common spl init code
+ *
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+#include <asm/io.h>
+#include <common.h>
+#include <config.h>
+#include <spl.h>
+#include "renesas/rzn1-sysctrl.h"
+#include "renesas/rzn1-utils.h"
+
+u32 spl_boot_device(void)
+{
+	u32 opmode = (sysctrl_readl(RZN1_SYSCTRL_REG_OPMODE) >> 2) & 3;
+	switch (opmode) {
+#if defined(CONFIG_SPL_SPI_LOAD)
+	case 0:
+		return BOOT_DEVICE_SPI;
+#endif
+#if defined(CONFIG_SPL_NAND_LOAD)
+	case 1:
+		return BOOT_DEVICE_NAND;
+#endif
+	}
+	/* fallback to hard coded */
+#if defined(CONFIG_SPL_SPI_LOAD)
+	return BOOT_DEVICE_SPI;
+#else
+	return BOOT_DEVICE_NAND;
+#endif
+}
+
+#ifdef CONFIG_SPL_OS_BOOT
+int spl_start_uboot(void)
+{
+	mdelay(50);
+	/* break into full u-boot on 'u' */
+	if (serial_tstc() && serial_getc() == 'u')
+		return 1;
+	return 0;
+}
+#endif
diff --git a/arch/arm/cpu/armv7m/Makefile b/arch/arm/cpu/armv7m/Makefile
index e1a6c40..f2b50a7 100644
--- a/arch/arm/cpu/armv7m/Makefile
+++ b/arch/arm/cpu/armv7m/Makefile
@@ -9,3 +9,8 @@ extra-y := start.o
 obj-y += cpu.o
 
 obj-$(CONFIG_SYS_ARCH_TIMER) += systick-timer.o
+
+# Re-use the RZ/N1 armv7 code
+obj-$(CONFIG_ARCH_RZN1) += ../armv7/rzn1/
+
+
diff --git a/arch/arm/dts/rzn1-clocks.dtsi b/arch/arm/dts/rzn1-clocks.dtsi
new file mode 100644
index 0000000..2ccbcd9
--- /dev/null
+++ b/arch/arm/dts/rzn1-clocks.dtsi
@@ -0,0 +1,1069 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+
+
+&clocks {
+	clk_25_pg4: clk_25_pg4@RZN1_CLK_25MHZ_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG4_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg5: clk_25_pg5@RZN1_CLK_25MHZ_PG5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG5_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg6: clk_25_pg6@RZN1_CLK_25MHZ_PG6_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG6_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg7: clk_25_pg7@RZN1_CLK_25MHZ_PG7_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG7_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_25_pg8: clk_25_pg8@RZN1_CLK_25MHZ_PG8_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_25MHZ_PG8_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_48_pg4: clk_48_pg4@RZN1_CLK_48MHZ_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_48MHZ_PG4_ID>;
+		clocks = <&clk_48>;
+	};
+	clk_48_pg_f: clk_48_pg_f@RZN1_CLK_48MHZ_PG_F_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_48MHZ_PG_F_ID>;
+		clocks = <&clk_48>;
+	};
+	clk_adc: clk_adc@RZN1_CLK_ADC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_ADC_ID>;
+		clocks = <&div_adc>;
+	};
+	clk_cm3: clk_cm3@RZN1_CLK_CM3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_CM3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	clk_ddrc: clk_ddrc@RZN1_CLK_DDRC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_DDRC_ID>;
+		clocks = <&clk_ddrphy_pllclk_d4>;
+	};
+	clk_ddrphy_pllclk_d4: clk_ddrphy_pllclk_d4 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <4>;
+		clock-mult = <1>;
+		clocks = <&clk_ddrphy_pllclk>;
+	};
+	clk_ecat100: clk_ecat100@RZN1_CLK_ECAT100_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_ECAT100_ID>;
+		clocks = <&clkout_d10>;
+	};
+	clk_ecat100_d4: clk_ecat100_d4 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <4>;
+		clock-mult = <1>;
+		clocks = <&clk_ecat100>;
+	};
+	clk_ecat25: clk_ecat25@RZN1_CLK_ECAT25_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_ECAT25_ID>;
+		clocks = <&clk_ecat100_d4>;
+	};
+	clk_hsr: clk_hsr {
+		#clock-cells = <0>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	clk_hsr50: clk_hsr50@RZN1_CLK_HSR50_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_HSR50_ID>;
+		clocks = <&clk_hsr_dup_d2>;
+	};
+	clk_hsr_dup: clk_hsr_dup@RZN1_CLK_HSR_DUP_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_HSR_DUP_ID>;
+		clocks = <&clkout_d10>;
+	};
+	clk_rxgmii_switch: clk_hsr_dup_d2: clk_hsr_dup_d2 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <2>;
+		clock-mult = <1>;
+		clocks = <&clk_hsr_dup>;
+	};
+	clk_hw_rtos: clk_hw_rtos@RZN1_CLK_HW_RTOS_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_HW_RTOS_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	clk_i2c0: clk_i2c0@RZN1_CLK_I2C0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_I2C0_ID>;
+		clocks = <&div_i2c>;
+	};
+	clk_i2c1: clk_i2c1@RZN1_CLK_I2C1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_I2C1_ID>;
+		clocks = <&div_i2c>;
+	};
+	clk_mii_ref: clk_mii_ref@RZN1_CLK_MII_REF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_MII_REF_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_nand: clk_nand@RZN1_CLK_NAND_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_NAND_ID>;
+		clocks = <&div_nand>;
+	};
+	clk_nousbp2_pg6: clk_nousbp2_pg6@RZN1_CLK_NOUSBP2_PG6_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_NOUSBP2_PG6_ID>;
+		clocks = <&div_p2_pg>;
+	};
+	clk_p1_pg2: clk_p1_pg2@RZN1_CLK_P1_PG2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P1_PG2_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_p1_pg3: clk_p1_pg3@RZN1_CLK_P1_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P1_PG3_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_p1_pg4: clk_p1_pg4@RZN1_CLK_P1_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P1_PG4_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_p4_pg3: clk_p4_pg3@RZN1_CLK_P4_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P4_PG3_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_p4_pg4: clk_p4_pg4@RZN1_CLK_P4_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P4_PG4_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_p6_pg1: clk_p6_pg1@RZN1_CLK_P6_PG1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG1_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_p6_pg2: clk_p6_pg2@RZN1_CLK_P6_PG2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG2_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_p6_pg3: clk_p6_pg3@RZN1_CLK_P6_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG3_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_p6_pg4: clk_p6_pg4@RZN1_CLK_P6_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_P6_PG4_ID>;
+		clocks = <&div_p6_pg>;
+	};
+	clk_pci_usb: clk_pci_usb@RZN1_CLK_PCI_USB_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_PCI_USB_ID>;
+		clocks = <&clkout_d40>;
+	};
+	clk_48: clk_pll_usb: clk_pll_usb {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <48000000>;
+		clocks = <&clkin_d2>;
+	};
+	clk_ptp_mac0: clk_ptp_mac0 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk25>, <&clk50>;
+	};
+	clk_ptp_mac1: clk_ptp_mac1 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk25>, <&clk50>;
+	};
+	clk_ptp_switch: clk_ptp_switch {
+		#clock-cells = <0>;
+	};
+	clk_qspi0: clk_qspi0@RZN1_CLK_QSPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_QSPI0_ID>;
+		clocks = <&div_qspi0>;
+	};
+	clk_qspi1: clk_qspi1@RZN1_CLK_QSPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_QSPI1_ID>;
+		clocks = <&div_qspi1>;
+	};
+	clk_ddrphy_pclk: clk_fw_ace: clk_cm3_dapclk_apb: 
+		clk_cm3_dapclk_ahb: clk_cm3_dapclk_axi: clk_cm3_hclk: 
+		clk_cm3_atclk: clk_cm3_dapclk: clk_ram_sys: clk_fw: 
+		clk_fw_ddr_ahb: clk_crypto_pe: clk_crypto_aes: 
+		clk_crypto_des: clk_crypto_arc4: clk_crypto_hash: clk_ref_sync_d4: clk_ref_sync_d4 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <4>;
+		clock-mult = <1>;
+		clocks = <&clk_ref_sync>;
+	};
+	clk_fwdiv2: clk_ref_sync_d8: clk_ref_sync_d8 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <8>;
+		clock-mult = <1>;
+		clocks = <&clk_ref_sync>;
+	};
+	clk_rgmii_ref: clk_rgmii_ref@RZN1_CLK_RGMII_REF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_RGMII_REF_ID>;
+		clocks = <&clkout_d8>;
+	};
+	clk_rmii_ref: clk_rmii_ref@RZN1_CLK_RMII_REF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_RMII_REF_ID>;
+		clocks = <&clkout_d20>;
+	};
+	clk_rxgmii_mac0: clk_rxgmii_mac0 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&eth_tx_clk>, <&clk50>;
+	};
+	clk_rxgmii_mac1: clk_rxgmii_mac1 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&clk125>, <&clk50>;
+	};
+	clk_sdio0: clk_sdio0@RZN1_CLK_SDIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SDIO0_ID>;
+		clocks = <&div_sdio0>;
+	};
+	clk_sdio1: clk_sdio1@RZN1_CLK_SDIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SDIO1_ID>;
+		clocks = <&div_sdio1>;
+	};
+	clk_sercos100: clk_sercos100@RZN1_CLK_SERCOS100_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SERCOS100_ID>;
+		clocks = <&clkout_d10>;
+	};
+	clk_sercos100_d2: clk_sercos100_d2 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <2>;
+		clock-mult = <1>;
+		clocks = <&clk_sercos100>;
+	};
+	clk_sercos50: clk_sercos50@RZN1_CLK_SERCOS50_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SERCOS50_ID>;
+		clocks = <&clk_sercos100_d2>;
+	};
+	clk_slcd: clk_slcd@RZN1_CLK_SLCD_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SLCD_ID>;
+		clocks = <&div_p1_pg>;
+	};
+	clk_spi0: clk_spi0@RZN1_CLK_SPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI0_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi1: clk_spi1@RZN1_CLK_SPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI1_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi2: clk_spi2@RZN1_CLK_SPI2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI2_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi3: clk_spi3@RZN1_CLK_SPI3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI3_ID>;
+		clocks = <&div_p3_pg>;
+	};
+	clk_spi4: clk_spi4@RZN1_CLK_SPI4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI4_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_spi5: clk_spi5@RZN1_CLK_SPI5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SPI5_ID>;
+		clocks = <&div_p4_pg>;
+	};
+	clk_switch: clk_switch@RZN1_CLK_SWITCH_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_CLK_SWITCH_ID>;
+		clocks = <&div_switch>;
+	};
+	clk_txgmii_mac0: clk_txgmii_mac0 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk50>, <&clk25>,
+			 <&clk2_5>, <&eth_rx_clk>, <&eth_tx_clk>;
+	};
+	clk_txgmii_mac1: clk_txgmii_mac1 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk50>, <&clk25>,
+			 <&clk2_5>, <&eth_rx_clk>, <&eth_tx_clk>;
+	};
+	clk_txgmii_switch: clk_txgmii_switch {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-selector";
+		clocks = <&rgmii_refclk>, <&clk125>, <&clk50>, <&clk25>,
+			 <&clk2_5>, <&eth_rx_clk>, <&eth_tx_clk>;
+	};
+	clk_40_sysctrl: clkin: clkin {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <40000000>;
+	};
+	clk_20_otp: clkin_d2: clkin_d2 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <2>;
+		clock-mult = <1>;
+		clocks = <&clkin>;
+	};
+	clkout: clkout {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <1000000000>;
+	};
+	clkout_d10: clkout_d10 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <10>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	msebis_clk: msebim_clk: clkout_d16: clkout_d16 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <16>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk_cm3_stclk: clkout_d160: clkout_d160 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <160>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk_ddrphy_sr_hrclk: clk_ddrphy_pllclk: clkout_d1or2: clkout_d1or2 {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3>;
+		renesas,rzn1-div-min = <1>;
+		renesas,rzn1-div-max = <2>;
+		clocks = <&clkout>;
+	};
+	clk50: clkout_d20: clkout_d20 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <20>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk25: clk_25: clkout_d40: clkout_d40 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <40>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk2_5: clkout_d400: clkout_d400 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <400>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clkout_d5: clkout_d5 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <5>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	clk125: clkout_d8: clkout_d8 {
+		#clock-cells = <0>;
+		compatible = "fixed-factor-clock";
+		clock-div = <8>;
+		clock-mult = <1>;
+		clocks = <&clkout>;
+	};
+	ddr_pll_nr: ddr_pll_nr {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+	div_adc: div_adc@RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <50>;
+		renesas,rzn1-div-max = <250>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV>;
+		clocks = <&clkout>;
+	};
+	clk_a7mp: div_ca7: div_ca7@RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7>;
+		renesas,rzn1-div-min = <1>;
+		renesas,rzn1-div-max = <4>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV>;
+		renesas,rzn1-div-table = <1 2 4>;
+		clocks = <&clk_ref_sync>;
+	};
+	div_i2c: div_i2c@RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x1f>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <16>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV>;
+		clocks = <&clkout>;
+	};
+	clk_motordiv: clk_motor: div_motor: div_motor@RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xf>;
+		renesas,rzn1-div-min = <2>;
+		renesas,rzn1-div-max = <8>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV>;
+		clocks = <&clkout_d5>;
+	};
+	div_nand: div_nand@RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3f>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <32>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV>;
+		clocks = <&clkout>;
+	};
+	div_p1_pg: div_p1_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <200>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV>;
+		clocks = <&clkout>;
+	};
+	div_p2_pg: div_p2_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV>;
+		clocks = <&clkout>;
+	};
+	div_p3_pg: div_p3_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <8>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV>;
+		clocks = <&clkout>;
+	};
+	div_p4_pg: div_p4_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <8>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV>;
+		clocks = <&clkout>;
+	};
+	clk_p5_pg1: div_p5_pg: div_p5_pg@RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3f>;
+		renesas,rzn1-div-min = <10>;
+		renesas,rzn1-div-max = <40>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV>;
+		clocks = <&clkout>;
+	};
+	div_p6_pg: div_p6_pg@RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7f>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <64>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV>;
+		clocks = <&clkout>;
+	};
+	div_qspi0: div_qspi0@RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7>;
+		renesas,rzn1-div-min = <3>;
+		renesas,rzn1-div-max = <7>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV>;
+		clocks = <&clkout>;
+	};
+	div_qspi1: div_qspi1@RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x7>;
+		renesas,rzn1-div-min = <3>;
+		renesas,rzn1-div-max = <7>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV>;
+		clocks = <&clkout>;
+	};
+	clk_ref_sync: ddr_clk_div: div_ref_sync: div_ref_sync@RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x1f>;
+		renesas,rzn1-div-min = <2>;
+		renesas,rzn1-div-max = <16>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV>;
+		renesas,rzn1-div-table = <2 4 8 16>;
+		clocks = <&clkout>;
+	};
+	div_sdio0: div_sdio0@RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <20>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV>;
+		clocks = <&clkout>;
+	};
+	div_sdio1: div_sdio1@RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <20>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV>;
+		clocks = <&clkout>;
+	};
+	div_switch: div_switch@RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3f>;
+		renesas,rzn1-div-min = <5>;
+		renesas,rzn1-div-max = <40>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV>;
+		clocks = <&clkout>;
+	};
+	div_uart: div_uart@RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0xff>;
+		renesas,rzn1-div-min = <12>;
+		renesas,rzn1-div-max = <128>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV>;
+		clocks = <&clkout>;
+	};
+	eth_rx_clk: eth_rx_clk {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+	eth_tx_clk: eth_tx_clk {
+		#clock-cells = <0>;
+		compatible = "fixed-clock";
+		clock-frequency = <25000000>;
+	};
+	hclk_adc: hclk_adc@RZN1_HCLK_ADC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_ADC_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_can0: hclk_can0@RZN1_HCLK_CAN0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CAN0_ID>;
+		clocks = <&clk_48>;
+	};
+	hclk_can1: hclk_can1@RZN1_HCLK_CAN1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CAN1_ID>;
+		clocks = <&clk_48>;
+	};
+	hclk_cm3: hclk_cm3@RZN1_HCLK_CM3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CM3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_crypto_eip150: hclk_crypto_eip150@RZN1_HCLK_CRYPTO_EIP150_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CRYPTO_EIP150_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_crypto_eip93: hclk_crypto_eip93@RZN1_HCLK_CRYPTO_EIP93_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_CRYPTO_EIP93_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_ddrc: hclk_ddrc@RZN1_HCLK_DDRC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DDRC_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_deltasigma: hclk_deltasigma@RZN1_HCLK_DELTASIGMA_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DELTASIGMA_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_dma0: hclk_dma0@RZN1_HCLK_DMA0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DMA0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_dma1: hclk_dma1@RZN1_HCLK_DMA1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_DMA1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_ecat125: hclk_ecat125@RZN1_HCLK_ECAT125_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_ECAT125_ID>;
+		clocks = <&clkout_d8>;
+	};
+	hclk_gmac0: hclk_gmac0@RZN1_HCLK_GMAC0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GMAC0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gmac1: hclk_gmac1@RZN1_HCLK_GMAC1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GMAC1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gpio0: hclk_gpio0@RZN1_HCLK_GPIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GPIO0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gpio1: hclk_gpio1@RZN1_HCLK_GPIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GPIO1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_gpio2: hclk_gpio2@RZN1_HCLK_GPIO2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_GPIO2_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_hsr: hclk_hsr@RZN1_HCLK_HSR_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_HSR_ID>;
+		clocks = <&clk_hsr_dup_d2>;
+	};
+	hclk_i2c0: hclk_i2c0@RZN1_HCLK_I2C0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_I2C0_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_i2c1: hclk_i2c1@RZN1_HCLK_I2C1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_I2C1_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_lcd: hclk_lcd@RZN1_HCLK_LCD_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_LCD_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_msebi_m: hclk_msebi_m@RZN1_HCLK_MSEBI_M_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_MSEBI_M_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_msebi_s: hclk_msebi_s@RZN1_HCLK_MSEBI_S_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_MSEBI_S_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_nand: hclk_nand@RZN1_HCLK_NAND_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_NAND_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg19: hclk_pg19@RZN1_HCLK_PG19_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG19_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg20: hclk_pg20@RZN1_HCLK_PG20_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG20_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg3: hclk_pg3@RZN1_HCLK_PG3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg4: hclk_pg4@RZN1_HCLK_PG4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG4_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pg_i: hclk_pg_i@RZN1_HCLK_PG_I_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PG_I_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_pinconfig: hclk_pinconfig@RZN1_HCLK_PINCONFIG_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PINCONFIG_ID>;
+		clocks = <&clkout_d40>;
+	};
+	hclk_pwmpto: hclk_pwmpto@RZN1_HCLK_PWMPTO_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_PWMPTO_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_qspi0: hclk_qspi0@RZN1_HCLK_QSPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_QSPI0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_qspi1: hclk_qspi1@RZN1_HCLK_QSPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_QSPI1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_rom: hclk_rom@RZN1_HCLK_ROM_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_ROM_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_rsv: hclk_rsv@RZN1_HCLK_RSV_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_RSV_ID>;
+		clocks = <&clk_48>;
+	};
+	hclk_rtc: hclk_rtc@RZN1_HCLK_RTC_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_RTC_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_sdio0: hclk_sdio0@RZN1_HCLK_SDIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SDIO0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_sdio1: hclk_sdio1@RZN1_HCLK_SDIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SDIO1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_semap: hclk_semap@RZN1_HCLK_SEMAP_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SEMAP_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_sercos: hclk_sercos@RZN1_HCLK_SERCOS_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SERCOS_ID>;
+		clocks = <&clkout_d10>;
+	};
+	hclk_sgpio0: hclk_sgpio0@RZN1_HCLK_SGPIO0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO0_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_sgpio1: hclk_sgpio1@RZN1_HCLK_SGPIO1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO1_ID>;
+		clocks = <&div_motor>;
+	};
+	hclk_sgpio2: hclk_sgpio2@RZN1_HCLK_SGPIO2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO2_ID>;
+		clocks = <&div_p5_pg>;
+	};
+	hclk_sgpio3: hclk_sgpio3@RZN1_HCLK_SGPIO3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO3_ID>;
+		clocks = <&div_p5_pg>;
+	};
+	hclk_sgpio4: hclk_sgpio4@RZN1_HCLK_SGPIO4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SGPIO4_ID>;
+		clocks = <&div_p5_pg>;
+	};
+	hclk_spi0: hclk_spi0@RZN1_HCLK_SPI0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI0_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi1: hclk_spi1@RZN1_HCLK_SPI1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI1_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi2: hclk_spi2@RZN1_HCLK_SPI2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI2_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi3: hclk_spi3@RZN1_HCLK_SPI3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi4: hclk_spi4@RZN1_HCLK_SPI4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI4_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_spi5: hclk_spi5@RZN1_HCLK_SPI5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SPI5_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_switch: hclk_switch@RZN1_HCLK_SWITCH_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SWITCH_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_switch_rg: hclk_switch_rg@RZN1_HCLK_SWITCH_RG_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_SWITCH_RG_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_timer0: hclk_timer0@RZN1_HCLK_TIMER0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_TIMER0_ID>;
+		clocks = <&clkout_d40>;
+	};
+	hclk_timer1: hclk_timer1@RZN1_HCLK_TIMER1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_TIMER1_ID>;
+		clocks = <&clkout_d40>;
+	};
+	hclk_uart0: hclk_uart0@RZN1_HCLK_UART0_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART0_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_uart1: hclk_uart1@RZN1_HCLK_UART1_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART1_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_uart2: hclk_uart2@RZN1_HCLK_UART2_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART2_ID>;
+		clocks = <&clk_ref_sync_d8>;
+	};
+	hclk_uart3: hclk_uart3@RZN1_HCLK_UART3_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART3_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart4: hclk_uart4@RZN1_HCLK_UART4_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART4_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart5: hclk_uart5@RZN1_HCLK_UART5_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART5_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart6: hclk_uart6@RZN1_HCLK_UART6_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART6_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_uart7: hclk_uart7@RZN1_HCLK_UART7_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_UART7_ID>;
+		clocks = <&clk_ref_sync_d4>;
+	};
+	hclk_usbf: hclk_usbf@RZN1_HCLK_USBF_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_USBF_ID>;
+		clocks = <&clkout_d8>;
+	};
+	hclk_usbh: hclk_usbh@RZN1_HCLK_USBH_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_USBH_ID>;
+		clocks = <&clkout_d8>;
+	};
+	hclk_usbpm: hclk_usbpm@RZN1_HCLK_USBPM_ID {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-gate";
+		reg = <RZN1_HCLK_USBPM_ID>;
+		clocks = <&clkout_d8>;
+	};
+	rgmii_refclk: rgmii_refclk {
+		#clock-cells = <0>;
+	};
+	rtos_mdc: rtos_mdc@RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV {
+		#clock-cells = <0>;
+		compatible = "renesas,rzn1-clock-divider";
+		renesas,rzn1-bit-mask = <0x3ff>;
+		renesas,rzn1-div-min = <80>;
+		renesas,rzn1-div-max = <640>;
+		reg = <RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV>;
+		renesas,rzn1-div-table = <80 160 320 640>;
+		clocks = <&clk_ref_sync>;
+	};
+};
diff --git a/arch/arm/dts/rzn1.dtsi b/arch/arm/dts/rzn1.dtsi
new file mode 100644
index 0000000..a83506a
--- /dev/null
+++ b/arch/arm/dts/rzn1.dtsi
@@ -0,0 +1,897 @@
+/*
+ * Device Tree Source for the Renesas RZ/N1 SoC
+ *
+ * Copyright (C) 2016 Renesas Electronics Europe Ltd
+ *
+ * This file is licensed under the terms of the GNU General Public License
+ * version 2.  This program is licensed "as is" without any warranty of any
+ * kind, whether express or implied.
+ */
+
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <renesas/pinctrl-rzn1.h>
+#include <renesas/rzn1-clocks.h>
+#include <renesas/rzn1-irq.h>
+#include <renesas/rzn1-memory-map.h>
+#include <renesas/rzn1-sysctrl.h>
+
+#include "skeleton.dtsi"
+
+/ {
+	compatible = "renesas,rzn1";
+	interrupt-parent = <&gic>;
+	#address-cells = <1>;
+	#size-cells = <1>;
+
+	chosen {
+		/* These nodes are specific to the rzn1, and are CAN by the
+		 * bootloader. They are optional
+		   rzn1,bootaddr = <0xxxxxxxxx>  -- this property is set
+		        by the bootloader when it starts in NONSEC mode, this
+		        property will contain the address that the second CA7
+		        core is 'parked' at, and where it is looking for the
+		        boot address code the kernel will pass to it to start it.
+		        This property should not be set manually.
+		   rzn1,h2mode   -- this bool property, if present, will force
+		        the kernel to configure the USB subsystem in 'host' mode,
+		        this mode will prevent the usbf 'device' driver to start.
+		        This property can be set by the bootloader in case there
+		        is a GPIO for this configutation, otherwise, it can also
+		        be set manually in the device tree to force a config.
+		 */
+	};
+	cpus {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clocks = <&clk_a7mp>;
+
+		cpu@0 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <0>;
+		};
+		cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a7";
+			reg = <1>;
+		};
+	};
+	aliases {
+		serial0 = &uart0;
+		pinctrl = &pinctrl;
+		clocks = &clocks;
+		ethernet0 = &gmac0;
+		ethernet1 = &gmac1;
+		spi0 = &qspi0;
+	};
+	clocks: clocks@0 {
+		compatible = "renesas,rzn1-clock";
+		reg = <RZN1_SYSTEM_CTRL_BASE RZN1_SYSTEM_CTRL_SIZE>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "okay";
+
+		/* Most of the clock definition is declared in the
+		 * autogenerated file rzn1-clocks.dtsi
+		 * Here we find the 'exceptions' - mostly grouping clocks
+		 * together to attach to drivers */
+
+		/* Needed for pinctrl access !*/
+		hclk_pinconfig { renesas,no-disable; };
+
+		clk_ddr_grp: clk_ddr_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_ddrc &hclk_ddrc>;
+		};
+		all_usbf: all_usbf {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_usbf &hclk_usbpm &clk_48_pg_f>;
+		};
+		/* USB Host Needs the USB Device clocks(!) since the EPCTR
+		 * register is in the USBF register map, and that register is
+		 * needed to start the PLL */
+		all_usbh: all_usbh {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_usbh &hclk_usbpm &clk_pci_usb &all_usbf>;
+		};
+		all_lcd: all_lcd {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_lcd &hclk_pg_i>;
+		};
+		clk_switch_all: clk_switch_all {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&hclk_switch &clk_switch>;
+		};
+		clk_rgmii_conv_all: clk_rgmii_conv_all {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_mii_ref &clk_rmii_ref &clk_rgmii_ref &hclk_switch_rg>;
+		};
+		uart_group_34567: uart_group_34567 {
+			#clock-cells = <0>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			compatible = "renesas,rzn1-clock-bitselect";
+			/* Bit 24 is UARTCLKSEL */
+			reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2>;
+			renesas,rzn1-sel-bit = <24>;
+
+			/* If that bit is zero, use first parent, else,
+			 * use second parent */
+			clocks = <&div_p2_pg>, <&clk_48>;
+
+			/* First group are gates for when selector bit
+			 * is zero, second group is the gates to use when
+			 * bit is 'one' */
+			renesas,rzn1-gates =
+			      <RZN1_CLK_UART3_ID RZN1_CLK_UART4_ID
+				RZN1_CLK_UART5_ID RZN1_CLK_UART6_ID
+				RZN1_CLK_UART7_ID>,
+			      <RZN1_CLK_USBUART3_ID RZN1_CLK_USBUART4_ID
+				RZN1_CLK_USBUART5_ID RZN1_CLK_USBUART6_ID
+				RZN1_CLK_USBUART7_ID>;
+
+			gsclk_uart3: gsclk_uart3@0 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <0>;
+			 };
+			gsclk_uart4: gsclk_uart4@1 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <1>;
+			 };
+			gsclk_uart5: gsclk_uart5@2 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <2>;
+			 };
+			gsclk_uart6: gsclk_uart6@3 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <3>;
+			 };
+			gsclk_uart7: gsclk_uart7@4 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_34567>;
+				reg = <4>;
+			 };
+		 };
+		 uart_group_012: uart_group_012@RZN1_SYSCTRL_REG_PWRCTRL_PG0_0 {
+			#clock-cells = <0>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			compatible = "renesas,rzn1-clock-bitselect";
+			/* Bit 24 is UARTCLKSEL */
+			reg = <RZN1_SYSCTRL_REG_PWRCTRL_PG0_0>;
+			renesas,rzn1-sel-bit = <30>;
+
+			/* If that bit is zero, use first parent, else,
+			 * use second parent */
+			clocks = <&div_uart>, <&clk_48>;
+
+			/* First group are gates for when selector bit
+			 * is zero, second group is the gates to use when
+			 * bit is 'one' */
+			renesas,rzn1-gates =
+			      <RZN1_CLK_UART0_ID RZN1_CLK_UART1_ID
+				RZN1_CLK_UART2_ID>,
+			      <RZN1_CLK_USBUART0_ID RZN1_CLK_USBUART1_ID
+				RZN1_CLK_USBUART2_ID>;
+			gsclk_uart0: gsclk_uart0@0 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_012>;
+				reg = <0>;
+			 };
+			gsclk_uart1: gsclk_uart1@1 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_012>;
+				reg = <1>;
+			 };
+			gsclk_uart2: gsclk_uart2@2 {
+				#clock-cells = <0>;
+				compatible = "renesas,rzn1-clock-dualgate";
+				clocks = <&uart_group_012>;
+				reg = <2>;
+			};
+		};
+		clk_i2c0_grp: clk_i2c0_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_i2c0 &hclk_i2c0>;
+		};
+		clk_i2c1_grp: clk_i2c1_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_i2c1 &hclk_i2c1>;
+		};
+		clk_spi0_grp: clk_spi0_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi0>, <&hclk_spi0>;
+		};
+		clk_spi1_grp: clk_spi1_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi1>, <&hclk_spi1>;
+		};
+		clk_spi2_grp: clk_spi2_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi2>, <&hclk_spi2>;
+		};
+		clk_spi3_grp: clk_spi3_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi3>, <&hclk_spi3>;
+		};
+		clk_spi4_grp: clk_spi4_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi4>, <&hclk_spi4>;
+		};
+		clk_spi5_grp: clk_spi5_grp {
+			#clock-cells = <0>;
+			compatible = "renesas,rzn1-clock-group";
+			clocks = <&clk_spi5>, <&hclk_spi5>;
+		};
+	};
+
+	arm_timer: timer {
+		compatible = "arm,armv7-timer";
+		arm,cpu-registers-not-fw-configured;
+		interrupts =
+			<GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
+			<GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>;
+	};
+
+	gic: interrupt-controller@RZN1_GIC_BASE {
+		compatible = "arm,cortex-a7-gic";
+		reg = <0x44101000 0x1000>,	/* Distributer */
+		      <0x44102000 0x1000>,	/* CPU interface */
+		      <0x44104000 0x2000>,	/* Virt interface control */
+		      <0x44106000 0x2000>;	/* Virt CPU interface */
+		interrupt-controller;
+		#interrupt-cells = <3>;
+		interrupts =
+			<GIC_PPI 9 (GIC_CPU_MASK_SIMPLE(2) |
+				IRQ_TYPE_LEVEL_HIGH)>;
+	};
+
+	ipc: mailbox@RZN1_MAILBOX_BASE {
+	    compatible = "arm,pl320", "arm,primecell";
+	    reg = <RZN1_MAILBOX_BASE RZN1_MAILBOX_SIZE>;
+	    interrupts = <GIC_SPI RZN1_IRQ_IPCM_1 IRQ_TYPE_LEVEL_HIGH>;
+	    clocks = <&clk_fw>;
+	    clock-names = "apb_pclk";
+	};
+
+	gpioirq: gpioirq@RZN1_GPIO0_BASE {
+		compatible = "renesas,rzn1-gpioirq";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+
+		interrupts =
+			<GIC_SPI RZN1_IRQ_GPIO_0 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_1 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_2 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_3 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_4 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_5 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_6 IRQ_TYPE_LEVEL_HIGH>,
+			<GIC_SPI RZN1_IRQ_GPIO_7 IRQ_TYPE_LEVEL_HIGH>;
+
+		reg = <RZN1_GPIO0_BASE RZN1_GPIO0_SIZE>,
+			<RZN1_GPIO1_BASE RZN1_GPIO1_SIZE>,
+			<RZN1_GPIO2_BASE RZN1_GPIO2_SIZE>;
+		interrupt-controller;
+		#interrupt-cells = <1>;
+
+		/* gpioirq-3 = <&gpio1a 12 GPIO_ACTIVE_HIGH>; */
+	};
+
+	bus {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+		u-boot,dm-pre-reloc;
+
+		memory-controller@RZN1_DDR_BASE {
+			compatible = "cadence,ddr-ctrl";
+			reg = <RZN1_DDR_BASE RZN1_DDR_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_DDRSUB IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&clk_ddr_grp>;
+			status = "okay";
+		};
+		pinctrl: pinctrl@RZN1_PINCTRL_BASE {
+			compatible = "renesas,rzn1-pinctrl";
+			reg = <RZN1_PINCTRL_BASE RZN1_PINCTRL_SIZE>,
+				<RZN1_PINCTRL_L2_BASE RZN1_PINCTRL_L2_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+		};
+		timer0: timer@RZN1_TIMER0_BASE {
+			compatible = "renesas,rzn1-timer";
+			reg = <RZN1_TIMER0_BASE RZN1_TIMER0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_TIMER0_0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_2 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_3 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_4 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_5 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_6 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER0_7 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_timer0>;
+			renesas,use-prescaler;
+			status = "disabled";
+		};
+		timer1: timer@RZN1_TIMER1_BASE {
+			compatible = "renesas,rzn1-timer";
+			reg = <RZN1_TIMER1_BASE RZN1_TIMER1_SIZE>;
+			renesas,timer-number = <1>;
+			interrupts = <GIC_SPI RZN1_IRQ_TIMER1_0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_2 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_3 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_4 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_5 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_6 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_TIMER1_7 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_timer1>;
+			renesas,use-prescaler;
+			status = "disabled";
+		};
+		uart0: serial@RZN1_UART0_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART0_BASE RZN1_UART0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART0 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart0 &hclk_uart0>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart1: serial@RZN1_UART1_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART1_BASE RZN1_UART1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART1 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart1 &hclk_uart1>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart2: serial@RZN1_UART2_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART2_BASE RZN1_UART2_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART2 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart2 &hclk_uart2>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart3: serial@RZN1_UART3_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART3_BASE RZN1_UART3_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART3 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart3 &hclk_uart3>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart4: serial@RZN1_UART4_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART4_BASE RZN1_UART4_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART4 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart4 &hclk_uart4>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart5: serial@RZN1_UART5_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART5_BASE RZN1_UART5_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART5 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart5 &hclk_uart5>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart6: serial@RZN1_UART6_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART6_BASE RZN1_UART6_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART6 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart6 &hclk_uart6>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		uart7: serial@RZN1_UART7_BASE {
+			compatible = "snps,dw-apb-uart";
+			reg = <RZN1_UART7_BASE RZN1_UART7_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_UART7 IRQ_TYPE_LEVEL_HIGH>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+			clocks = <&gsclk_uart7 &hclk_uart7>;
+			clock-names = "baudclk", "apb_pclk";
+			status = "disabled";
+		};
+		i2c0: i2c@RZN1_I2C0_BASE {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <RZN1_I2C0_BASE RZN1_I2C0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_I2C0 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_i2c0_grp>;
+			clock-frequency = <100000>;
+			status = "disabled";
+		};
+		i2c1: i2c@RZN1_I2C1_BASE {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "snps,designware-i2c";
+			reg = <RZN1_I2C1_BASE RZN1_I2C1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_I2C1 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_i2c1_grp>;
+			clock-frequency = <100000>;
+			status = "disabled";
+		};
+		rtc0: rtc@RZN1_RTC_BASE {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			compatible = "renesas,rzn1-rtc";
+			reg = <RZN1_RTC_BASE RZN1_RTC_SIZE>;
+			clock-names = "axi";
+			clocks = <&hclk_rtc>;
+			interrupt-names = "alarm", "intr", "1hz";
+			interrupts =
+				<GIC_SPI RZN1_IRQ_RTCATINTAL IRQ_TYPE_EDGE_RISING>,
+				<GIC_SPI RZN1_IRQ_RTCATINTR IRQ_TYPE_EDGE_RISING>,
+				<GIC_SPI RZN1_IRQ_RTCATINT1S IRQ_TYPE_EDGE_RISING>;
+			status = "disabled";
+		};
+		gmac0: ethernet@RZN1_GMAC0_BASE {
+			compatible = "snps,dwmac-3.72a", "snps,dwmac";
+			reg = <RZN1_GMAC0_BASE RZN1_GMAC0_SIZE>;
+			interrupt-parent = <&gic>;
+			interrupts = <GIC_SPI RZN1_IRQ_SBD0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_LPI0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_PMT0 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-names = "macirq", "eth_lpi", "eth_wake_irq";
+			clock-names = "stmmaceth";
+			clocks = <&hclk_gmac0>;
+			status = "disabled";
+		};
+		gmac1: ethernet@RZN1_GMAC1_BASE {
+			compatible = "snps,dwmac-3.72a", "snps,dwmac";
+			reg = <RZN1_GMAC1_BASE RZN1_GMAC1_SIZE>;
+			interrupt-parent = <&gic>;
+			interrupts = <GIC_SPI RZN1_IRQ_SBD1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_LPI1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_PMT1 IRQ_TYPE_LEVEL_HIGH>;
+			interrupt-names = "macirq", "eth_lpi", "eth_wake_irq";
+			clock-names = "stmmaceth";
+			clocks = <&hclk_gmac1>;
+			status = "disabled";
+		};
+		switch: ethswitch: eth-switch@RZN1_SWITCH_BASE {
+			compatible = "mtip,5pt_switch";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_SWITCH_BASE RZN1_SWITCH_SIZE>;
+			clock-names = "fck";
+			clocks = <&clk_switch_all>;
+			status = "disabled";
+		};
+		eth_miic: eth-miic@RZN1_SWITCH_CTRL_REG_BASE {
+			compatible = "renesas,rzn1-miic";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_SWITCH_CTRL_REG_BASE RZN1_SWITCH_CTRL_REG_SIZE>;
+			status = "disabled";
+			clocks = <&clk_rgmii_conv_all>;
+		};
+
+		dma0: dma-controller@RZN1_DMA0_BASE {
+			compatible = "snps,dma-rzn1";
+			reg = <RZN1_DMA0_BASE RZN1_DMA0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_DMA0 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "hclk";
+			clocks = <&hclk_dma0>;
+			dma-channels = <8>;
+			dma-requests = <16>;
+			dma-masters = <1>;
+			#dma-cells = <3>;
+			block_size = <0xfff>;
+			data_width = <3>;
+			status = "disabled";
+		};
+		dma1: dma-controller@RZN1_DMA1_BASE {
+			compatible = "snps,dma-rzn1";
+			reg = <RZN1_DMA1_BASE RZN1_DMA1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_DMA1 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "hclk";
+			clocks = <&hclk_dma1>;
+			dma-channels = <8>;
+			dma-requests = <16>;
+			dma-masters = <1>;
+			#dma-cells = <3>;
+			block_size = <0xfff>;
+			data_width = <3>;
+			status = "disabled";
+		};
+		sdio0: sdhci@RZN1_SDIO0_BASE {
+			compatible = "arasan,sdhci-8.9a";
+			reg = <RZN1_SDIO0_BASE RZN1_SDIO0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SDIO0 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_SDIO0_WKUP IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "clk_xin", "clk_ahb";
+			clocks = <&clk_sdio0>, <&hclk_sdio0>;
+			no-1-8-v;
+			status = "disabled";
+		};
+		sdio1: sdhci@RZN1_SDIO1_BASE {
+			compatible = "arasan,sdhci-8.9a";
+			reg = <RZN1_SDIO1_BASE RZN1_SDIO1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SDIO1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI RZN1_IRQ_SDIO1_WKUP IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "clk_xin", "clk_ahb";
+			clocks = <&clk_sdio1>, <&hclk_sdio1>;
+			no-1-8-v;
+			status = "disabled";
+		};
+		qspi: qspi0: spi@RZN1_QSPI_BASE {
+			compatible = "renesas,rzn1-qspi";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_QSPI_BASE RZN1_QSPI_SIZE
+				RZN1_V_QSPI_BASE RZN1_V_QSPI_SIZE>;
+			reg-names = "qspi", "qspi-mapping";
+			interrupts = <GIC_SPI RZN1_IRQ_QSPI0 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_qspi0>, <&clk_qspi0>;
+			clock-names = "flexway", "pclk";
+			status = "disabled";
+		};
+		nand: nand@RZN1_NAND_BASE {
+			compatible = "evatronix,nandflash-ctrl";
+			reg = <RZN1_NAND_BASE RZN1_NAND_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_NAND IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_nand>, <&clk_nand>;
+			clock-names = "clka", "clkb";
+			#address-cells		= <1>;
+			#size-cells		= <1>;
+			status = "disabled";
+		};
+		/*
+		 * SPI 0-3 are Master; 4-5 are Slave. 4-16 bits data width
+		 * dw_apb-ssi is configured with 16*16 bits FIFO in both
+		 * directions.
+		 * 4 Chipselects for the master interfaces, 1 for slaves
+		 */
+		spi0: spi@RZN1_SPI0_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI0_BASE RZN1_SPI0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI0 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi0_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi1: spi@RZN1_SPI1_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI1_BASE RZN1_SPI1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI1 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi1_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi2: spi@RZN1_SPI2_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI2_BASE RZN1_SPI2_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI2 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi2_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi3: spi@RZN1_SPI3_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI3_BASE RZN1_SPI3_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI3 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi3_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <4>;
+			status = "disabled";
+		};
+		spi4: spi@RZN1_SPI4_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI4_BASE RZN1_SPI4_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI4 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi4_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <1>; /* Slave interface */
+			status = "disabled";
+		};
+		spi5: spi@RZN1_SPI5_BASE {
+			compatible = "snps,dw-apb-ssi";
+			reg = <RZN1_SPI5_BASE RZN1_SPI5_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_SPI5 IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "pclk";
+			clocks = <&clk_spi5_grp>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			num-cs = <1>; /* Slave interface */
+			status = "disabled";
+		};
+		usbphy: usbphy0: usbphy@0 {
+			#phy-cells = <0>;
+			compatible = "usb-nop-xceiv";
+			status = "disabled";
+		};
+		usbf: usbf@RZN1_USB_DEV_BASE {
+			compatible = "renesas,rzn1-usbf";
+			reg = <RZN1_USB_DEV_BASE RZN1_USB_DEV_SIZE>;
+			interrupts =
+				<GIC_SPI RZN1_IRQ_USBF_EPC IRQ_TYPE_LEVEL_HIGH>,
+				<GIC_SPI RZN1_IRQ_USBF IRQ_TYPE_LEVEL_HIGH>;
+			clock-names = "axi";
+			clocks = <&all_usbf>;
+
+			renesas,sram-size = <5024>; /* 32 bits words */
+			/* Allow 4 x 512 byte packets per endpoint to support MTU of 1500.
+			Due to protocol overheads, 3 x 512 byte packets is not enough. */
+			renesas,sram-conf,g_ether = <4 2 0>;
+			renesas,sram-conf,g_mass_storage = <8 8 0 0 0 0>;
+			status = "disabled";
+		};
+		usbh_pci: pci@RZN1_USB_HOST_BASE {
+			compatible = "renesas,pci-rzn1";
+			device_type = "pci";
+			clock-names = "axi";
+			clocks = <&all_usbh>;
+			reg = <(RZN1_USB_HOST_BASE+0x10000) 0xc00>,
+			      <RZN1_USB_HOST_BASE 0x1100>;
+			interrupts = <GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH>;
+			status = "disabled";
+
+			bus-range = <0 0>;
+			#address-cells = <3>;
+			#size-cells = <1>;
+			#interrupt-cells = <1>;
+			ranges = <0x02000000 0 RZN1_USB_HOST_BASE RZN1_USB_HOST_BASE 0x00010000>;
+			/* Should map all possible DDR as inbound ranges, but
+			   the IP only supports a 256MB, 512MB, or 1GB window */
+			/* flags, PCI addr (64-bit), CPU addr, PCI size (64-bit) */
+			dma-ranges = <0x42000000 0 0x80000000 0x80000000 0 0x40000000>;
+			interrupt-map-mask = <0xff00 0 0 0x7>;
+			interrupt-map = <0x0000 0 0 1 &gic GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH
+					 0x0800 0 0 1 &gic GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH
+					 0x1000 0 0 2 &gic GIC_SPI RZN1_IRQ_USBH_BIND IRQ_TYPE_LEVEL_HIGH>;
+
+			usb@0,1 {
+				reg = <0x800 0 0 0>;
+				device_type = "pci";
+				phys = <&usbphy 0 0>;
+				phy-names = "usb";
+			};
+
+			usb@0,2 {
+				reg = <0x1000 0 0 0>;
+				device_type = "pci";
+				phys = <&usbphy 0 0>;
+				phy-names = "usb";
+			};
+		};
+		reset: reset@RZN1_RESET_BASE {
+			reg = <RZN1_RESET_BASE RZN1_RESET_SIZE>;
+			clocks = <&hclk_pinconfig>;
+		};
+		wdtsafe0: wdtsafe0@RZN1_WATCHDOGSAFE0_BASE {
+			compatible = "renesas,rzn1-watchdogsafe";
+			reg = <RZN1_WATCHDOGSAFE0_BASE RZN1_WATCHDOGSAFE0_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_WATCHDOGSAFE0 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_pinconfig>;
+			status = "disabled";
+		};
+		wdtsafe1: wdtsafe1@RZN1_WATCHDOGSAFE1_BASE {
+			compatible = "renesas,rzn1-watchdogsafe";
+			reg = <RZN1_WATCHDOGSAFE1_BASE RZN1_WATCHDOGSAFE1_SIZE>;
+			interrupts = <GIC_SPI RZN1_IRQ_WATCHDOGSAFE1 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_pinconfig>;
+			status = "disabled";
+		};
+		/*
+		 * The GPIO mapping to the corresponding pins is complicted,
+		 * see the hardware documentation for details.
+		 */
+		gpio0: gpio@RZN1_GPIO0_BASE {
+			compatible = "snps,dw-apb-gpio";
+			reg = <RZN1_GPIO0_BASE RZN1_GPIO0_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&hclk_gpio0>;
+			status = "disabled";
+
+			gpio0a: gpio-controller@0 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio0a";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <0>;
+
+				interrupt-controller;
+				#interrupt-cells = <2>;
+				interrupt-parent = <&gpioirq>;
+				interrupts = <8>;
+			};
+			gpio0b: gpio-controller@1 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio0b";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <1>;
+			};
+		};
+		gpio1: gpio@RZN1_GPIO1_BASE {
+			compatible = "snps,dw-apb-gpio";
+			reg = <RZN1_GPIO1_BASE RZN1_GPIO1_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&hclk_gpio1>;
+			status = "disabled";
+
+			/* GPIO1a[0..4] corresponds to pins 45..49 */
+			/* GPIO1a[5..31] corresponds to pins 71..121 */
+			gpio1a: gpio-controller@0 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio1a";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <0>;
+
+				interrupt-controller;
+				#interrupt-cells = <2>;
+				interrupt-parent = <&gpioirq>;
+				interrupts = <9>;
+			};
+			/* GPIO1b[0..1] corresponds to pins 31..32 */
+			/* GPIO1b[2..4] corresponds to pins 35..37 */
+			/* GPIO1b[5..25] corresponds to pins 50..70 */
+			/* GPIO1b[26..31] corresponds to pins 150..155 */
+			gpio1b: gpio-controller@1 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio1b";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <1>;
+			};
+		};
+		gpio2: gpio@RZN1_GPIO2_BASE {
+			compatible = "snps,dw-apb-gpio";
+			reg = <RZN1_GPIO2_BASE RZN1_GPIO2_SIZE>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			clocks = <&hclk_gpio2>;
+			status = "disabled";
+
+			/* GPIO2a[0..27] corresponds to pins 122..149 */
+			/* GPIO2a[28..31] corresponds to pins 156..159 */
+			gpio2a: gpio-controller@0 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio2a";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <32>;
+				reg = <0>;
+
+				interrupt-controller;
+				#interrupt-cells = <2>;
+				interrupt-parent = <&gpioirq>;
+				interrupts = <10>;
+			};
+			/* GPIO2b[0..9] corresponds to pins 160..169 */
+			gpio2b: gpio-controller@1 {
+				compatible = "snps,dw-apb-gpio-port";
+				bank-name = "gpio2b";
+				gpio-controller;
+				#gpio-cells = <2>;
+				snps,nr-gpios = <10>;
+				reg = <1>;
+			};
+		};
+		sgpio0: gpio@RZN1_SGPIO0_BASE {
+			reg = <RZN1_SGPIO0_BASE RZN1_SGPIO0_SIZE>;
+		};
+		sgpio1: gpio@RZN1_SGPIO1_BASE {
+			reg = <RZN1_SGPIO1_BASE RZN1_SGPIO1_SIZE>;
+		};
+		can0: can@RZN1_CAN0_BASE {
+			compatible = "nxp,sja1000";
+			reg = <RZN1_CAN0_BASE RZN1_CAN0_SIZE>;
+			reg-io-width = <4>;
+			interrupts = <GIC_SPI RZN1_IRQ_CAN0 IRQ_TYPE_LEVEL_HIGH>;
+			nxp,no-cdr;
+			nxp,no-loopback;
+			clocks = <&hclk_can0>;
+			status = "disabled";
+		};
+		can1: can@RZN1_CAN1_BASE {
+			compatible = "nxp,sja1000";
+			reg = <RZN1_CAN1_BASE RZN1_CAN1_SIZE>;
+			reg-io-width = <4>;
+			interrupts = <GIC_SPI RZN1_IRQ_CAN1 IRQ_TYPE_LEVEL_HIGH>;
+			nxp,no-cdr;
+			nxp,no-loopback;
+			clocks = <&hclk_can1>;
+			status = "disabled";
+		};
+		fb0: fb@RZN1_LCD_BASE {
+			compatible = "digitalblocks,db9000-clcd";
+			interrupts = <GIC_SPI RZN1_IRQ_LCD IRQ_TYPE_LEVEL_HIGH>;
+			reg = <RZN1_LCD_BASE RZN1_LCD_SIZE>;
+			clock-names = "pclk", "ahb";
+			clocks = <&clk_slcd>, <&all_lcd>;
+			status = "disabled";
+		};
+		msebi: msebim: memory-controller@RZN1_MSEBI_M0_BASE {
+			compatible = "renesas,rzn1-msebi";
+			#address-cells = <2>;
+			#size-cells = <1>;
+			reg = <RZN1_MSEBI_M0_BASE RZN1_MSEBI_M0_SIZE>;
+			clocks = <&hclk_msebi_m>;
+			interrupts = <GIC_SPI RZN1_IRQ_MSEBIM IRQ_TYPE_LEVEL_HIGH>;
+			status = "disabled";
+		};
+
+		/* These nodes are placeholders; they are refered to by the
+		 * pinmux file, but have no driver just yet, so we create
+		 * empty nodes for them until we can flesh it up */
+		unknown: s3: dsigma: mii: motor: unknown {
+		};
+	};
+
+};
+
+#include "rzn1-clocks.dtsi"
diff --git a/arch/arm/dts/rzn1s.dtsi b/arch/arm/dts/rzn1s.dtsi
new file mode 100644
index 0000000..6e4df6d
--- /dev/null
+++ b/arch/arm/dts/rzn1s.dtsi
@@ -0,0 +1,34 @@
+/*
+ * Device Tree Source for the RZ/N1S devices.
+ *
+ * Copyright (C) 2016 Renesas Electronics Europe Ltd
+ *
+ * This file is licensed under the terms of the GNU General Public License
+ * version 2.  This program is licensed "as is" without any warranty of any
+ * kind, whether express or implied.
+ */
+
+#include "rzn1.dtsi"
+
+/ {
+	compatible = "renesas,rzn1s";
+
+	aliases {
+		spi1 = &qspi1;
+	};
+
+	bus {
+		qspi1: spi@RZN1_QSPI1_BASE {
+			compatible = "renesas,rzn1-qspi";
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <RZN1_QSPI1_BASE RZN1_QSPI_SIZE
+				RZN1_V_QSPI1_BASE RZN1_V_QSPI_SIZE>;
+			reg-names = "qspi", "qspi-mapping";
+			interrupts = <GIC_SPI RZN1_IRQ_QSPI1 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&hclk_qspi1>, <&clk_qspi1>;
+			clock-names = "flexway", "pclk";
+			status = "disabled";
+		};
+	};
+};
diff --git a/arch/arm/include/asm/arch-rzn1/gpio.h b/arch/arm/include/asm/arch-rzn1/gpio.h
new file mode 100644
index 0000000..763babd
--- /dev/null
+++ b/arch/arm/include/asm/arch-rzn1/gpio.h
@@ -0,0 +1,12 @@
+/*
+* Copyright (C) 2016 Renesas Electronics Europe Ltd
+*
+* SPDX-License-Identifier:	GPL-2.0+
+*/
+
+#ifndef _RZN1_GPIO_H_
+#define _RZN1_GPIO_H_
+
+#include <asm-generic/gpio.h>
+
+#endif /* _RZN1_GPIO_H_ */
diff --git a/include/configs/rzn1-common.h b/include/configs/rzn1-common.h
new file mode 100644
index 0000000..38b3691
--- /dev/null
+++ b/include/configs/rzn1-common.h
@@ -0,0 +1,98 @@
+/*
+ * (C) Copyright 2016 Renesas Electronics Europe Ltd
+ * Phil Edworthy <phil.edworthy@renesas.com>
+ *
+ * Renesas RZ/N1 device configuration - you should not change these!
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __RZN1_COMMON_H
+#define __RZN1_COMMON_H
+
+#include "renesas/rzn1-memory-map.h"
+
+#define CONFIG_CORTEX_A7
+#define CONFIG_SMP_PEN_WFE
+#define CONFIG_BOARD_EARLY_INIT_F
+#ifndef CONFIG_ARCH_RZN1L
+ #define CONFIG_SYS_CACHELINE_SIZE	64	/* Needed by DFU */
+#endif
+
+/* Clocks. All but the ARM timer clock are used to program clock dividers */
+/* ARM timer clock, this is fixed */
+#define CONFIG_SYS_HZ_CLOCK		6250000
+#define CONFIG_SYS_CLK_FREQ		CONFIG_SYS_HZ_CLOCK
+
+/*
+ * UART clock. The PLL can go up 83.33MHz, but you need to use a specific PLL
+ * setting to achieve the required accuracy at high bitrates. All of the clock
+ * rates below are ok for use up to 115200 in addition to those listed.
+ * Note that U-Boot cannot receive data above 1Mbps due to lack of hardware flow
+ * control on UART0 and CPU not being able to read the data quick enough.
+ * 14705882Hz achieves < 0.3% error for 230.4K, 460.8K and 921.6K bitrates.
+ * 47619047Hz achieves < 0.8% error for 1M, 1.5M and 3M bitrates.
+ * 55555555Hz achieves < 0.8% error for 1.152M and 3.5M bitrates.
+ */
+#define CONFIG_SYS_NS16550_CLK		20000000
+
+/* 83.33MHz NAND Flash Ctrl clock, fastest as NAND is an async i/f. */
+#define CONFIG_SYS_NAND_CLOCK		83333333
+
+/* 250MHz QSPI Ctrl clock. The driver divides to meet the requested
+ * SPI clock. This sysctrl divider can divide by any number, whereas
+ * the divider in the IP can only divide by even numbers. However,
+ * Cadence recommend the IP divider is set to a minimum of 4 and the
+ * SPI clock maximum is 62.5MHz. With this setting you can get SPI
+ * clocks of 62.5MHz, 31.25MHz, etc.
+ */
+#define CONFIG_CQSPI_REF_CLK		250000000
+
+/* 83.33MHz I2C clock */
+#define IC_CLK				83
+
+/* 50MHz SDHCI clock */
+#define SDHC_CLK_MHZ			50
+
+
+/* SRAM */
+#define CONFIG_SYS_SRAM_BASE		RZN1_SRAM_ID_BASE
+#define CONFIG_SYS_SRAM_SIZE		RZN1_SRAM_ID_SIZE
+
+/* DDR Memory */
+#ifdef CONFIG_ARCH_RZN1D
+#define CONFIG_CADENCE_DDR_CTRL
+#define CONFIG_SYS_SDRAM_BASE		RZN1_V_DDR_BASE
+#define CONFIG_NR_DRAM_BANKS		1
+#define CONFIG_SYS_SDRAM_SIZE		(256 * 1024 * 1024)
+#endif
+
+/* Serial */
+#define CONFIG_SYS_NS16550_MEM32
+
+/* Serial: sensible defaults */
+#define CONFIG_SYS_CBSIZE		256
+#define CONFIG_SYS_MAXARGS		16
+#define CONFIG_SYS_BAUDRATE_TABLE	{ 57600, 115200, 1000000 }
+
+/* SPI */
+#define CONFIG_SPI_REGISTER_FLASH	/* required */
+
+/* NAND Flash */
+#define CONFIG_SYS_NO_FLASH
+#define CONFIG_SYS_NAND_BASE		RZN1_NAND_BASE
+#define CONFIG_SYS_NAND_SELF_INIT
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+
+/* NAND: sensible defaults */
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+
+/* Timer */
+#define CONFIG_SYS_ARCH_TIMER
+
+/* Ethernet */
+#define CONFIG_DW_ALTDESCRIPTOR
+
+#define CONFIG_SYS_BOOTM_LEN	(64 << 20)	/* Increase max gunzip size */
+
+#endif /* RZN1_COMMON_H */
diff --git a/include/configs/rzn1-spl.h b/include/configs/rzn1-spl.h
new file mode 100644
index 0000000..2f9d70c
--- /dev/null
+++ b/include/configs/rzn1-spl.h
@@ -0,0 +1,26 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ * Phil Edworthy <phil.edworthy@renesas.com>
+ *
+ * Renesas RZ/N1 device configuration for SPL builds - you should not change these!
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __RZN1_SPL_H
+#define __RZN1_SPL_H
+
+#define CONFIG_SPL_FRAMEWORK
+#define CONFIG_SPL_BOARD_INIT
+
+/* This is required to fish the ethernet addresses from the environment */
+#if defined(RZN1_ENABLE_ETHERNET)
+#define CONFIG_SPL_ENV_SUPPORT
+#endif
+
+#if defined(CONFIG_SPL_NAND_LOAD)
+	#define CONFIG_SPL_NAND_DRIVERS
+	#define CONFIG_SPL_NAND_ONFI
+#endif
+
+#endif /* RZN1_SPL_H */
diff --git a/include/renesas/jedec_ddr2_1g_x16_533c_250_CL4.h b/include/renesas/jedec_ddr2_1g_x16_533c_250_CL4.h
new file mode 100755
index 0000000..6b7db0d
--- /dev/null
+++ b/include/renesas/jedec_ddr2_1g_x16_533c_250_CL4.h
@@ -0,0 +1,400 @@
+
+/* ****************************************************************
+ *        CADENCE                    Copyright (c) 2001-2011      *
+ *                                   Cadence Design Systems, Inc. *
+ *                                   All rights reserved.         *
+ *                                                                *
+ ******************************************************************
+ *  The values calculated from this script are meant to be        *
+ *  representative programmings.   The values may not reflect the *
+ *  actual required programming for production use.   Please      *
+ *  closely review all programmed values for technical accuracy   *
+ *  before use in production parts.                               *
+ ******************************************************************
+ *                                                                 
+ *   Module:         regconfig.h
+ *   Documentation:  Register programming header file
+ *
+ ******************************************************************
+ ******************************************************************
+ * WARNING:  This file was automatically generated.  Manual
+ * editing may result in undetermined behavior.
+ ******************************************************************
+ ******************************************************************/
+
+
+#define               DENALI_CTL_00_DATA 0x00000400
+#define               DENALI_CTL_01_DATA 0x00000000
+#define               DENALI_CTL_02_DATA 0x00000000
+#define               DENALI_CTL_03_DATA 0x00000000
+#define               DENALI_CTL_04_DATA 0x00000000
+#define               DENALI_CTL_05_DATA 0x00000000
+#define               DENALI_CTL_06_DATA 0x00000000
+#define               DENALI_CTL_07_DATA 0x0000c350
+#define               DENALI_CTL_08_DATA 0x00000032
+#define               DENALI_CTL_09_DATA 0x0000007d
+#define               DENALI_CTL_10_DATA 0x00006402
+#define               DENALI_CTL_11_DATA 0x080000c8
+#define               DENALI_CTL_12_DATA 0x02040003
+#define               DENALI_CTL_13_DATA 0x020c0f03
+#define               DENALI_CTL_14_DATA 0x02020d04
+#define               DENALI_CTL_15_DATA 0x00445c03
+#define               DENALI_CTL_16_DATA 0x04000303
+#define               DENALI_CTL_17_DATA 0x01010004
+#define               DENALI_CTL_18_DATA 0x00050308
+#define               DENALI_CTL_19_DATA 0x01000000
+#define               DENALI_CTL_20_DATA 0x07990020
+#define               DENALI_CTL_21_DATA 0x00000005
+#define               DENALI_CTL_22_DATA 0x000a0002
+#define               DENALI_CTL_23_DATA 0x00060002
+#define               DENALI_CTL_24_DATA 0x002300c8
+#define               DENALI_CTL_25_DATA 0x00010000
+#define               DENALI_CTL_26_DATA 0x00030300
+#define               DENALI_CTL_27_DATA 0x00000000
+#define               DENALI_CTL_28_DATA 0x00000000
+#define               DENALI_CTL_29_DATA 0x00000000
+#define               DENALI_CTL_30_DATA 0x00000000
+#define               DENALI_CTL_31_DATA 0x00064300
+#define               DENALI_CTL_32_DATA 0x00000004
+#define               DENALI_CTL_33_DATA 0x00000000
+#define               DENALI_CTL_34_DATA 0x00040643
+#define               DENALI_CTL_35_DATA 0x00000000
+#define               DENALI_CTL_36_DATA 0x00010000
+#define               DENALI_CTL_37_DATA 0x00000000
+#define               DENALI_CTL_38_DATA 0x00000000
+#define               DENALI_CTL_39_DATA 0x00000000
+#define               DENALI_CTL_40_DATA 0x00000000
+#define               DENALI_CTL_41_DATA 0x00000000
+#define               DENALI_CTL_42_DATA 0x00000000
+#define               DENALI_CTL_43_DATA 0x00000000
+#define               DENALI_CTL_44_DATA 0x00000000
+#define               DENALI_CTL_45_DATA 0x01000200
+#define               DENALI_CTL_46_DATA 0x02000040
+#define               DENALI_CTL_47_DATA 0x00000040
+#define               DENALI_CTL_48_DATA 0x03000100
+#define               DENALI_CTL_49_DATA 0xffff0a01
+#define               DENALI_CTL_50_DATA 0x01010101
+#define               DENALI_CTL_51_DATA 0x01010101
+#define               DENALI_CTL_52_DATA 0x01030101
+#define               DENALI_CTL_53_DATA 0x0c030000
+#define               DENALI_CTL_54_DATA 0x00000000
+#define               DENALI_CTL_55_DATA 0x00000100
+#define               DENALI_CTL_56_DATA 0x00000000
+#define               DENALI_CTL_57_DATA 0x00000000
+#define               DENALI_CTL_58_DATA 0x00000000
+#define               DENALI_CTL_59_DATA 0x00000000
+#define               DENALI_CTL_60_DATA 0x00000000
+#define               DENALI_CTL_61_DATA 0x00000000
+#define               DENALI_CTL_62_DATA 0x01010000
+#define               DENALI_CTL_63_DATA 0x05030202
+#define               DENALI_CTL_64_DATA 0x01000105
+#define               DENALI_CTL_65_DATA 0x00000000
+#define               DENALI_CTL_66_DATA 0x02020202
+#define               DENALI_CTL_67_DATA 0x00000200
+#define               DENALI_CTL_68_DATA 0x00000000
+#define               DENALI_CTL_69_DATA 0x00000000
+#define               DENALI_CTL_70_DATA 0x00000000
+#define               DENALI_CTL_71_DATA 0x00280d00
+#define               DENALI_CTL_72_DATA 0x00000000
+#define               DENALI_CTL_73_DATA 0x00000100
+#define               DENALI_CTL_74_DATA 0x00010001
+#define               DENALI_CTL_75_DATA 0x00000000
+#define               DENALI_CTL_76_DATA 0x00000000
+#define               DENALI_CTL_77_DATA 0x00000000
+#define               DENALI_CTL_78_DATA 0x00000000
+#define               DENALI_CTL_79_DATA 0x001b1b00
+#define               DENALI_CTL_80_DATA 0x00000001
+#define               DENALI_CTL_81_DATA 0x00000000
+#define               DENALI_CTL_82_DATA 0x00000000
+#define               DENALI_CTL_83_DATA 0x00011b1b
+#define               DENALI_CTL_84_DATA 0x00000000
+#define               DENALI_CTL_85_DATA 0x00000000
+#define               DENALI_CTL_86_DATA 0x001b1b00
+#define               DENALI_CTL_87_DATA 0x02020001
+#define               DENALI_CTL_88_DATA 0x00020200
+#define               DENALI_CTL_89_DATA 0x02000202
+#define               DENALI_CTL_90_DATA 0x01000002
+#define               DENALI_CTL_91_DATA 0x00000000
+#define               DENALI_CTL_92_DATA 0x0003ffff
+#define               DENALI_CTL_93_DATA 0x00000000
+#define               DENALI_CTL_94_DATA 0x0003ffff
+#define               DENALI_CTL_95_DATA 0x00000000
+#define               DENALI_CTL_96_DATA 0x0003ffff
+#define               DENALI_CTL_97_DATA 0x00000000
+#define               DENALI_CTL_98_DATA 0x0003ffff
+#define               DENALI_CTL_99_DATA 0x00000000
+#define              DENALI_CTL_100_DATA 0x0003ffff
+#define              DENALI_CTL_101_DATA 0x00000000
+#define              DENALI_CTL_102_DATA 0x0003ffff
+#define              DENALI_CTL_103_DATA 0x00000000
+#define              DENALI_CTL_104_DATA 0x0003ffff
+#define              DENALI_CTL_105_DATA 0x00000000
+#define              DENALI_CTL_106_DATA 0x0003ffff
+#define              DENALI_CTL_107_DATA 0x00000000
+#define              DENALI_CTL_108_DATA 0x0003ffff
+#define              DENALI_CTL_109_DATA 0x00000000
+#define              DENALI_CTL_110_DATA 0x0003ffff
+#define              DENALI_CTL_111_DATA 0x00000000
+#define              DENALI_CTL_112_DATA 0x0003ffff
+#define              DENALI_CTL_113_DATA 0x00000000
+#define              DENALI_CTL_114_DATA 0x0003ffff
+#define              DENALI_CTL_115_DATA 0x00000000
+#define              DENALI_CTL_116_DATA 0x0003ffff
+#define              DENALI_CTL_117_DATA 0x00000000
+#define              DENALI_CTL_118_DATA 0x0003ffff
+#define              DENALI_CTL_119_DATA 0x00000000
+#define              DENALI_CTL_120_DATA 0x0003ffff
+#define              DENALI_CTL_121_DATA 0x00000000
+#define              DENALI_CTL_122_DATA 0x0003ffff
+#define              DENALI_CTL_123_DATA 0x00000000
+#define              DENALI_CTL_124_DATA 0x0003ffff
+#define              DENALI_CTL_125_DATA 0x00000000
+#define              DENALI_CTL_126_DATA 0x0003ffff
+#define              DENALI_CTL_127_DATA 0x00000000
+#define              DENALI_CTL_128_DATA 0x0003ffff
+#define              DENALI_CTL_129_DATA 0x00000000
+#define              DENALI_CTL_130_DATA 0x0003ffff
+#define              DENALI_CTL_131_DATA 0x00000000
+#define              DENALI_CTL_132_DATA 0x0003ffff
+#define              DENALI_CTL_133_DATA 0x00000000
+#define              DENALI_CTL_134_DATA 0x0003ffff
+#define              DENALI_CTL_135_DATA 0x00000000
+#define              DENALI_CTL_136_DATA 0x0003ffff
+#define              DENALI_CTL_137_DATA 0x00000000
+#define              DENALI_CTL_138_DATA 0x0003ffff
+#define              DENALI_CTL_139_DATA 0x00000000
+#define              DENALI_CTL_140_DATA 0x0003ffff
+#define              DENALI_CTL_141_DATA 0x00000000
+#define              DENALI_CTL_142_DATA 0x0003ffff
+#define              DENALI_CTL_143_DATA 0x00000000
+#define              DENALI_CTL_144_DATA 0x0003ffff
+#define              DENALI_CTL_145_DATA 0x00000000
+#define              DENALI_CTL_146_DATA 0x0003ffff
+#define              DENALI_CTL_147_DATA 0x00000000
+#define              DENALI_CTL_148_DATA 0x0003ffff
+#define              DENALI_CTL_149_DATA 0x00000000
+#define              DENALI_CTL_150_DATA 0x0003ffff
+#define              DENALI_CTL_151_DATA 0x00000000
+#define              DENALI_CTL_152_DATA 0x0003ffff
+#define              DENALI_CTL_153_DATA 0x00000000
+#define              DENALI_CTL_154_DATA 0x0003ffff
+#define              DENALI_CTL_155_DATA 0x00000000
+#define              DENALI_CTL_156_DATA 0x0003ffff
+#define              DENALI_CTL_157_DATA 0x00000000
+#define              DENALI_CTL_158_DATA 0x0003ffff
+#define              DENALI_CTL_159_DATA 0x00000000
+#define              DENALI_CTL_160_DATA 0x0003ffff
+#define              DENALI_CTL_161_DATA 0x00000000
+#define              DENALI_CTL_162_DATA 0x0003ffff
+#define              DENALI_CTL_163_DATA 0x00000000
+#define              DENALI_CTL_164_DATA 0x0003ffff
+#define              DENALI_CTL_165_DATA 0x00000000
+#define              DENALI_CTL_166_DATA 0x0003ffff
+#define              DENALI_CTL_167_DATA 0x00000000
+#define              DENALI_CTL_168_DATA 0x0003ffff
+#define              DENALI_CTL_169_DATA 0x00000000
+#define              DENALI_CTL_170_DATA 0x0003ffff
+#define              DENALI_CTL_171_DATA 0x00000000
+#define              DENALI_CTL_172_DATA 0x0003ffff
+#define              DENALI_CTL_173_DATA 0x00000000
+#define              DENALI_CTL_174_DATA 0x0003ffff
+#define              DENALI_CTL_175_DATA 0x00000000
+#define              DENALI_CTL_176_DATA 0x0003ffff
+#define              DENALI_CTL_177_DATA 0x00000000
+#define              DENALI_CTL_178_DATA 0x0003ffff
+#define              DENALI_CTL_179_DATA 0x00000000
+#define              DENALI_CTL_180_DATA 0x0003ffff
+#define              DENALI_CTL_181_DATA 0x00000000
+#define              DENALI_CTL_182_DATA 0x0003ffff
+#define              DENALI_CTL_183_DATA 0x00000000
+#define              DENALI_CTL_184_DATA 0x0003ffff
+#define              DENALI_CTL_185_DATA 0x00000000
+#define              DENALI_CTL_186_DATA 0x0003ffff
+#define              DENALI_CTL_187_DATA 0x00000000
+#define              DENALI_CTL_188_DATA 0x0003ffff
+#define              DENALI_CTL_189_DATA 0x00000000
+#define              DENALI_CTL_190_DATA 0x0003ffff
+#define              DENALI_CTL_191_DATA 0x00000000
+#define              DENALI_CTL_192_DATA 0x0003ffff
+#define              DENALI_CTL_193_DATA 0x00000000
+#define              DENALI_CTL_194_DATA 0x0003ffff
+#define              DENALI_CTL_195_DATA 0x00000000
+#define              DENALI_CTL_196_DATA 0x0003ffff
+#define              DENALI_CTL_197_DATA 0x00000000
+#define              DENALI_CTL_198_DATA 0x0003ffff
+#define              DENALI_CTL_199_DATA 0x00000000
+#define              DENALI_CTL_200_DATA 0x0003ffff
+#define              DENALI_CTL_201_DATA 0x00000000
+#define              DENALI_CTL_202_DATA 0x0003ffff
+#define              DENALI_CTL_203_DATA 0x00000000
+#define              DENALI_CTL_204_DATA 0x0003ffff
+#define              DENALI_CTL_205_DATA 0x00000000
+#define              DENALI_CTL_206_DATA 0x0003ffff
+#define              DENALI_CTL_207_DATA 0x00000000
+#define              DENALI_CTL_208_DATA 0x0003ffff
+#define              DENALI_CTL_209_DATA 0x00000000
+#define              DENALI_CTL_210_DATA 0x0003ffff
+#define              DENALI_CTL_211_DATA 0x00000000
+#define              DENALI_CTL_212_DATA 0x0003ffff
+#define              DENALI_CTL_213_DATA 0x00000000
+#define              DENALI_CTL_214_DATA 0x0003ffff
+#define              DENALI_CTL_215_DATA 0x00000000
+#define              DENALI_CTL_216_DATA 0x0003ffff
+#define              DENALI_CTL_217_DATA 0x00000000
+#define              DENALI_CTL_218_DATA 0x0303ffff
+#define              DENALI_CTL_219_DATA 0xffffffff
+#define              DENALI_CTL_220_DATA 0x00030f0f
+#define              DENALI_CTL_221_DATA 0xffffffff
+#define              DENALI_CTL_222_DATA 0x00030f0f
+#define              DENALI_CTL_223_DATA 0xffffffff
+#define              DENALI_CTL_224_DATA 0x00030f0f
+#define              DENALI_CTL_225_DATA 0xffffffff
+#define              DENALI_CTL_226_DATA 0x00030f0f
+#define              DENALI_CTL_227_DATA 0xffffffff
+#define              DENALI_CTL_228_DATA 0x00030f0f
+#define              DENALI_CTL_229_DATA 0xffffffff
+#define              DENALI_CTL_230_DATA 0x00030f0f
+#define              DENALI_CTL_231_DATA 0xffffffff
+#define              DENALI_CTL_232_DATA 0x00030f0f
+#define              DENALI_CTL_233_DATA 0xffffffff
+#define              DENALI_CTL_234_DATA 0x00030f0f
+#define              DENALI_CTL_235_DATA 0xffffffff
+#define              DENALI_CTL_236_DATA 0x00030f0f
+#define              DENALI_CTL_237_DATA 0xffffffff
+#define              DENALI_CTL_238_DATA 0x00030f0f
+#define              DENALI_CTL_239_DATA 0xffffffff
+#define              DENALI_CTL_240_DATA 0x00030f0f
+#define              DENALI_CTL_241_DATA 0xffffffff
+#define              DENALI_CTL_242_DATA 0x00030f0f
+#define              DENALI_CTL_243_DATA 0xffffffff
+#define              DENALI_CTL_244_DATA 0x00030f0f
+#define              DENALI_CTL_245_DATA 0xffffffff
+#define              DENALI_CTL_246_DATA 0x00030f0f
+#define              DENALI_CTL_247_DATA 0xffffffff
+#define              DENALI_CTL_248_DATA 0x00030f0f
+#define              DENALI_CTL_249_DATA 0xffffffff
+#define              DENALI_CTL_250_DATA 0x00030f0f
+#define              DENALI_CTL_251_DATA 0xffffffff
+#define              DENALI_CTL_252_DATA 0x00030f0f
+#define              DENALI_CTL_253_DATA 0xffffffff
+#define              DENALI_CTL_254_DATA 0x00030f0f
+#define              DENALI_CTL_255_DATA 0xffffffff
+#define              DENALI_CTL_256_DATA 0x00030f0f
+#define              DENALI_CTL_257_DATA 0xffffffff
+#define              DENALI_CTL_258_DATA 0x00030f0f
+#define              DENALI_CTL_259_DATA 0xffffffff
+#define              DENALI_CTL_260_DATA 0x00030f0f
+#define              DENALI_CTL_261_DATA 0xffffffff
+#define              DENALI_CTL_262_DATA 0x00030f0f
+#define              DENALI_CTL_263_DATA 0xffffffff
+#define              DENALI_CTL_264_DATA 0x00030f0f
+#define              DENALI_CTL_265_DATA 0xffffffff
+#define              DENALI_CTL_266_DATA 0x00030f0f
+#define              DENALI_CTL_267_DATA 0xffffffff
+#define              DENALI_CTL_268_DATA 0x00030f0f
+#define              DENALI_CTL_269_DATA 0xffffffff
+#define              DENALI_CTL_270_DATA 0x00030f0f
+#define              DENALI_CTL_271_DATA 0xffffffff
+#define              DENALI_CTL_272_DATA 0x00030f0f
+#define              DENALI_CTL_273_DATA 0xffffffff
+#define              DENALI_CTL_274_DATA 0x00030f0f
+#define              DENALI_CTL_275_DATA 0xffffffff
+#define              DENALI_CTL_276_DATA 0x00030f0f
+#define              DENALI_CTL_277_DATA 0xffffffff
+#define              DENALI_CTL_278_DATA 0x00030f0f
+#define              DENALI_CTL_279_DATA 0xffffffff
+#define              DENALI_CTL_280_DATA 0x00030f0f
+#define              DENALI_CTL_281_DATA 0xffffffff
+#define              DENALI_CTL_282_DATA 0x00030f0f
+#define              DENALI_CTL_283_DATA 0xffffffff
+#define              DENALI_CTL_284_DATA 0x00030f0f
+#define              DENALI_CTL_285_DATA 0xffffffff
+#define              DENALI_CTL_286_DATA 0x00030f0f
+#define              DENALI_CTL_287_DATA 0xffffffff
+#define              DENALI_CTL_288_DATA 0x00030f0f
+#define              DENALI_CTL_289_DATA 0xffffffff
+#define              DENALI_CTL_290_DATA 0x00030f0f
+#define              DENALI_CTL_291_DATA 0xffffffff
+#define              DENALI_CTL_292_DATA 0x00030f0f
+#define              DENALI_CTL_293_DATA 0xffffffff
+#define              DENALI_CTL_294_DATA 0x00030f0f
+#define              DENALI_CTL_295_DATA 0xffffffff
+#define              DENALI_CTL_296_DATA 0x00030f0f
+#define              DENALI_CTL_297_DATA 0xffffffff
+#define              DENALI_CTL_298_DATA 0x00030f0f
+#define              DENALI_CTL_299_DATA 0xffffffff
+#define              DENALI_CTL_300_DATA 0x00030f0f
+#define              DENALI_CTL_301_DATA 0xffffffff
+#define              DENALI_CTL_302_DATA 0x00030f0f
+#define              DENALI_CTL_303_DATA 0xffffffff
+#define              DENALI_CTL_304_DATA 0x00030f0f
+#define              DENALI_CTL_305_DATA 0xffffffff
+#define              DENALI_CTL_306_DATA 0x00030f0f
+#define              DENALI_CTL_307_DATA 0xffffffff
+#define              DENALI_CTL_308_DATA 0x00030f0f
+#define              DENALI_CTL_309_DATA 0xffffffff
+#define              DENALI_CTL_310_DATA 0x00030f0f
+#define              DENALI_CTL_311_DATA 0xffffffff
+#define              DENALI_CTL_312_DATA 0x00030f0f
+#define              DENALI_CTL_313_DATA 0xffffffff
+#define              DENALI_CTL_314_DATA 0x00030f0f
+#define              DENALI_CTL_315_DATA 0xffffffff
+#define              DENALI_CTL_316_DATA 0x00030f0f
+#define              DENALI_CTL_317_DATA 0xffffffff
+#define              DENALI_CTL_318_DATA 0x00030f0f
+#define              DENALI_CTL_319_DATA 0xffffffff
+#define              DENALI_CTL_320_DATA 0x00030f0f
+#define              DENALI_CTL_321_DATA 0xffffffff
+#define              DENALI_CTL_322_DATA 0x00030f0f
+#define              DENALI_CTL_323_DATA 0xffffffff
+#define              DENALI_CTL_324_DATA 0x00030f0f
+#define              DENALI_CTL_325_DATA 0xffffffff
+#define              DENALI_CTL_326_DATA 0x00030f0f
+#define              DENALI_CTL_327_DATA 0xffffffff
+#define              DENALI_CTL_328_DATA 0x00030f0f
+#define              DENALI_CTL_329_DATA 0xffffffff
+#define              DENALI_CTL_330_DATA 0x00030f0f
+#define              DENALI_CTL_331_DATA 0xffffffff
+#define              DENALI_CTL_332_DATA 0x00030f0f
+#define              DENALI_CTL_333_DATA 0xffffffff
+#define              DENALI_CTL_334_DATA 0x00030f0f
+#define              DENALI_CTL_335_DATA 0xffffffff
+#define              DENALI_CTL_336_DATA 0x00030f0f
+#define              DENALI_CTL_337_DATA 0xffffffff
+#define              DENALI_CTL_338_DATA 0x00030f0f
+#define              DENALI_CTL_339_DATA 0xffffffff
+#define              DENALI_CTL_340_DATA 0x00030f0f
+#define              DENALI_CTL_341_DATA 0xffffffff
+#define              DENALI_CTL_342_DATA 0x00030f0f
+#define              DENALI_CTL_343_DATA 0xffffffff
+#define              DENALI_CTL_344_DATA 0x00030f0f
+#define              DENALI_CTL_345_DATA 0xffffffff
+#define              DENALI_CTL_346_DATA 0x32030f0f
+#define              DENALI_CTL_347_DATA 0x01320001
+#define              DENALI_CTL_348_DATA 0x00013200
+#define              DENALI_CTL_349_DATA 0x00000132
+#define              DENALI_CTL_350_DATA 0x00000000
+#define              DENALI_CTL_351_DATA 0x000c0000
+#define              DENALI_CTL_352_DATA 0x0f320000
+#define              DENALI_CTL_353_DATA 0x02000200
+#define              DENALI_CTL_354_DATA 0x02000200
+#define              DENALI_CTL_355_DATA 0x00000f32
+#define              DENALI_CTL_356_DATA 0x00004bfa
+#define              DENALI_CTL_357_DATA 0x00020304
+#define              DENALI_CTL_358_DATA 0x000a0a01
+#define              DENALI_CTL_359_DATA 0x00000000
+#define              DENALI_CTL_360_DATA 0x00000000
+#define              DENALI_CTL_361_DATA 0x04038000
+#define              DENALI_CTL_362_DATA 0x07030a07
+#define              DENALI_CTL_363_DATA 0x00ffff19
+#define              DENALI_CTL_364_DATA 0x000f0010
+#define              DENALI_CTL_365_DATA 0x00000000
+#define              DENALI_CTL_366_DATA 0x00000000
+#define              DENALI_CTL_367_DATA 0x00000000
+#define              DENALI_CTL_368_DATA 0x00000000
+#define              DENALI_CTL_369_DATA 0x00000000
+#define              DENALI_CTL_370_DATA 0x00000204
+#define              DENALI_CTL_371_DATA 0x00000000
+#define              DENALI_CTL_372_DATA 0x01000001
+#define              DENALI_CTL_373_DATA 0x00000001
+#define              DENALI_CTL_374_DATA 0x00000000
diff --git a/include/renesas/jedec_ddr3_2g_x16_1333h_500_cl8.h b/include/renesas/jedec_ddr3_2g_x16_1333h_500_cl8.h
new file mode 100644
index 0000000..1231aeb
--- /dev/null
+++ b/include/renesas/jedec_ddr3_2g_x16_1333h_500_cl8.h
@@ -0,0 +1,400 @@
+
+/* ****************************************************************
+ *        CADENCE                    Copyright (c) 2001-2011      *
+ *                                   Cadence Design Systems, Inc. *
+ *                                   All rights reserved.         *
+ *                                                                *
+ ******************************************************************
+ *  The values calculated from this script are meant to be        *
+ *  representative programmings.   The values may not reflect the *
+ *  actual required programming for production use.   Please      *
+ *  closely review all programmed values for technical accuracy   *
+ *  before use in production parts.                               *
+ ******************************************************************
+ *                                                                 
+ *   Module:         regconfig.h
+ *   Documentation:  Register programming header file
+ *
+ ******************************************************************
+ ******************************************************************
+ * WARNING:  This file was automatically generated.  Manual
+ * editing may result in undetermined behavior.
+ ******************************************************************
+ ******************************************************************/
+
+
+#define               DENALI_CTL_00_DATA 0x00000600
+#define               DENALI_CTL_01_DATA 0x00000000
+#define               DENALI_CTL_02_DATA 0x00000000
+#define               DENALI_CTL_03_DATA 0x00000000
+#define               DENALI_CTL_04_DATA 0x00000000
+#define               DENALI_CTL_05_DATA 0x00000000
+#define               DENALI_CTL_06_DATA 0x00000000
+#define               DENALI_CTL_07_DATA 0x00000005
+#define               DENALI_CTL_08_DATA 0x000186a0
+#define               DENALI_CTL_09_DATA 0x0003d090
+#define               DENALI_CTL_10_DATA 0x00000000
+#define               DENALI_CTL_11_DATA 0x10000200
+#define               DENALI_CTL_12_DATA 0x04040006
+#define               DENALI_CTL_13_DATA 0x04121904
+#define               DENALI_CTL_14_DATA 0x04041707
+#define               DENALI_CTL_15_DATA 0x00891c0c
+#define               DENALI_CTL_16_DATA 0x07000503
+#define               DENALI_CTL_17_DATA 0x01010008
+#define               DENALI_CTL_18_DATA 0x0007030f
+#define               DENALI_CTL_19_DATA 0x01000000
+#define               DENALI_CTL_20_DATA 0x0f340050
+#define               DENALI_CTL_21_DATA 0x00000005
+#define               DENALI_CTL_22_DATA 0x000c0003
+#define               DENALI_CTL_23_DATA 0x00000000
+#define               DENALI_CTL_24_DATA 0x00550200
+#define               DENALI_CTL_25_DATA 0x00010000
+#define               DENALI_CTL_26_DATA 0x00050500
+#define               DENALI_CTL_27_DATA 0x00000000
+#define               DENALI_CTL_28_DATA 0x00000000
+#define               DENALI_CTL_29_DATA 0x00000000
+#define               DENALI_CTL_30_DATA 0x00000000
+#define               DENALI_CTL_31_DATA 0x00084000
+#define               DENALI_CTL_32_DATA 0x00080046
+#define               DENALI_CTL_33_DATA 0x00000000
+#define               DENALI_CTL_34_DATA 0x00460840
+#define               DENALI_CTL_35_DATA 0x00000008
+#define               DENALI_CTL_36_DATA 0x00010000
+#define               DENALI_CTL_37_DATA 0x00000000
+#define               DENALI_CTL_38_DATA 0x00000000
+#define               DENALI_CTL_39_DATA 0x00000000
+#define               DENALI_CTL_40_DATA 0x00000000
+#define               DENALI_CTL_41_DATA 0x00000000
+#define               DENALI_CTL_42_DATA 0x00000000
+#define               DENALI_CTL_43_DATA 0x00000000
+#define               DENALI_CTL_44_DATA 0x00000000
+#define               DENALI_CTL_45_DATA 0x01000200
+#define               DENALI_CTL_46_DATA 0x02000040
+#define               DENALI_CTL_47_DATA 0x00000040
+#define               DENALI_CTL_48_DATA 0x02000100
+#define               DENALI_CTL_49_DATA 0xffff0a01
+#define               DENALI_CTL_50_DATA 0x01010101
+#define               DENALI_CTL_51_DATA 0x01010101
+#define               DENALI_CTL_52_DATA 0x01030101
+#define               DENALI_CTL_53_DATA 0x0c030000
+#define               DENALI_CTL_54_DATA 0x00000000
+#define               DENALI_CTL_55_DATA 0x00000100
+#define               DENALI_CTL_56_DATA 0x00000000
+#define               DENALI_CTL_57_DATA 0x00000000
+#define               DENALI_CTL_58_DATA 0x00000000
+#define               DENALI_CTL_59_DATA 0x00000000
+#define               DENALI_CTL_60_DATA 0x00000000
+#define               DENALI_CTL_61_DATA 0x00000000
+#define               DENALI_CTL_62_DATA 0x01020000
+#define               DENALI_CTL_63_DATA 0x06050201
+#define               DENALI_CTL_64_DATA 0x02000106
+#define               DENALI_CTL_65_DATA 0x00000000
+#define               DENALI_CTL_66_DATA 0x02020202
+#define               DENALI_CTL_67_DATA 0x00000200
+#define               DENALI_CTL_68_DATA 0x00000000
+#define               DENALI_CTL_69_DATA 0x00000000
+#define               DENALI_CTL_70_DATA 0x00000000
+#define               DENALI_CTL_71_DATA 0x00280d00
+#define               DENALI_CTL_72_DATA 0x00000000
+#define               DENALI_CTL_73_DATA 0x00000100
+#define               DENALI_CTL_74_DATA 0x00010001
+#define               DENALI_CTL_75_DATA 0x00000000
+#define               DENALI_CTL_76_DATA 0x00000000
+#define               DENALI_CTL_77_DATA 0x00000000
+#define               DENALI_CTL_78_DATA 0x00000000
+#define               DENALI_CTL_79_DATA 0x00222200
+#define               DENALI_CTL_80_DATA 0x00000001
+#define               DENALI_CTL_81_DATA 0x00000000
+#define               DENALI_CTL_82_DATA 0x00000000
+#define               DENALI_CTL_83_DATA 0x00012222
+#define               DENALI_CTL_84_DATA 0x00000000
+#define               DENALI_CTL_85_DATA 0x00000000
+#define               DENALI_CTL_86_DATA 0x00222200
+#define               DENALI_CTL_87_DATA 0x02020001
+#define               DENALI_CTL_88_DATA 0x00020200
+#define               DENALI_CTL_89_DATA 0x02000202
+#define               DENALI_CTL_90_DATA 0x01000002
+#define               DENALI_CTL_91_DATA 0x00000000
+#define               DENALI_CTL_92_DATA 0x0003ffff
+#define               DENALI_CTL_93_DATA 0x00000000
+#define               DENALI_CTL_94_DATA 0x0003ffff
+#define               DENALI_CTL_95_DATA 0x00000000
+#define               DENALI_CTL_96_DATA 0x0003ffff
+#define               DENALI_CTL_97_DATA 0x00000000
+#define               DENALI_CTL_98_DATA 0x0003ffff
+#define               DENALI_CTL_99_DATA 0x00000000
+#define              DENALI_CTL_100_DATA 0x0003ffff
+#define              DENALI_CTL_101_DATA 0x00000000
+#define              DENALI_CTL_102_DATA 0x0003ffff
+#define              DENALI_CTL_103_DATA 0x00000000
+#define              DENALI_CTL_104_DATA 0x0003ffff
+#define              DENALI_CTL_105_DATA 0x00000000
+#define              DENALI_CTL_106_DATA 0x0003ffff
+#define              DENALI_CTL_107_DATA 0x00000000
+#define              DENALI_CTL_108_DATA 0x0003ffff
+#define              DENALI_CTL_109_DATA 0x00000000
+#define              DENALI_CTL_110_DATA 0x0003ffff
+#define              DENALI_CTL_111_DATA 0x00000000
+#define              DENALI_CTL_112_DATA 0x0003ffff
+#define              DENALI_CTL_113_DATA 0x00000000
+#define              DENALI_CTL_114_DATA 0x0003ffff
+#define              DENALI_CTL_115_DATA 0x00000000
+#define              DENALI_CTL_116_DATA 0x0003ffff
+#define              DENALI_CTL_117_DATA 0x00000000
+#define              DENALI_CTL_118_DATA 0x0003ffff
+#define              DENALI_CTL_119_DATA 0x00000000
+#define              DENALI_CTL_120_DATA 0x0003ffff
+#define              DENALI_CTL_121_DATA 0x00000000
+#define              DENALI_CTL_122_DATA 0x0003ffff
+#define              DENALI_CTL_123_DATA 0x00000000
+#define              DENALI_CTL_124_DATA 0x0003ffff
+#define              DENALI_CTL_125_DATA 0x00000000
+#define              DENALI_CTL_126_DATA 0x0003ffff
+#define              DENALI_CTL_127_DATA 0x00000000
+#define              DENALI_CTL_128_DATA 0x0003ffff
+#define              DENALI_CTL_129_DATA 0x00000000
+#define              DENALI_CTL_130_DATA 0x0003ffff
+#define              DENALI_CTL_131_DATA 0x00000000
+#define              DENALI_CTL_132_DATA 0x0003ffff
+#define              DENALI_CTL_133_DATA 0x00000000
+#define              DENALI_CTL_134_DATA 0x0003ffff
+#define              DENALI_CTL_135_DATA 0x00000000
+#define              DENALI_CTL_136_DATA 0x0003ffff
+#define              DENALI_CTL_137_DATA 0x00000000
+#define              DENALI_CTL_138_DATA 0x0003ffff
+#define              DENALI_CTL_139_DATA 0x00000000
+#define              DENALI_CTL_140_DATA 0x0003ffff
+#define              DENALI_CTL_141_DATA 0x00000000
+#define              DENALI_CTL_142_DATA 0x0003ffff
+#define              DENALI_CTL_143_DATA 0x00000000
+#define              DENALI_CTL_144_DATA 0x0003ffff
+#define              DENALI_CTL_145_DATA 0x00000000
+#define              DENALI_CTL_146_DATA 0x0003ffff
+#define              DENALI_CTL_147_DATA 0x00000000
+#define              DENALI_CTL_148_DATA 0x0003ffff
+#define              DENALI_CTL_149_DATA 0x00000000
+#define              DENALI_CTL_150_DATA 0x0003ffff
+#define              DENALI_CTL_151_DATA 0x00000000
+#define              DENALI_CTL_152_DATA 0x0003ffff
+#define              DENALI_CTL_153_DATA 0x00000000
+#define              DENALI_CTL_154_DATA 0x0003ffff
+#define              DENALI_CTL_155_DATA 0x00000000
+#define              DENALI_CTL_156_DATA 0x0003ffff
+#define              DENALI_CTL_157_DATA 0x00000000
+#define              DENALI_CTL_158_DATA 0x0003ffff
+#define              DENALI_CTL_159_DATA 0x00000000
+#define              DENALI_CTL_160_DATA 0x0003ffff
+#define              DENALI_CTL_161_DATA 0x00000000
+#define              DENALI_CTL_162_DATA 0x0003ffff
+#define              DENALI_CTL_163_DATA 0x00000000
+#define              DENALI_CTL_164_DATA 0x0003ffff
+#define              DENALI_CTL_165_DATA 0x00000000
+#define              DENALI_CTL_166_DATA 0x0003ffff
+#define              DENALI_CTL_167_DATA 0x00000000
+#define              DENALI_CTL_168_DATA 0x0003ffff
+#define              DENALI_CTL_169_DATA 0x00000000
+#define              DENALI_CTL_170_DATA 0x0003ffff
+#define              DENALI_CTL_171_DATA 0x00000000
+#define              DENALI_CTL_172_DATA 0x0003ffff
+#define              DENALI_CTL_173_DATA 0x00000000
+#define              DENALI_CTL_174_DATA 0x0003ffff
+#define              DENALI_CTL_175_DATA 0x00000000
+#define              DENALI_CTL_176_DATA 0x0003ffff
+#define              DENALI_CTL_177_DATA 0x00000000
+#define              DENALI_CTL_178_DATA 0x0003ffff
+#define              DENALI_CTL_179_DATA 0x00000000
+#define              DENALI_CTL_180_DATA 0x0003ffff
+#define              DENALI_CTL_181_DATA 0x00000000
+#define              DENALI_CTL_182_DATA 0x0003ffff
+#define              DENALI_CTL_183_DATA 0x00000000
+#define              DENALI_CTL_184_DATA 0x0003ffff
+#define              DENALI_CTL_185_DATA 0x00000000
+#define              DENALI_CTL_186_DATA 0x0003ffff
+#define              DENALI_CTL_187_DATA 0x00000000
+#define              DENALI_CTL_188_DATA 0x0003ffff
+#define              DENALI_CTL_189_DATA 0x00000000
+#define              DENALI_CTL_190_DATA 0x0003ffff
+#define              DENALI_CTL_191_DATA 0x00000000
+#define              DENALI_CTL_192_DATA 0x0003ffff
+#define              DENALI_CTL_193_DATA 0x00000000
+#define              DENALI_CTL_194_DATA 0x0003ffff
+#define              DENALI_CTL_195_DATA 0x00000000
+#define              DENALI_CTL_196_DATA 0x0003ffff
+#define              DENALI_CTL_197_DATA 0x00000000
+#define              DENALI_CTL_198_DATA 0x0003ffff
+#define              DENALI_CTL_199_DATA 0x00000000
+#define              DENALI_CTL_200_DATA 0x0003ffff
+#define              DENALI_CTL_201_DATA 0x00000000
+#define              DENALI_CTL_202_DATA 0x0003ffff
+#define              DENALI_CTL_203_DATA 0x00000000
+#define              DENALI_CTL_204_DATA 0x0003ffff
+#define              DENALI_CTL_205_DATA 0x00000000
+#define              DENALI_CTL_206_DATA 0x0003ffff
+#define              DENALI_CTL_207_DATA 0x00000000
+#define              DENALI_CTL_208_DATA 0x0003ffff
+#define              DENALI_CTL_209_DATA 0x00000000
+#define              DENALI_CTL_210_DATA 0x0003ffff
+#define              DENALI_CTL_211_DATA 0x00000000
+#define              DENALI_CTL_212_DATA 0x0003ffff
+#define              DENALI_CTL_213_DATA 0x00000000
+#define              DENALI_CTL_214_DATA 0x0003ffff
+#define              DENALI_CTL_215_DATA 0x00000000
+#define              DENALI_CTL_216_DATA 0x0003ffff
+#define              DENALI_CTL_217_DATA 0x00000000
+#define              DENALI_CTL_218_DATA 0x0303ffff
+#define              DENALI_CTL_219_DATA 0xffffffff
+#define              DENALI_CTL_220_DATA 0x00030f0f
+#define              DENALI_CTL_221_DATA 0xffffffff
+#define              DENALI_CTL_222_DATA 0x00030f0f
+#define              DENALI_CTL_223_DATA 0xffffffff
+#define              DENALI_CTL_224_DATA 0x00030f0f
+#define              DENALI_CTL_225_DATA 0xffffffff
+#define              DENALI_CTL_226_DATA 0x00030f0f
+#define              DENALI_CTL_227_DATA 0xffffffff
+#define              DENALI_CTL_228_DATA 0x00030f0f
+#define              DENALI_CTL_229_DATA 0xffffffff
+#define              DENALI_CTL_230_DATA 0x00030f0f
+#define              DENALI_CTL_231_DATA 0xffffffff
+#define              DENALI_CTL_232_DATA 0x00030f0f
+#define              DENALI_CTL_233_DATA 0xffffffff
+#define              DENALI_CTL_234_DATA 0x00030f0f
+#define              DENALI_CTL_235_DATA 0xffffffff
+#define              DENALI_CTL_236_DATA 0x00030f0f
+#define              DENALI_CTL_237_DATA 0xffffffff
+#define              DENALI_CTL_238_DATA 0x00030f0f
+#define              DENALI_CTL_239_DATA 0xffffffff
+#define              DENALI_CTL_240_DATA 0x00030f0f
+#define              DENALI_CTL_241_DATA 0xffffffff
+#define              DENALI_CTL_242_DATA 0x00030f0f
+#define              DENALI_CTL_243_DATA 0xffffffff
+#define              DENALI_CTL_244_DATA 0x00030f0f
+#define              DENALI_CTL_245_DATA 0xffffffff
+#define              DENALI_CTL_246_DATA 0x00030f0f
+#define              DENALI_CTL_247_DATA 0xffffffff
+#define              DENALI_CTL_248_DATA 0x00030f0f
+#define              DENALI_CTL_249_DATA 0xffffffff
+#define              DENALI_CTL_250_DATA 0x00030f0f
+#define              DENALI_CTL_251_DATA 0xffffffff
+#define              DENALI_CTL_252_DATA 0x00030f0f
+#define              DENALI_CTL_253_DATA 0xffffffff
+#define              DENALI_CTL_254_DATA 0x00030f0f
+#define              DENALI_CTL_255_DATA 0xffffffff
+#define              DENALI_CTL_256_DATA 0x00030f0f
+#define              DENALI_CTL_257_DATA 0xffffffff
+#define              DENALI_CTL_258_DATA 0x00030f0f
+#define              DENALI_CTL_259_DATA 0xffffffff
+#define              DENALI_CTL_260_DATA 0x00030f0f
+#define              DENALI_CTL_261_DATA 0xffffffff
+#define              DENALI_CTL_262_DATA 0x00030f0f
+#define              DENALI_CTL_263_DATA 0xffffffff
+#define              DENALI_CTL_264_DATA 0x00030f0f
+#define              DENALI_CTL_265_DATA 0xffffffff
+#define              DENALI_CTL_266_DATA 0x00030f0f
+#define              DENALI_CTL_267_DATA 0xffffffff
+#define              DENALI_CTL_268_DATA 0x00030f0f
+#define              DENALI_CTL_269_DATA 0xffffffff
+#define              DENALI_CTL_270_DATA 0x00030f0f
+#define              DENALI_CTL_271_DATA 0xffffffff
+#define              DENALI_CTL_272_DATA 0x00030f0f
+#define              DENALI_CTL_273_DATA 0xffffffff
+#define              DENALI_CTL_274_DATA 0x00030f0f
+#define              DENALI_CTL_275_DATA 0xffffffff
+#define              DENALI_CTL_276_DATA 0x00030f0f
+#define              DENALI_CTL_277_DATA 0xffffffff
+#define              DENALI_CTL_278_DATA 0x00030f0f
+#define              DENALI_CTL_279_DATA 0xffffffff
+#define              DENALI_CTL_280_DATA 0x00030f0f
+#define              DENALI_CTL_281_DATA 0xffffffff
+#define              DENALI_CTL_282_DATA 0x00030f0f
+#define              DENALI_CTL_283_DATA 0xffffffff
+#define              DENALI_CTL_284_DATA 0x00030f0f
+#define              DENALI_CTL_285_DATA 0xffffffff
+#define              DENALI_CTL_286_DATA 0x00030f0f
+#define              DENALI_CTL_287_DATA 0xffffffff
+#define              DENALI_CTL_288_DATA 0x00030f0f
+#define              DENALI_CTL_289_DATA 0xffffffff
+#define              DENALI_CTL_290_DATA 0x00030f0f
+#define              DENALI_CTL_291_DATA 0xffffffff
+#define              DENALI_CTL_292_DATA 0x00030f0f
+#define              DENALI_CTL_293_DATA 0xffffffff
+#define              DENALI_CTL_294_DATA 0x00030f0f
+#define              DENALI_CTL_295_DATA 0xffffffff
+#define              DENALI_CTL_296_DATA 0x00030f0f
+#define              DENALI_CTL_297_DATA 0xffffffff
+#define              DENALI_CTL_298_DATA 0x00030f0f
+#define              DENALI_CTL_299_DATA 0xffffffff
+#define              DENALI_CTL_300_DATA 0x00030f0f
+#define              DENALI_CTL_301_DATA 0xffffffff
+#define              DENALI_CTL_302_DATA 0x00030f0f
+#define              DENALI_CTL_303_DATA 0xffffffff
+#define              DENALI_CTL_304_DATA 0x00030f0f
+#define              DENALI_CTL_305_DATA 0xffffffff
+#define              DENALI_CTL_306_DATA 0x00030f0f
+#define              DENALI_CTL_307_DATA 0xffffffff
+#define              DENALI_CTL_308_DATA 0x00030f0f
+#define              DENALI_CTL_309_DATA 0xffffffff
+#define              DENALI_CTL_310_DATA 0x00030f0f
+#define              DENALI_CTL_311_DATA 0xffffffff
+#define              DENALI_CTL_312_DATA 0x00030f0f
+#define              DENALI_CTL_313_DATA 0xffffffff
+#define              DENALI_CTL_314_DATA 0x00030f0f
+#define              DENALI_CTL_315_DATA 0xffffffff
+#define              DENALI_CTL_316_DATA 0x00030f0f
+#define              DENALI_CTL_317_DATA 0xffffffff
+#define              DENALI_CTL_318_DATA 0x00030f0f
+#define              DENALI_CTL_319_DATA 0xffffffff
+#define              DENALI_CTL_320_DATA 0x00030f0f
+#define              DENALI_CTL_321_DATA 0xffffffff
+#define              DENALI_CTL_322_DATA 0x00030f0f
+#define              DENALI_CTL_323_DATA 0xffffffff
+#define              DENALI_CTL_324_DATA 0x00030f0f
+#define              DENALI_CTL_325_DATA 0xffffffff
+#define              DENALI_CTL_326_DATA 0x00030f0f
+#define              DENALI_CTL_327_DATA 0xffffffff
+#define              DENALI_CTL_328_DATA 0x00030f0f
+#define              DENALI_CTL_329_DATA 0xffffffff
+#define              DENALI_CTL_330_DATA 0x00030f0f
+#define              DENALI_CTL_331_DATA 0xffffffff
+#define              DENALI_CTL_332_DATA 0x00030f0f
+#define              DENALI_CTL_333_DATA 0xffffffff
+#define              DENALI_CTL_334_DATA 0x00030f0f
+#define              DENALI_CTL_335_DATA 0xffffffff
+#define              DENALI_CTL_336_DATA 0x00030f0f
+#define              DENALI_CTL_337_DATA 0xffffffff
+#define              DENALI_CTL_338_DATA 0x00030f0f
+#define              DENALI_CTL_339_DATA 0xffffffff
+#define              DENALI_CTL_340_DATA 0x00030f0f
+#define              DENALI_CTL_341_DATA 0xffffffff
+#define              DENALI_CTL_342_DATA 0x00030f0f
+#define              DENALI_CTL_343_DATA 0xffffffff
+#define              DENALI_CTL_344_DATA 0x00030f0f
+#define              DENALI_CTL_345_DATA 0xffffffff
+#define              DENALI_CTL_346_DATA 0x32030f0f
+#define              DENALI_CTL_347_DATA 0x01320001
+#define              DENALI_CTL_348_DATA 0x00013200
+#define              DENALI_CTL_349_DATA 0x00000132
+#define              DENALI_CTL_350_DATA 0x00000000
+#define              DENALI_CTL_351_DATA 0x000d0000
+#define              DENALI_CTL_352_DATA 0x1e680000
+#define              DENALI_CTL_353_DATA 0x02000200
+#define              DENALI_CTL_354_DATA 0x02000200
+#define              DENALI_CTL_355_DATA 0x00001e68
+#define              DENALI_CTL_356_DATA 0x00009808
+#define              DENALI_CTL_357_DATA 0x00020608
+#define              DENALI_CTL_358_DATA 0x000a0a01
+#define              DENALI_CTL_359_DATA 0x00000000
+#define              DENALI_CTL_360_DATA 0x00000000
+#define              DENALI_CTL_361_DATA 0x04038000
+#define              DENALI_CTL_362_DATA 0x07030a07
+#define              DENALI_CTL_363_DATA 0x00ffff22
+#define              DENALI_CTL_364_DATA 0x000f0010
+#define              DENALI_CTL_365_DATA 0x00000000
+#define              DENALI_CTL_366_DATA 0x00000000
+#define              DENALI_CTL_367_DATA 0x00000000
+#define              DENALI_CTL_368_DATA 0x00000000
+#define              DENALI_CTL_369_DATA 0x00000000
+#define              DENALI_CTL_370_DATA 0x00000204
+#define              DENALI_CTL_371_DATA 0x00000000
+#define              DENALI_CTL_372_DATA 0x01000001
+#define              DENALI_CTL_373_DATA 0x00000001
+#define              DENALI_CTL_374_DATA 0x00000000
diff --git a/include/renesas/pinctrl-rzn1.h b/include/renesas/pinctrl-rzn1.h
new file mode 100644
index 0000000..93214eb
--- /dev/null
+++ b/include/renesas/pinctrl-rzn1.h
@@ -0,0 +1,197 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef __PINCTRL_RZN1_H__
+#define __PINCTRL_RZN1_H__
+
+#define RZN1_MUX_FUNC_BIT			8
+#define RZN1_MUX_HAS_FUNC_BIT			15
+#define RZN1_MUX_HAS_DRIVE_BIT			16
+#define RZN1_MUX_DRIVE_BIT			17
+#define RZN1_MUX_HAS_PULL_BIT			19
+#define RZN1_MUX_PULL_BIT			20
+
+#define RZN1_MUX_PULL_UP			1
+#define RZN1_MUX_PULL_DOWN			3
+#define RZN1_MUX_PULL_NONE			0
+
+#define RZN1_MUX_DRIVE_4MA			0
+#define RZN1_MUX_DRIVE_6MA			1
+#define RZN1_MUX_DRIVE_8MA			2
+#define RZN1_MUX_DRIVE_12MA			3
+
+#define RZN1_MUX(_gpio, _func) \
+	(((RZN1_FUNC_##_func) << RZN1_MUX_FUNC_BIT) | \
+		(1 << RZN1_MUX_HAS_FUNC_BIT) | \
+		(_gpio))
+
+#define RZN1_MUX_PULL(_pull) \
+		((1 << RZN1_MUX_HAS_PULL_BIT) | \
+		((_pull) << RZN1_MUX_PULL_BIT))
+
+#define RZN1_MUX_DRIVE(_drive) \
+		((1 << RZN1_MUX_HAS_DRIVE_BIT) | \
+		((_drive) << RZN1_MUX_DRIVE_BIT))
+
+#define RZN1_MUX_PUP(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_PULL(RZN1_MUX_PULL_UP))
+#define RZN1_MUX_PDOWN(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_PULL(RZN1_MUX_PULL_DOWN))
+#define RZN1_MUX_PNONE(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_PULL(RZN1_MUX_PULL_NONE))
+
+#define RZN1_MUX_4MA(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_4MA))
+#define RZN1_MUX_6MA(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_6MA))
+#define RZN1_MUX_8MA(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_8MA))
+#define RZN1_MUX_12MA(_gpio, _func) \
+	(RZN1_MUX(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_12MA))
+
+#define RZN1_MUX_PUP_4MA(_gpio, _func) \
+	(RZN1_MUX_PUP(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_4MA))
+#define RZN1_MUX_PUP_6MA(_gpio, _func) \
+	(RZN1_MUX_PUP(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_6MA))
+#define RZN1_MUX_PUP_8MA(_gpio, _func) \
+	(RZN1_MUX_PUP(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_8MA))
+#define RZN1_MUX_PUP_12MA(_gpio, _func) \
+	(RZN1_MUX_PUP(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_12MA))
+
+#define RZN1_MUX_PDOWN_4MA(_gpio, _func) \
+	(RZN1_MUX_PDOWN(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_4MA))
+#define RZN1_MUX_PDOWN_6MA(_gpio, _func) \
+	(RZN1_MUX_PDOWN(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_6MA))
+#define RZN1_MUX_PDOWN_8MA(_gpio, _func) \
+	(RZN1_MUX_PDOWN(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_8MA))
+#define RZN1_MUX_PDOWN_12MA(_gpio, _func) \
+	(RZN1_MUX_PDOWN(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_12MA))
+
+#define RZN1_MUX_PNONE_4MA(_gpio, _func) \
+	(RZN1_MUX_PNONE(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_4MA))
+#define RZN1_MUX_PNONE_6MA(_gpio, _func) \
+	(RZN1_MUX_PNONE(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_6MA))
+#define RZN1_MUX_PNONE_8MA(_gpio, _func) \
+	(RZN1_MUX_PNONE(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_8MA))
+#define RZN1_MUX_PNONE_12MA(_gpio, _func) \
+	(RZN1_MUX_PNONE(_gpio, _func) | RZN1_MUX_DRIVE(RZN1_MUX_DRIVE_12MA))
+
+
+/* Use these "gpio" numbers with the RZN1_FUNC_MDIO_MUX* functions
+ * to set the destination of the two MDIO busses. */
+#define RZN1_MDIO_BUS0				170
+#define RZN1_MDIO_BUS1				171
+
+#define RZN1_FUNC_HIGHZ				0
+#define RZN1_FUNC_0L				1
+#define RZN1_FUNC_CLK_ETH_MII_RGMII_RMII	2
+#define RZN1_FUNC_CLK_ETH_NAND			3
+#define RZN1_FUNC_QSPI				4
+#define RZN1_FUNC_SDIO				5
+#define RZN1_FUNC_LCD				6
+#define RZN1_FUNC_LCD_E				7
+#define RZN1_FUNC_MSEBIM			8
+#define RZN1_FUNC_MSEBIS			9
+#define RZN1_FUNC_LEVEL2_OFFSET			10	/* I'm Special */
+#define RZN1_FUNC_HIGHZ1			10
+#define RZN1_FUNC_ETHERCAT			11
+#define RZN1_FUNC_SERCOS3			12
+#define RZN1_FUNC_SDIO_E			13
+#define RZN1_FUNC_ETH_MDIO			14
+#define RZN1_FUNC_ETH_MDIO_E1			15
+#define RZN1_FUNC_USB				16
+#define RZN1_FUNC_MSEBIM_E			17
+#define RZN1_FUNC_MSEBIS_E			18
+#define RZN1_FUNC_RSV				19
+#define RZN1_FUNC_RSV_E				20
+#define RZN1_FUNC_RSV_E1			21
+#define RZN1_FUNC_UART0_I			22
+#define RZN1_FUNC_UART0_I_E			23
+#define RZN1_FUNC_UART1_I			24
+#define RZN1_FUNC_UART1_I_E			25
+#define RZN1_FUNC_UART2_I			26
+#define RZN1_FUNC_UART2_I_E			27
+#define RZN1_FUNC_UART0				28
+#define RZN1_FUNC_UART0_E			29
+#define RZN1_FUNC_UART1				30
+#define RZN1_FUNC_UART1_E			31
+#define RZN1_FUNC_UART2				32
+#define RZN1_FUNC_UART2_E			33
+#define RZN1_FUNC_UART3				34
+#define RZN1_FUNC_UART3_E			35
+#define RZN1_FUNC_UART4				36
+#define RZN1_FUNC_UART4_E			37
+#define RZN1_FUNC_UART5				38
+#define RZN1_FUNC_UART5_E			39
+#define RZN1_FUNC_UART6				40
+#define RZN1_FUNC_UART6_E			41
+#define RZN1_FUNC_UART7				42
+#define RZN1_FUNC_UART7_E			43
+#define RZN1_FUNC_SPI0_M			44
+#define RZN1_FUNC_SPI0_M_E			45
+#define RZN1_FUNC_SPI1_M			46
+#define RZN1_FUNC_SPI1_M_E			47
+#define RZN1_FUNC_SPI2_M			48
+#define RZN1_FUNC_SPI2_M_E			49
+#define RZN1_FUNC_SPI3_M			50
+#define RZN1_FUNC_SPI3_M_E			51
+#define RZN1_FUNC_SPI4_S			52
+#define RZN1_FUNC_SPI4_S_E			53
+#define RZN1_FUNC_SPI5_S			54
+#define RZN1_FUNC_SPI5_S_E			55
+#define RZN1_FUNC_SGPIO0_M			56
+#define RZN1_FUNC_SGPIO1_M			57
+#define RZN1_FUNC_GPIO				58
+#define RZN1_FUNC_CAN				59
+#define RZN1_FUNC_I2C				60
+#define RZN1_FUNC_SAFE				61
+#define RZN1_FUNC_PTO_PWM			62
+#define RZN1_FUNC_PTO_PWM1			63
+#define RZN1_FUNC_PTO_PWM2			64
+#define RZN1_FUNC_PTO_PWM3			65
+#define RZN1_FUNC_PTO_PWM4			66
+#define RZN1_FUNC_DELTA_SIGMA			67
+#define RZN1_FUNC_SGPIO2_M			68
+#define RZN1_FUNC_SGPIO3_M			69
+#define RZN1_FUNC_SGPIO4_S			70
+#define RZN1_FUNC_MAC_MTIP_SWITCH		71
+#define RZN1_FUNC_MDIO_MUX_HIGHZ		72
+#define RZN1_FUNC_MDIO_MUX_MAC0			73
+#define RZN1_FUNC_MDIO_MUX_MAC1			74
+#define RZN1_FUNC_MDIO_MUX_ECAT			75
+#define RZN1_FUNC_MDIO_MUX_S3_MDIO0		76
+#define RZN1_FUNC_MDIO_MUX_S3_MDIO1		77
+#define RZN1_FUNC_MDIO_MUX_HWRTOS		78
+#define RZN1_FUNC_MDIO_MUX_SWITCH		79
+#define RZN1_FUNC_MAX				80
+
+#define RZN1_FUNC_NONE				0xff
+
+
+#endif /* __PINCTRL_RZN1_H__ */
diff --git a/include/renesas/rzn1-clkctrl-tables.h b/include/renesas/rzn1-clkctrl-tables.h
new file mode 100644
index 0000000..f0382f1
--- /dev/null
+++ b/include/renesas/rzn1-clkctrl-tables.h
@@ -0,0 +1,297 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef __RZN1_CLKCTRL_TABLES_H__
+#define __RZN1_CLKCTRL_TABLES_H__
+
+#define RZN1_CLK_COUNT		129
+
+static const struct rzn1_clkdesc rzn1_clock_list[RZN1_CLK_COUNT] = {
+	[RZN1_HCLK_SDIO0_ID] =
+		_CLK("hclk_sdio0",	_BIT(3, 0), _BIT(3, 1), _BIT(3, 2), _BIT(3, 3), _BIT(4, 0), _BIT(4, 1), _BIT(4, 2)),
+	[RZN1_CLK_SDIO0_ID] =
+		_CLK("clk_sdio0",	_BIT(3, 4), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_USBH_ID] =
+		_CLK("hclk_usbh",	_BIT(7, 0), _BIT(7, 1), {}, _BIT(7, 2), {}, _BIT(8, 0), _BIT(8, 1)),
+	[RZN1_HCLK_USBF_ID] =
+		_CLK("hclk_usbf",	_BIT(7, 3), {}, {}, _BIT(7, 4), {}, _BIT(8, 2), _BIT(8, 3)),
+	[RZN1_HCLK_USBPM_ID] =
+		_CLK("hclk_usbpm",	_BIT(7, 5), {}, {}, {}, {}, {}, {}),
+	[RZN1_CLK_PCI_USB_ID] =
+		_CLK("clk_pci_usb",	_BIT(7, 6), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_CRYPTO_EIP93_ID] =
+		_CLK("hclk_crypto_eip93",	_BIT(9, 0), _BIT(9, 1), {}, _BIT(9, 2), {}, _BIT(10, 0), _BIT(10, 1)),
+	[RZN1_HCLK_CRYPTO_EIP150_ID] =
+		_CLK("hclk_crypto_eip150",	_BIT(9, 3), _BIT(9, 4), _BIT(9, 5), {}, _BIT(10, 2), {}, {}),
+	[RZN1_HCLK_MSEBI_S_ID] =
+		_CLK("hclk_msebi_s",	_BIT(11, 0), _BIT(11, 1), _BIT(11, 2), _BIT(11, 3), _BIT(12, 0), _BIT(12, 1), _BIT(12, 2)),
+	[RZN1_HCLK_MSEBI_M_ID] =
+		_CLK("hclk_msebi_m",	_BIT(11, 4), _BIT(11, 5), _BIT(11, 6), {}, _BIT(12, 3), {}, {}),
+	[RZN1_HCLK_UART0_ID] =
+		_CLK("hclk_uart0",	_BIT(13, 0), _BIT(13, 1), _BIT(13, 2), {}, {}, {}, {}),
+	[RZN1_HCLK_UART1_ID] =
+		_CLK("hclk_uart1",	_BIT(13, 3), _BIT(13, 4), _BIT(13, 5), {}, {}, {}, {}),
+	[RZN1_HCLK_UART2_ID] =
+		_CLK("hclk_uart2",	_BIT(13, 6), _BIT(13, 7), _BIT(13, 8), {}, {}, {}, {}),
+	[RZN1_HCLK_I2C0_ID] =
+		_CLK("hclk_i2c0",	_BIT(13, 9), _BIT(13, 10), _BIT(13, 11), {}, {}, {}, {}),
+	[RZN1_HCLK_I2C1_ID] =
+		_CLK("hclk_i2c1",	_BIT(13, 12), _BIT(13, 13), _BIT(13, 14), {}, {}, {}, {}),
+	[RZN1_HCLK_ADC_ID] =
+		_CLK("hclk_adc",	_BIT(13, 15), _BIT(13, 16), _BIT(13, 17), {}, {}, {}, {}),
+	[RZN1_CLK_UART0_ID] =
+		_CLK("clk_uart0",	_BIT(13, 18), _BIT(13, 19), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART0_ID] =
+		_CLK("clk_usbuart0",	_BIT(13, 20), _BIT(13, 21), {}, {}, {}, {}, {}),
+	[RZN1_CLK_UART1_ID] =
+		_CLK("clk_uart1",	_BIT(13, 22), _BIT(13, 23), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART1_ID] =
+		_CLK("clk_usbuart1",	_BIT(13, 24), _BIT(13, 25), {}, {}, {}, {}, {}),
+	[RZN1_CLK_UART2_ID] =
+		_CLK("clk_uart2",	_BIT(13, 26), _BIT(13, 27), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART2_ID] =
+		_CLK("clk_usbuart2",	_BIT(13, 28), _BIT(13, 29), {}, {}, {}, {}, {}),
+	[RZN1_CLK_I2C0_ID] =
+		_CLK("clk_i2c0",	_BIT(15, 6), _BIT(15, 7), {}, {}, {}, {}, {}),
+	[RZN1_CLK_I2C1_ID] =
+		_CLK("clk_i2c1",	_BIT(15, 8), _BIT(15, 9), {}, {}, {}, {}, {}),
+	[RZN1_CLK_ADC_ID] =
+		_CLK("clk_adc",		_BIT(15, 10), _BIT(15, 11), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_SGPIO0_ID] =
+		_CLK("hclk_sgpio0",	_BIT(15, 0), _BIT(15, 1), _BIT(15, 2), {}, {}, {}, {}),
+	[RZN1_HCLK_SGPIO1_ID] =
+		_CLK("hclk_sgpio1",	_BIT(15, 3), _BIT(15, 4), _BIT(15, 5), {}, {}, {}, {}),
+	[RZN1_HCLK_PWMPTO_ID] =
+		_CLK("hclk_pwmpto",	_BIT(15, 12), _BIT(15, 13), _BIT(15, 14), {}, {}, {}, {}),
+	[RZN1_HCLK_DELTASIGMA_ID] =
+		_CLK("hclk_deltasigma",	_BIT(15, 15), _BIT(15, 16), _BIT(15, 17), {}, {}, {}, {}),
+	[RZN1_HCLK_SPI0_ID] =
+		_CLK("hclk_spi0",	_BIT(16, 0), _BIT(16, 1), _BIT(16, 2), {}, {}, {}, {}),
+	[RZN1_HCLK_SPI1_ID] =
+		_CLK("hclk_spi1",	_BIT(16, 3), _BIT(16, 4), _BIT(16, 5), {}, {}, {}, {}),
+	[RZN1_HCLK_SPI2_ID] =
+		_CLK("hclk_spi2",	_BIT(16, 6), _BIT(16, 7), _BIT(16, 8), {}, {}, {}, {}),
+	[RZN1_HCLK_SPI3_ID] =
+		_CLK("hclk_spi3",	_BIT(16, 9), _BIT(16, 10), _BIT(16, 11), {}, {}, {}, {}),
+	[RZN1_HCLK_SPI4_ID] =
+		_CLK("hclk_spi4",	_BIT(16, 12), _BIT(16, 13), _BIT(16, 14), {}, {}, {}, {}),
+	[RZN1_HCLK_SPI5_ID] =
+		_CLK("hclk_spi5",	_BIT(16, 15), _BIT(16, 16), _BIT(16, 17), {}, {}, {}, {}),
+	[RZN1_HCLK_GPIO0_ID] =
+		_CLK("hclk_gpio0",	_BIT(16, 18), _BIT(16, 19), _BIT(16, 20), {}, {}, {}, {}),
+	[RZN1_HCLK_GPIO1_ID] =
+		_CLK("hclk_gpio1",	_BIT(16, 21), _BIT(16, 22), _BIT(16, 23), {}, {}, {}, {}),
+	[RZN1_HCLK_UART3_ID] =
+		_CLK("hclk_uart3",	_BIT(16, 24), _BIT(16, 25), _BIT(16, 26), {}, {}, {}, {}),
+	[RZN1_HCLK_UART4_ID] =
+		_CLK("hclk_uart4",	_BIT(16, 27), _BIT(16, 28), _BIT(16, 29), {}, {}, {}, {}),
+	[RZN1_HCLK_UART5_ID] =
+		_CLK("hclk_uart5",	_BIT(17, 0), _BIT(17, 1), _BIT(17, 2), {}, {}, {}, {}),
+	[RZN1_HCLK_UART6_ID] =
+		_CLK("hclk_uart6",	_BIT(17, 3), _BIT(17, 4), _BIT(17, 5), {}, {}, {}, {}),
+	[RZN1_HCLK_UART7_ID] =
+		_CLK("hclk_uart7",	_BIT(17, 6), _BIT(17, 7), _BIT(17, 8), {}, {}, {}, {}),
+	[RZN1_HCLK_GPIO2_ID] =
+		_CLK("hclk_gpio2",	_BIT(17, 9), _BIT(17, 10), _BIT(17, 11), {}, {}, {}, {}),
+	[RZN1_HCLK_PG19_ID] =
+		_CLK("hclk_pg19",	_BIT(17, 12), _BIT(17, 13), _BIT(17, 14), {}, {}, {}, {}),
+	[RZN1_HCLK_PG20_ID] =
+		_CLK("hclk_pg20",	_BIT(17, 15), _BIT(17, 16), _BIT(17, 17), {}, {}, {}, {}),
+	[RZN1_HCLK_DMA0_ID] =
+		_CLK("hclk_dma0",	_BIT(19, 0), _BIT(19, 1), _BIT(19, 2), _BIT(19, 3), _BIT(22, 0), _BIT(22, 1), _BIT(22, 2)),
+	[RZN1_HCLK_DMA1_ID] =
+		_CLK("hclk_dma1",	_BIT(19, 4), _BIT(19, 5), _BIT(19, 6), _BIT(19, 7), _BIT(22, 3), _BIT(22, 4), _BIT(22, 5)),
+	[RZN1_HCLK_NAND_ID] =
+		_CLK("hclk_nand",	_BIT(20, 0), _BIT(20, 1), _BIT(20, 2), _BIT(20, 3), _BIT(23, 0), _BIT(23, 1), _BIT(23, 2)),
+	[RZN1_CLK_NAND_ID] =
+		_CLK("clk_nand",	_BIT(20, 4), _BIT(20, 5), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_QSPI0_ID] =
+		_CLK("hclk_qspi0",	_BIT(21, 0), _BIT(21, 1), _BIT(21, 2), _BIT(21, 3), _BIT(24, 0), _BIT(24, 1), _BIT(24, 2)),
+	[RZN1_CLK_QSPI0_ID] =
+		_CLK("clk_qspi0",	_BIT(21, 4), _BIT(21, 5), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_DDRC_ID] =
+		_CLK("hclk_ddrc",	_BIT(25, 0), _BIT(25, 2), {}, _BIT(25, 1), {}, _BIT(29, 0), _BIT(29, 1)),
+	[RZN1_CLK_DDRC_ID] =
+		_CLK("clk_ddrc",	_BIT(25, 3), _BIT(25, 4), {}, {}, {}, {}, {}),
+	[RZN1_CLK_RGMII_REF_ID] =
+		_CLK("clk_rgmii_ref",	_BIT(26, 0), {}, {}, {}, {}, {}, {}),
+	[RZN1_CLK_RMII_REF_ID] =
+		_CLK("clk_rmii_ref",	_BIT(26, 1), {}, {}, {}, {}, {}, {}),
+	[RZN1_CLK_MII_REF_ID] =
+		_CLK("clk_mii_ref",	_BIT(26, 2), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_GMAC0_ID] =
+		_CLK("hclk_gmac0",	_BIT(27, 0), _BIT(27, 1), _BIT(27, 2), _BIT(27, 3), _BIT(30, 0), _BIT(30, 1), _BIT(30, 2)),
+	[RZN1_HCLK_GMAC1_ID] =
+		_CLK("hclk_gmac1",	_BIT(28, 0), _BIT(28, 1), _BIT(28, 2), _BIT(28, 3), _BIT(31, 0), _BIT(31, 1), _BIT(31, 2)),
+	[RZN1_HCLK_ECAT125_ID] =
+		_CLK("hclk_ecat125",	_BIT(32, 0), _BIT(32, 1), {}, _BIT(32, 2), {}, _BIT(34, 0), _BIT(34, 1)),
+	[RZN1_CLK_ECAT25_ID] =
+		_CLK("clk_ecat25",	_BIT(32, 3), _BIT(32, 4), {}, {}, {}, {}, {}),
+	[RZN1_CLK_ECAT100_ID] =
+		_CLK("clk_ecat100",	_BIT(32, 5), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_SERCOS_ID] =
+		_CLK("hclk_sercos",	_BIT(33, 0), _BIT(33, 2), {}, _BIT(33, 1), {}, _BIT(35, 0), _BIT(35, 1)),
+	[RZN1_CLK_SERCOS50_ID] =
+		_CLK("clk_sercos50",	_BIT(33, 4), _BIT(33, 3), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SERCOS100_ID] =
+		_CLK("clk_sercos100",	_BIT(33, 5), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_QSPI1_ID] =
+		_CLK("hclk_qspi1",	_BIT(36, 0), _BIT(36, 1), _BIT(36, 2), _BIT(36, 3), _BIT(38, 0), _BIT(38, 1), _BIT(38, 2)),
+	[RZN1_CLK_QSPI1_ID] =
+		_CLK("clk_qspi1",	_BIT(36, 4), _BIT(36, 5), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_HSR_ID] =
+		_CLK("hclk_hsr",	_BIT(36, 0), _BIT(36, 2), {}, _BIT(36, 1), {}, _BIT(38, 0), _BIT(38, 1)),
+	[RZN1_CLK_HSR_DUP_ID] =
+		_CLK("clk_hsr_dup",	_BIT(36, 3), {}, {}, {}, {}, {}, {}),
+	[RZN1_CLK_HSR50_ID] =
+		_CLK("clk_hsr50",	_BIT(36, 4), _BIT(36, 5), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_SDIO1_ID] =
+		_CLK("hclk_sdio1",	_BIT(50, 0), _BIT(50, 1), _BIT(50, 2), _BIT(50, 3), _BIT(51, 0), _BIT(51, 1), _BIT(51, 2)),
+	[RZN1_CLK_SDIO1_ID] =
+		_CLK("clk_sdio1",	_BIT(50, 4), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_PINCONFIG_ID] =
+		_CLK("hclk_pinconfig",	_BIT(58, 0), _BIT(58, 1), _BIT(58, 2), {}, _BIT(87, 0), {}, {}),
+	[RZN1_HCLK_TIMER0_ID] =
+		_CLK("hclk_timer0",	_BIT(58, 3), _BIT(58, 4), _BIT(58, 5), {}, _BIT(87, 1), {}, {}),
+	[RZN1_HCLK_TIMER1_ID] =
+		_CLK("hclk_timer1",	_BIT(58, 6), _BIT(58, 7), _BIT(58, 8), {}, _BIT(87, 2), {}, {}),
+	[RZN1_CLK_25MHZ_PG4_ID] =
+		_CLK("clk_25mhz_pg4",	_BIT(58, 9), _BIT(58, 10), _BIT(58, 11), {}, _BIT(87, 3), {}, {}),
+	[RZN1_CLK_25MHZ_PG5_ID] =
+		_CLK("clk_25mhz_pg5",	_BIT(58, 12), _BIT(58, 13), _BIT(58, 14), {}, _BIT(87, 4), {}, {}),
+	[RZN1_CLK_25MHZ_PG6_ID] =
+		_CLK("clk_25mhz_pg6",	_BIT(58, 15), _BIT(58, 16), _BIT(58, 17), {}, _BIT(87, 5), {}, {}),
+	[RZN1_CLK_25MHZ_PG7_ID] =
+		_CLK("clk_25mhz_pg7",	_BIT(58, 18), _BIT(58, 19), _BIT(58, 20), {}, _BIT(87, 6), {}, {}),
+	[RZN1_CLK_25MHZ_PG8_ID] =
+		_CLK("clk_25mhz_pg8",	_BIT(58, 21), _BIT(58, 22), _BIT(58, 23), {}, _BIT(87, 7), {}, {}),
+	[RZN1_CLK_UART3_ID] =
+		_CLK("clk_uart3",	_BIT(59, 0), _BIT(59, 1), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART3_ID] =
+		_CLK("clk_usbuart3",	_BIT(59, 2), _BIT(59, 3), {}, {}, {}, {}, {}),
+	[RZN1_CLK_UART4_ID] =
+		_CLK("clk_uart4",	_BIT(59, 4), _BIT(59, 5), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART4_ID] =
+		_CLK("clk_usbuart4",	_BIT(59, 6), _BIT(59, 7), {}, {}, {}, {}, {}),
+	[RZN1_CLK_UART5_ID] =
+		_CLK("clk_uart5",	_BIT(59, 8), _BIT(59, 9), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART5_ID] =
+		_CLK("clk_usbuart5",	_BIT(59, 10), _BIT(59, 11), {}, {}, {}, {}, {}),
+	[RZN1_CLK_UART6_ID] =
+		_CLK("clk_uart6",	_BIT(59, 12), _BIT(59, 13), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART6_ID] =
+		_CLK("clk_usbuart6",	_BIT(59, 14), _BIT(59, 15), {}, {}, {}, {}, {}),
+	[RZN1_CLK_UART7_ID] =
+		_CLK("clk_uart7",	_BIT(59, 16), _BIT(59, 17), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBUART7_ID] =
+		_CLK("clk_usbuart7",	_BIT(59, 18), _BIT(59, 19), {}, {}, {}, {}, {}),
+	[RZN1_CLK_NOUSBP2_PG6_ID] =
+		_CLK("clk_nousbp2_pg6",	_BIT(59, 20), _BIT(59, 21), {}, {}, {}, {}, {}),
+	[RZN1_CLK_USBP2_PG6_ID] =
+		_CLK("clk_usbp2_pg6",	_BIT(59, 22), _BIT(59, 23), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_CAN1_ID] =
+		_CLK("hclk_can1",	_BIT(60, 6), _BIT(60, 7), _BIT(60, 8), {}, _BIT(88, 2), {}, {}),
+	[RZN1_CLK_48MHZ_PG4_ID] =
+		_CLK("clk_48mhz_pg4",	_BIT(60, 9), _BIT(60, 10), _BIT(60, 11), {}, _BIT(88, 3), {}, {}),
+	[RZN1_CLK_48MHZ_PG_F_ID] =
+		_CLK("clk_48mhz_pg_f",	_BIT(60, 12), _BIT(60, 13), {}, _BIT(60, 14), {}, _BIT(88, 4), _BIT(88, 5)),
+	[RZN1_HCLK_RSV_ID] =
+		_CLK("hclk_rsv",	_BIT(60, 0), _BIT(60, 1), _BIT(60, 2), {}, _BIT(88, 0), {}, {}),
+	[RZN1_HCLK_CAN0_ID] =
+		_CLK("hclk_can0",	_BIT(60, 3), _BIT(60, 4), _BIT(60, 5), {}, _BIT(88, 1), {}, {}),
+	[RZN1_HCLK_LCD_ID] =
+		_CLK("hclk_lcd",	_BIT(61, 0), _BIT(61, 1), _BIT(61, 2), {}, _BIT(89, 0), {}, {}),
+	[RZN1_HCLK_SEMAP_ID] =
+		_CLK("hclk_semap",	_BIT(61, 3), _BIT(61, 4), _BIT(61, 5), {}, _BIT(89, 1), {}, {}),
+	[RZN1_HCLK_PG3_ID] =
+		_CLK("hclk_pg3",	_BIT(61, 6), _BIT(61, 7), _BIT(61, 8), {}, _BIT(89, 2), {}, {}),
+	[RZN1_HCLK_PG4_ID] =
+		_CLK("hclk_pg4",	_BIT(61, 9), _BIT(61, 10), _BIT(61, 11), {}, _BIT(89, 3), {}, {}),
+	[RZN1_HCLK_PG_I_ID] =
+		_CLK("hclk_pg_i",	_BIT(61, 12), _BIT(61, 13), {}, _BIT(61, 14), {}, _BIT(89, 4), _BIT(89, 5)),
+	[RZN1_CLK_SPI0_ID] =
+		_CLK("clk_spi0",	_BIT(63, 0), _BIT(63, 1), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SPI1_ID] =
+		_CLK("clk_spi1",	_BIT(63, 2), _BIT(63, 3), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SPI2_ID] =
+		_CLK("clk_spi2",	_BIT(63, 4), _BIT(63, 5), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SPI3_ID] =
+		_CLK("clk_spi3",	_BIT(63, 6), _BIT(63, 7), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SPI4_ID] =
+		_CLK("clk_spi4",	_BIT(65, 0), _BIT(65, 1), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SPI5_ID] =
+		_CLK("clk_spi5",	_BIT(65, 2), _BIT(65, 3), {}, {}, {}, {}, {}),
+	[RZN1_CLK_P4_PG3_ID] =
+		_CLK("clk_p4_pg3",	_BIT(65, 4), _BIT(65, 5), {}, {}, {}, {}, {}),
+	[RZN1_CLK_P4_PG4_ID] =
+		_CLK("clk_p4_pg4",	_BIT(65, 6), _BIT(65, 7), {}, {}, {}, {}, {}),
+	[RZN1_CLK_SLCD_ID] =
+		_CLK("clk_slcd",	_BIT(67, 0), _BIT(67, 1), {}, {}, {}, {}, {}),
+	[RZN1_CLK_P1_PG2_ID] =
+		_CLK("clk_p1_pg2",	_BIT(67, 2), _BIT(67, 3), {}, {}, {}, {}, {}),
+	[RZN1_CLK_P1_PG3_ID] =
+		_CLK("clk_p1_pg3",	_BIT(67, 4), _BIT(67, 5), {}, {}, {}, {}, {}),
+	[RZN1_CLK_P1_PG4_ID] =
+		_CLK("clk_p1_pg4",	_BIT(67, 6), _BIT(67, 7), {}, {}, {}, {}, {}),
+	[RZN1_CLK_P6_PG1_ID] =
+		_CLK("clk_p6_pg1",	_BIT(69, 0), _BIT(69, 1), _BIT(69, 2), {}, _BIT(91, 0), {}, {}),
+	[RZN1_CLK_P6_PG2_ID] =
+		_CLK("clk_p6_pg2",	_BIT(69, 3), _BIT(69, 4), _BIT(69, 5), {}, _BIT(91, 1), {}, {}),
+	[RZN1_CLK_P6_PG3_ID] =
+		_CLK("clk_p6_pg3",	_BIT(69, 6), _BIT(69, 7), _BIT(69, 8), {}, _BIT(91, 2), {}, {}),
+	[RZN1_CLK_P6_PG4_ID] =
+		_CLK("clk_p6_pg4",	_BIT(69, 9), _BIT(69, 10), _BIT(69, 11), {}, _BIT(91, 3), {}, {}),
+	[RZN1_HCLK_SGPIO2_ID] =
+		_CLK("hclk_sgpio2",	_BIT(70, 3), _BIT(70, 4), _BIT(70, 5), {}, _BIT(90, 1), {}, {}),
+	[RZN1_HCLK_SGPIO3_ID] =
+		_CLK("hclk_sgpio3",	_BIT(70, 6), _BIT(70, 7), _BIT(70, 8), {}, _BIT(90, 2), {}, {}),
+	[RZN1_HCLK_SGPIO4_ID] =
+		_CLK("hclk_sgpio4",	_BIT(70, 9), _BIT(70, 10), _BIT(70, 11), {}, _BIT(90, 3), {}, {}),
+	[RZN1_HCLK_SWITCH_ID] =
+		_CLK("hclk_switch",	_BIT(76, 0), {}, _BIT(76, 1), {}, {}, {}, {}),
+	[RZN1_CLK_SWITCH_ID] =
+		_CLK("clk_switch",	_BIT(76, 2), _BIT(76, 3), {}, {}, {}, {}, {}),
+	[RZN1_HCLK_RTC_ID] =
+		_CLK("hclk_rtc",	_BIT(80, 0), {}, {}, {}, {}, {}, {}),
+	[RZN1_HCLK_ROM_ID] =
+		_CLK("hclk_rom",	_BIT(85, 0), _BIT(85, 1), _BIT(85, 2), {}, _BIT(92, 0), {}, {}),
+	[RZN1_CLK_CM3_ID] =
+		_CLK("clk_cm3",		_BIT(93, 0), _BIT(93, 1), {}, _BIT(93, 2), {}, _BIT(94, 0), _BIT(94, 1)),
+	[RZN1_HCLK_CM3_ID] =
+		_CLK("hclk_cm3",	_BIT(97, 0), _BIT(97, 1), _BIT(97, 2), {}, {}, {}, {}),
+	[RZN1_HCLK_SWITCH_RG_ID] =
+		_CLK("hclk_switch_rg",	_BIT(98, 0), _BIT(98, 1), _BIT(98, 2), {}, {}, {}, {}),
+	[RZN1_CLK_HW_RTOS_ID] =
+		_CLK("clk_hw_rtos",	_BIT(99, 0), _BIT(99, 1), {}, {}, {}, {}, {}),
+	[RZN1_CLK_RTOS_MDC_ID] =
+		_CLK("clk_rtos_mdc",	_BIT(99, 2), {}, {}, {}, {}, {}, {}),
+};
+
+
+#endif /* __RZN1_CLKCTRL_TABLES_H__ */
diff --git a/include/renesas/rzn1-clocks.h b/include/renesas/rzn1-clocks.h
new file mode 100644
index 0000000..51507f3
--- /dev/null
+++ b/include/renesas/rzn1-clocks.h
@@ -0,0 +1,183 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef __RZN1_CLOCKS_H__
+#define __RZN1_CLOCKS_H__
+
+#define RZN1_CLKDIV_PGEXT2_PR6			0
+#define RZN1_CLKDIV_QSPI2			1
+#define RZN1_CLKDIV_SWITCH			2
+#define RZN1_CLKDIV_OPP				3
+#define RZN1_CLKDIV_CA7				4
+#define RZN1_CLKDIV_PG1_PR2			5
+#define RZN1_CLKDIV_PG1_PR3			6
+#define RZN1_CLKDIV_PG1_PR4			7
+#define RZN1_CLKDIV_PG4_PR1			8
+#define RZN1_CLKDIV_PG5_PR5			9
+#define RZN1_CLKDIV_QSPI1			10
+#define RZN1_CLKDIV_SDIO1			11
+#define RZN1_CLKDIV_SDIO2			12
+#define RZN1_CLKDIV_PG0_ADC			13
+#define RZN1_CLKDIV_PG0_I2C			14
+#define RZN1_CLKDIV_PG0_UART			15
+#define RZN1_CLKDIV_NFLASH			16
+#define RZN1_CLKDIV_PG0_MOTOR			17
+#define RZN1_CLKDIV_HWRTOS_MDC			18
+
+#define RZN1_HCLK_SDIO0_ID			0
+#define RZN1_CLK_SDIO0_ID			1
+#define RZN1_HCLK_USBH_ID			2
+#define RZN1_HCLK_USBF_ID			3
+#define RZN1_HCLK_USBPM_ID			4
+#define RZN1_CLK_PCI_USB_ID			5
+#define RZN1_HCLK_CRYPTO_EIP93_ID		6
+#define RZN1_HCLK_CRYPTO_EIP150_ID		7
+#define RZN1_HCLK_MSEBI_S_ID			8
+#define RZN1_HCLK_MSEBI_M_ID			9
+#define RZN1_HCLK_UART0_ID			10
+#define RZN1_HCLK_UART1_ID			11
+#define RZN1_HCLK_UART2_ID			12
+#define RZN1_HCLK_I2C0_ID			13
+#define RZN1_HCLK_I2C1_ID			14
+#define RZN1_HCLK_ADC_ID			15
+#define RZN1_CLK_UART0_ID			16
+#define RZN1_CLK_USBUART0_ID			17
+#define RZN1_CLK_UART1_ID			18
+#define RZN1_CLK_USBUART1_ID			19
+#define RZN1_CLK_UART2_ID			20
+#define RZN1_CLK_USBUART2_ID			21
+#define RZN1_CLK_I2C0_ID			22
+#define RZN1_CLK_I2C1_ID			23
+#define RZN1_CLK_ADC_ID				24
+#define RZN1_HCLK_SGPIO0_ID			25
+#define RZN1_HCLK_SGPIO1_ID			26
+#define RZN1_HCLK_PWMPTO_ID			27
+#define RZN1_HCLK_DELTASIGMA_ID			28
+#define RZN1_HCLK_SPI0_ID			29
+#define RZN1_HCLK_SPI1_ID			30
+#define RZN1_HCLK_SPI2_ID			31
+#define RZN1_HCLK_SPI3_ID			32
+#define RZN1_HCLK_SPI4_ID			33
+#define RZN1_HCLK_SPI5_ID			34
+#define RZN1_HCLK_GPIO0_ID			35
+#define RZN1_HCLK_GPIO1_ID			36
+#define RZN1_HCLK_UART3_ID			37
+#define RZN1_HCLK_UART4_ID			38
+#define RZN1_HCLK_UART5_ID			39
+#define RZN1_HCLK_UART6_ID			40
+#define RZN1_HCLK_UART7_ID			41
+#define RZN1_HCLK_GPIO2_ID			42
+#define RZN1_HCLK_PG19_ID			43
+#define RZN1_HCLK_PG20_ID			44
+#define RZN1_HCLK_DMA0_ID			45
+#define RZN1_HCLK_DMA1_ID			46
+#define RZN1_HCLK_NAND_ID			47
+#define RZN1_CLK_NAND_ID			48
+#define RZN1_HCLK_QSPI0_ID			49
+#define RZN1_CLK_QSPI0_ID			50
+#define RZN1_HCLK_DDRC_ID			51
+#define RZN1_CLK_DDRC_ID			52
+#define RZN1_CLK_RGMII_REF_ID			53
+#define RZN1_CLK_RMII_REF_ID			54
+#define RZN1_CLK_MII_REF_ID			55
+#define RZN1_HCLK_GMAC0_ID			56
+#define RZN1_HCLK_GMAC1_ID			57
+#define RZN1_HCLK_ECAT125_ID			58
+#define RZN1_CLK_ECAT25_ID			59
+#define RZN1_CLK_ECAT100_ID			60
+#define RZN1_HCLK_SERCOS_ID			61
+#define RZN1_CLK_SERCOS50_ID			62
+#define RZN1_CLK_SERCOS100_ID			63
+#define RZN1_HCLK_QSPI1_ID			64
+#define RZN1_CLK_QSPI1_ID			65
+#define RZN1_HCLK_HSR_ID			66
+#define RZN1_CLK_HSR_DUP_ID			67
+#define RZN1_CLK_HSR50_ID			68
+#define RZN1_HCLK_SDIO1_ID			69
+#define RZN1_CLK_SDIO1_ID			70
+#define RZN1_HCLK_PINCONFIG_ID			71
+#define RZN1_HCLK_TIMER0_ID			72
+#define RZN1_HCLK_TIMER1_ID			73
+#define RZN1_CLK_25MHZ_PG4_ID			74
+#define RZN1_CLK_25MHZ_PG5_ID			75
+#define RZN1_CLK_25MHZ_PG6_ID			76
+#define RZN1_CLK_25MHZ_PG7_ID			77
+#define RZN1_CLK_25MHZ_PG8_ID			78
+#define RZN1_CLK_UART3_ID			79
+#define RZN1_CLK_USBUART3_ID			80
+#define RZN1_CLK_UART4_ID			81
+#define RZN1_CLK_USBUART4_ID			82
+#define RZN1_CLK_UART5_ID			83
+#define RZN1_CLK_USBUART5_ID			84
+#define RZN1_CLK_UART6_ID			85
+#define RZN1_CLK_USBUART6_ID			86
+#define RZN1_CLK_UART7_ID			87
+#define RZN1_CLK_USBUART7_ID			88
+#define RZN1_CLK_NOUSBP2_PG6_ID			89
+#define RZN1_CLK_USBP2_PG6_ID			90
+#define RZN1_HCLK_CAN1_ID			91
+#define RZN1_CLK_48MHZ_PG4_ID			92
+#define RZN1_CLK_48MHZ_PG_F_ID			93
+#define RZN1_HCLK_RSV_ID			94
+#define RZN1_HCLK_CAN0_ID			95
+#define RZN1_HCLK_LCD_ID			96
+#define RZN1_HCLK_SEMAP_ID			97
+#define RZN1_HCLK_PG3_ID			98
+#define RZN1_HCLK_PG4_ID			99
+#define RZN1_HCLK_PG_I_ID			100
+#define RZN1_CLK_SPI0_ID			101
+#define RZN1_CLK_SPI1_ID			102
+#define RZN1_CLK_SPI2_ID			103
+#define RZN1_CLK_SPI3_ID			104
+#define RZN1_CLK_SPI4_ID			105
+#define RZN1_CLK_SPI5_ID			106
+#define RZN1_CLK_P4_PG3_ID			107
+#define RZN1_CLK_P4_PG4_ID			108
+#define RZN1_CLK_SLCD_ID			109
+#define RZN1_CLK_P1_PG2_ID			110
+#define RZN1_CLK_P1_PG3_ID			111
+#define RZN1_CLK_P1_PG4_ID			112
+#define RZN1_CLK_P6_PG1_ID			113
+#define RZN1_CLK_P6_PG2_ID			114
+#define RZN1_CLK_P6_PG3_ID			115
+#define RZN1_CLK_P6_PG4_ID			116
+#define RZN1_HCLK_SGPIO2_ID			117
+#define RZN1_HCLK_SGPIO3_ID			118
+#define RZN1_HCLK_SGPIO4_ID			119
+#define RZN1_HCLK_SWITCH_ID			120
+#define RZN1_CLK_SWITCH_ID			121
+#define RZN1_HCLK_RTC_ID			122
+#define RZN1_HCLK_ROM_ID			123
+#define RZN1_CLK_CM3_ID				124
+#define RZN1_HCLK_CM3_ID			125
+#define RZN1_HCLK_SWITCH_RG_ID			126
+#define RZN1_CLK_HW_RTOS_ID			127
+#define RZN1_CLK_RTOS_MDC_ID			128
+
+#endif /* __RZN1_CLOCKS_H__ */
diff --git a/include/renesas/rzn1-irq.h b/include/renesas/rzn1-irq.h
new file mode 100644
index 0000000..f0d379c
--- /dev/null
+++ b/include/renesas/rzn1-irq.h
@@ -0,0 +1,169 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef __RZN1_IRQ_H__
+#define __RZN1_IRQ_H__
+
+#define RZN1_IRQ_ADC			0
+#define RZN1_IRQ_I2C0			1
+#define RZN1_IRQ_I2C1			2
+#define RZN1_IRQ_SAFETY_FILTERING	3
+#define RZN1_IRQ_SGPIO0			4
+#define RZN1_IRQ_SGPIO1			5
+#define RZN1_IRQ_UART0			6
+#define RZN1_IRQ_UART1			7
+#define RZN1_IRQ_UART2			8
+#define RZN1_IRQ_DELTASIGMA		9
+#define RZN1_IRQ_PWMPTO			10
+#define RZN1_IRQ_ECC_4MB		11
+#define RZN1_IRQ_ECC_2MB		12
+#define RZN1_IRQ_CM3_LOCKUP		13
+#define RZN1_IRQ_CM3_TRING_0		14
+#define RZN1_IRQ_CM3_TRING_1		15
+#define RZN1_IRQ_HWRTOS_BRAMERR		16
+#define RZN1_IRQ_HWRTOS_BUFDMA		17
+#define RZN1_IRQ_HWRTOS_BUFDMAERR	18
+#define RZN1_IRQ_HWRTOS_ETHMII		19
+#define RZN1_IRQ_HWRTOS_ETHPAUSE	20
+#define RZN1_IRQ_HWRTOS_ETHRXDERR	21
+#define RZN1_IRQ_HWRTOS_ETHRXDMA	22
+#define RZN1_IRQ_HWRTOS_ETHRXERR	23
+#define RZN1_IRQ_HWRTOS_ETHRXFIFO	24
+#define RZN1_IRQ_HWRTOS_ETHTX		25
+#define RZN1_IRQ_HWRTOS_ETHTXDERR	26
+#define RZN1_IRQ_HWRTOS_ETHTXDMA	27
+#define RZN1_IRQ_HWRTOS_ETHTXFIFO	28
+#define RZN1_IRQ_HWRTOS_ETHTXFIFOERR	29
+#define RZN1_IRQ_HWRTOS			30
+#define RZN1_IRQ_HWRTOS_MACDMARXFRM	31
+#define RZN1_IRQ_HWRTOS_TM_LPI_AST	32
+#define RZN1_IRQ_HWRTOS_TM_LPI_DEAST	33
+#define RZN1_IRQ_SBD0			34
+#define RZN1_IRQ_LPI0			35
+#define RZN1_IRQ_PMT0			36
+#define RZN1_IRQ_SBD1			37
+#define RZN1_IRQ_LPI1			38
+#define RZN1_IRQ_PMT1			39
+#define RZN1_IRQ_SWITCHDLR		40
+#define RZN1_IRQ_SWITCH			42
+#define RZN1_IRQ_SWITCHPRP		43
+#define RZN1_IRQ_ETHSWHUB		44
+#define RZN1_IRQ_ETHSWPTRN		45
+#define RZN1_IRQ_CAT_RST		46
+#define RZN1_IRQ_CAT_SYNC_0		47
+#define RZN1_IRQ_CAT_SYNC_1		48
+#define RZN1_IRQ_CAT_WDT		49	/* shared */
+#define RZN1_IRQ_S3_DIVCLK		49	/* shared */
+#define RZN1_IRQ_CAT_EOF		50	/* shared */
+#define RZN1_IRQ_S3_CONCLK		50	/* shared */
+#define RZN1_IRQ_HSR_PTP		50	/* shared */
+#define RZN1_IRQ_CAT_SOF		51	/* shared */
+#define RZN1_IRQ_S3_0			51	/* shared */
+#define RZN1_IRQ_HSR_CPU		51	/* shared */
+#define RZN1_IRQ_CAT			52	/* shared */
+#define RZN1_IRQ_S3_1			52	/* shared */
+#define RZN1_IRQ_NOCFIREWALL		53
+#define RZN1_IRQ_CRYPTO0		54
+#define RZN1_IRQ_CRYPTO1		55
+#define RZN1_IRQ_DMA0			56
+#define RZN1_IRQ_DMA1			57
+#define RZN1_IRQ_NAND			58
+#define RZN1_IRQ_IPCM_0			59
+#define RZN1_IRQ_IPCM_1			60
+#define RZN1_IRQ_IPCM_2			61
+#define RZN1_IRQ_MSEBIM			62
+#define RZN1_IRQ_MSEBIS			63
+#define RZN1_IRQ_QSPI0			64
+#define RZN1_IRQ_QSPI1			65
+#define RZN1_IRQ_RTCATINTAL		66
+#define RZN1_IRQ_RTCATINTR		67
+#define RZN1_IRQ_RTCATINT1S		68
+#define RZN1_IRQ_SDIO0			69
+#define RZN1_IRQ_SDIO0_WKUP		70
+#define RZN1_IRQ_SDIO1			71
+#define RZN1_IRQ_SDIO1_WKUP		72
+#define RZN1_IRQ_WATCHDOG_RESETN_0	73
+#define RZN1_IRQ_WATCHDOG_RESETN_1	74
+#define RZN1_IRQ_WATCHDOG_CM3_RESETN	75
+#define RZN1_IRQ_DDRSUB			76
+#define RZN1_IRQ_USBF_EPC		77
+#define RZN1_IRQ_USBF			78
+#define RZN1_IRQ_USBH_BIND		79
+#define RZN1_IRQ_SPI0			80
+#define RZN1_IRQ_SPI1			81
+#define RZN1_IRQ_SPI2			82
+#define RZN1_IRQ_SPI3			83
+#define RZN1_IRQ_SPI4			84
+#define RZN1_IRQ_SPI5			85
+#define RZN1_IRQ_UART3			86
+#define RZN1_IRQ_UART4			87
+#define RZN1_IRQ_UART5			88
+#define RZN1_IRQ_UART6			89
+#define RZN1_IRQ_UART7			90
+#define RZN1_IRQ_SGPIO2			91
+#define RZN1_IRQ_SGPIO3			92
+#define RZN1_IRQ_SGPIO4			93
+#define RZN1_IRQ_RSV			94
+#define RZN1_IRQ_CAN0			95
+#define RZN1_IRQ_CAN1			96
+#define RZN1_IRQ_LCD			97
+#define RZN1_IRQ_WATCHDOGSAFE0		100
+#define RZN1_IRQ_WATCHDOGSAFE1		101
+#define RZN1_IRQ_RESET			102
+#define RZN1_IRQ_GPIO_0			103
+#define RZN1_IRQ_GPIO_1			104
+#define RZN1_IRQ_GPIO_2			105
+#define RZN1_IRQ_GPIO_3			106
+#define RZN1_IRQ_GPIO_4			107
+#define RZN1_IRQ_GPIO_5			108
+#define RZN1_IRQ_GPIO_6			109
+#define RZN1_IRQ_GPIO_7			110
+#define RZN1_IRQ_TIMER0_0		112
+#define RZN1_IRQ_TIMER0_1		113
+#define RZN1_IRQ_TIMER0_2		114
+#define RZN1_IRQ_TIMER0_3		115
+#define RZN1_IRQ_TIMER0_4		116
+#define RZN1_IRQ_TIMER0_5		117
+#define RZN1_IRQ_TIMER0_6		118
+#define RZN1_IRQ_TIMER0_7		119
+#define RZN1_IRQ_TIMER1_0		120
+#define RZN1_IRQ_TIMER1_1		121
+#define RZN1_IRQ_TIMER1_2		122
+#define RZN1_IRQ_TIMER1_3		123
+#define RZN1_IRQ_TIMER1_4		124
+#define RZN1_IRQ_TIMER1_5		125
+#define RZN1_IRQ_TIMER1_6		126
+#define RZN1_IRQ_TIMER1_7		127
+#define RZN1_IRQ_NAXIERRIRQ		155
+#define RZN1_IRQ_NCTIIRQ_0		156
+#define RZN1_IRQ_NCTIIRQ_1		157
+#define RZN1_IRQ_NPMUIRQ_0		158
+#define RZN1_IRQ_NPMUIRQ_1		159
+
+#endif /* __RZN1_IRQ_H__ */
diff --git a/include/renesas/rzn1-memory-map.h b/include/renesas/rzn1-memory-map.h
new file mode 100644
index 0000000..532704b
--- /dev/null
+++ b/include/renesas/rzn1-memory-map.h
@@ -0,0 +1,193 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef __RZN1_MEMORY_MAP_H__
+#define __RZN1_MEMORY_MAP_H__
+
+#define RZN1_ROM_BASE			0x00000000
+#define RZN1_ROM_SIZE			0x10000		/* 64 KB */
+#define RZN1_SRAM_ID_BASE		0x04000000
+#define RZN1_SRAM_ID_SIZE		0x100000	/* 1 MB */
+#define RZN1_V_QSPI_BASE		0x10000000
+#define RZN1_V_QSPI_SIZE		0x10000000	/* 256 MB */
+#define RZN1_SRAM_SYS_BASE		0x20000000
+#define RZN1_SRAM_SYS_SIZE		0x100000	/* 1 MB */
+#define RZN1_QSPI_BASE			0x40005000
+#define RZN1_QSPI_SIZE			0x1000		/* 4 KB */
+#define RZN1_RTC_BASE			0x40006000
+#define RZN1_RTC_SIZE			0x1000		/* 4 KB */
+#define RZN1_OTP_BASE			0x40007000
+#define RZN1_OTP_SIZE			0x1000		/* 4 KB */
+#define RZN1_WATCHDOG0_BASE		0x40008000
+#define RZN1_WATCHDOG0_SIZE		0x1000		/* 4 KB */
+#define RZN1_WATCHDOG1_BASE		0x40009000
+#define RZN1_WATCHDOG1_SIZE		0x1000		/* 4 KB */
+#define RZN1_WATCHDOG_M3_BASE		0x4000A000
+#define RZN1_WATCHDOG_M3_SIZE		0x1000		/* 4 KB */
+#define RZN1_MAILBOX_BASE		0x4000B000
+#define RZN1_MAILBOX_SIZE		0x1000		/* 4 KB */
+#define RZN1_SYSTEM_CTRL_BASE		0x4000C000
+#define RZN1_SYSTEM_CTRL_SIZE		0x1000		/* 4 KB */
+#define RZN1_DDR_BASE			0x4000D000
+#define RZN1_DDR_SIZE			0x1000		/* 4 KB */
+#define RZN1_DDRPHY_BASE		0x4000E000
+#define RZN1_DDRPHY_SIZE		0x1000		/* 4 KB */
+#define RZN1_QSPI1_BASE			0x4000E000	/* RZ/N1S only */
+#define RZN1_QSPI1_SIZE			0x1000		/* 4 KB */
+#define RZN1_PACKET_ENGINE_BASE		0x40010000
+#define RZN1_PACKET_ENGINE_SIZE		0x1000		/* 4 KB */
+#define RZN1_USB_DEV_BASE		0x4001E000
+#define RZN1_USB_DEV_SIZE		0x2000		/* 8 KB */
+#define RZN1_USB_HOST_BASE		0x40020000
+#define RZN1_USB_HOST_SIZE		0x20000		/* 128 KB */
+#define RZN1_PUBLIC_KEY_PROC_BASE	0x40040000
+#define RZN1_PUBLIC_KEY_PROC_SIZE	0x10000		/* 64 KB */
+#define RZN1_UART0_BASE			0x40060000
+#define RZN1_UART0_SIZE			0x400		/* 1 KB */
+#define RZN1_UART1_BASE			0x40061000
+#define RZN1_UART1_SIZE			0x400		/* 1 KB */
+#define RZN1_UART2_BASE			0x40062000
+#define RZN1_UART2_SIZE			0x400		/* 1 KB */
+#define RZN1_I2C0_BASE			0x40063000
+#define RZN1_I2C0_SIZE			0x100		/* 256 bytes */
+#define RZN1_I2C1_BASE			0x40064000
+#define RZN1_I2C1_SIZE			0x100		/* 256 bytes */
+#define RZN1_ADC_BASE			0x40065000
+#define RZN1_ADC_SIZE			0x1000		/* 4 KB */
+#define RZN1_CONFIG_SOC_BASE		0x40066000
+#define RZN1_CONFIG_SOC_SIZE		0x2000		/* 8 KB */
+#define RZN1_PINCTRL_BASE		0x40067000
+#define RZN1_PINCTRL_SIZE		0x1000		/* 4 KB */
+#define RZN1_PWM_BASE			0x40068000
+#define RZN1_PWM_SIZE			0x4000		/* 16 KB */
+#define RZN1_DELTASIGMA_BASE		0x4006C000
+#define RZN1_DELTASIGMA_SIZE		0x400		/* 1 KB */
+#define RZN1_SGPIO0_BASE		0x4006D000
+#define RZN1_SGPIO0_SIZE		0x400		/* 1 KB */
+#define RZN1_SGPIO1_BASE		0x4006E000
+#define RZN1_SGPIO1_SIZE		0x400		/* 1 KB */
+#define RZN1_MSEBI_M1_BASE		0x40080000
+#define RZN1_MSEBI_M1_SIZE		0x40000		/* 256 KB */
+#define RZN1_MSEBI_M0_BASE		0x400C0000
+#define RZN1_MSEBI_M0_SIZE		0x2000		/* 8 KB */
+#define RZN1_MSEBI_S_BASE		0x400C2000
+#define RZN1_MSEBI_S_SIZE		0x1000		/* 4 KB */
+#define RZN1_RIN_CTRL_REG_BASE		0x400E0000
+#define RZN1_RIN_CTRL_REG_SIZE		0x20000		/* 128 KB */
+#define RZN1_SDIO0_BASE			0x40100000
+#define RZN1_SDIO0_SIZE			0x1000		/* 4 KB */
+#define RZN1_SDIO1_BASE			0x40101000
+#define RZN1_SDIO1_SIZE			0x1000		/* 4 KB */
+#define RZN1_NAND_BASE			0x40102000
+#define RZN1_NAND_SIZE			0x2000		/* 8 KB */
+#define RZN1_DMA0_BASE			0x40104000
+#define RZN1_DMA0_SIZE			0x1000		/* 4 KB */
+#define RZN1_DMA1_BASE			0x40105000
+#define RZN1_DMA1_SIZE			0x1000		/* 4 KB */
+#define RZN1_GMAC0_BASE			0x44000000
+#define RZN1_GMAC0_SIZE			0x2000		/* 8 KB */
+#define RZN1_GMAC1_BASE			0x44002000
+#define RZN1_GMAC1_SIZE			0x2000		/* 8 KB */
+#define RZN1_ETHERCAT_BASE		0x44010000
+#define RZN1_ETHERCAT_SIZE		0x10000		/* 64 KB */
+#define RZN1_SERCOS_BASE		0x44020000
+#define RZN1_SERCOS_SIZE		0x10000		/* 64 KB */
+#define RZN1_SWITCH_CTRL_REG_BASE	0x44030000
+#define RZN1_SWITCH_CTRL_REG_SIZE	0x10000		/* 64 KB */
+#define RZN1_HSR_CPU_BASE		0x44040000
+#define RZN1_HSR_CPU_SIZE		0x8000		/* 32 KB */
+#define RZN1_HSR_CORE_BASE		0x44048000
+#define RZN1_HSR_CORE_SIZE		0x4000		/* 16 KB */
+#define RZN1_HSR_PTP_BASE		0x4404C000
+#define RZN1_HSR_PTP_SIZE		0x4000		/* 16 KB */
+#define RZN1_SWITCH_BASE		0x44050000
+#define RZN1_SWITCH_SIZE		0x10000		/* 64 KB */
+#define RZN1_GIC_BASE			0x44100000
+#define RZN1_GIC_SIZE			0x8000		/* 32 KB */
+#define RZN1_CSDAP_BASE			0x45000000
+#define RZN1_CSDAP_SIZE			0x200000	/* 2 MB */
+#define RZN1_UART3_BASE			0x50000000
+#define RZN1_UART3_SIZE			0x400		/* 1 KB */
+#define RZN1_UART4_BASE			0x50001000
+#define RZN1_UART4_SIZE			0x400		/* 1 KB */
+#define RZN1_UART5_BASE			0x50002000
+#define RZN1_UART5_SIZE			0x400		/* 1 KB */
+#define RZN1_UART6_BASE			0x50003000
+#define RZN1_UART6_SIZE			0x400		/* 1 KB */
+#define RZN1_UART7_BASE			0x50004000
+#define RZN1_UART7_SIZE			0x400		/* 1 KB */
+#define RZN1_SPI0_BASE			0x50005000
+#define RZN1_SPI0_SIZE			0x400		/* 1 KB */
+#define RZN1_SPI1_BASE			0x50006000
+#define RZN1_SPI1_SIZE			0x400		/* 1 KB */
+#define RZN1_SPI2_BASE			0x50007000
+#define RZN1_SPI2_SIZE			0x400		/* 1 KB */
+#define RZN1_SPI3_BASE			0x50008000
+#define RZN1_SPI3_SIZE			0x400		/* 1 KB */
+#define RZN1_SPI4_BASE			0x50009000
+#define RZN1_SPI4_SIZE			0x400		/* 1 KB */
+#define RZN1_SPI5_BASE			0x5000A000
+#define RZN1_SPI5_SIZE			0x400		/* 1 KB */
+#define RZN1_GPIO0_BASE			0x5000B000
+#define RZN1_GPIO0_SIZE			0x80		/* 128 bytes */
+#define RZN1_GPIO1_BASE			0x5000C000
+#define RZN1_GPIO1_SIZE			0x80		/* 128 bytes */
+#define RZN1_GPIO2_BASE			0x5000D000
+#define RZN1_GPIO2_SIZE			0x80		/* 128 bytes */
+#define RZN1_SGPIO3_BASE		0x5000F000
+#define RZN1_SGPIO3_SIZE		0x400		/* 1 KB */
+#define RZN1_SGPIO4_BASE		0x50010000
+#define RZN1_SGPIO4_SIZE		0x400		/* 1 KB */
+#define RZN1_PINCTRL_L2_BASE		0x51000000
+#define RZN1_PINCTRL_L2_SIZE		0x800		/* 2 KB */
+#define RZN1_TIMER0_BASE		0x51001000
+#define RZN1_TIMER0_SIZE		0x400		/* 1 KB */
+#define RZN1_TIMER1_BASE		0x51002000
+#define RZN1_TIMER1_SIZE		0x400		/* 1 KB */
+#define RZN1_WATCHDOGSAFE0_BASE		0x51003000
+#define RZN1_WATCHDOGSAFE0_SIZE		0x400		/* 1 KB */
+#define RZN1_WATCHDOGSAFE1_BASE		0x51004000
+#define RZN1_WATCHDOGSAFE1_SIZE		0x400		/* 1 KB */
+#define RZN1_CLKMONITORING_BASE		0x51005000
+#define RZN1_CLKMONITORING_SIZE		0x400		/* 1 KB */
+#define RZN1_RESET_BASE			0x51006000
+#define RZN1_RESET_SIZE			0x400		/* 1 KB */
+#define RZN1_CAN0_BASE			0x52104000
+#define RZN1_CAN0_SIZE			0x800		/* 2 KB */
+#define RZN1_CAN1_BASE			0x52105000
+#define RZN1_CAN1_SIZE			0x800		/* 2 KB */
+#define RZN1_SEMAPHORE_BASE		0x53000000
+#define RZN1_SEMAPHORE_SIZE		0x4000		/* 16 KB */
+#define RZN1_LCD_BASE			0x53004000
+#define RZN1_LCD_SIZE			0x1000		/* 4 KB */
+#define RZN1_V_DDR_BASE			0x80000000
+#define RZN1_V_QSPI1_BASE		0xA0000000	/* RZ/N1S only */
+#define RZN1_V_QSPI1_SIZE		0x10000000	/* 256 MB */
+
+#endif /* __RZN1_MEMORY_MAP_H__ */
diff --git a/include/renesas/rzn1-sysctrl.h b/include/renesas/rzn1-sysctrl.h
new file mode 100644
index 0000000..5042b51
--- /dev/null
+++ b/include/renesas/rzn1-sysctrl.h
@@ -0,0 +1,768 @@
+/*
+ * This file was autogenerated
+ * DO NOT EDIT
+ * (C) 2015-2016 Renesas Electronics Europe, LTD
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright notice,
+ * this list of conditions and the following disclaimer.
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef __RZN1_SYSCTRL_H__
+#define __RZN1_SYSCTRL_H__
+
+
+/*
+ * Auto-generated from SYSCTRL_ipxact.xml
+ */
+#define RZN1_SYSCTRL_REG_CFG_USB		0x0
+#define RZN1_SYSCTRL_REG_CFG_USB_DIRPD			0
+#define RZN1_SYSCTRL_REG_CFG_USB_H2MODE			1
+#define RZN1_SYSCTRL_REG_CFG_USB_FRCLK48MOD		2
+#define RZN1_SYSCTRL_REG_OPMODE			0x4
+#define RZN1_SYSCTRL_REG_OPMODE_DDRMOD			0
+#define RZN1_SYSCTRL_REG_OPMODE_OPPMOD			1
+#define RZN1_SYSCTRL_REG_OPMODE_CA7BOOTSRC		2
+#define RZN1_SYSCTRL_REG_OPMODE_CA7BOOTSRC_MASK		0xc
+#define RZN1_SYSCTRL_REG_OPMODE_CM3BOOTSEL		4
+#define RZN1_SYSCTRL_REG_OPMODE_LCD2PU			5
+#define RZN1_SYSCTRL_REG_OPMODE_LCD1PU			6
+#define RZN1_SYSCTRL_REG_CFG_SDIO0		0x8
+#define RZN1_SYSCTRL_REG_CFG_SDIO0_BASECLKFREQ		0
+#define RZN1_SYSCTRL_REG_CFG_SDIO0_BASECLKFREQ_MASK	0xff
+#define RZN1_SYSCTRL_REG_CFG_SDIO0_SLOTTYPE		8
+#define RZN1_SYSCTRL_REG_CFG_SDIO0_SLOTTYPE_MASK	0x300
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0		0xc
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO0		0x10
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO0_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO0_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO0_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_DBGCON			0x14
+#define RZN1_SYSCTRL_REG_DBGCON_PR_DBG_EN		0
+#define RZN1_SYSCTRL_REG_DBGCON_CM3WD_DBG_EN		1
+#define RZN1_SYSCTRL_REG_DBGCON_CA7WD0_DBG_EN		2
+#define RZN1_SYSCTRL_REG_DBGCON_CA7WD1_DBG_EN		3
+#define RZN1_SYSCTRL_REG_SYSSTAT		0x18
+#define RZN1_SYSCTRL_REG_SYSSTAT_CA7_STANDBYWFE		0
+#define RZN1_SYSCTRL_REG_SYSSTAT_CA7_STANDBYWFE_MASK	0x3
+#define RZN1_SYSCTRL_REG_SYSSTAT_CA7_STANDBYWFI		2
+#define RZN1_SYSCTRL_REG_SYSSTAT_CA7_STANDBYWFI_MASK	0xc
+#define RZN1_SYSCTRL_REG_SYSSTAT_CA7_STANDBYWFIL2	4
+#define RZN1_SYSCTRL_REG_SYSSTAT_CA7_COREVDDON		5
+#define RZN1_SYSCTRL_REG_SYSSTAT_PKGMODE		6
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB		0x1c
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_MIREQ_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_CLKEN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_MIREQ_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_CLKEN_C		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_CLKEN_E		6
+#define RZN1_SYSCTRL_REG_PWRCTRL_USB_RSTN_F		7
+#define RZN1_SYSCTRL_REG_PWRSTAT_USB		0x20
+#define RZN1_SYSCTRL_REG_PWRSTAT_USB_MIRACK_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_USB_MISTAT_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_USB_MIRACK_B		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_USB_MISTAT_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO		0x24
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_MIREQ_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_CLKEN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_RSTN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_SLVRDY_B	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_CRYPTO_RSTN_A_ZERO	6
+#define RZN1_SYSCTRL_REG_PWRSTAT_CRYPTO		0x28
+#define RZN1_SYSCTRL_REG_PWRSTAT_CRYPTO_MIRACK_A	0
+#define RZN1_SYSCTRL_REG_PWRSTAT_CRYPTO_MISTAT_A	1
+#define RZN1_SYSCTRL_REG_PWRSTAT_CRYPTO_SCON_B		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI		0x2c
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_RSTN_B		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_MSEBI_SLVRDY_B		6
+#define RZN1_SYSCTRL_REG_PWRSTAT_MSEBI		0x30
+#define RZN1_SYSCTRL_REG_PWRSTAT_MSEBI_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_MSEBI_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_MSEBI_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_MSEBI_SCON_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0		0x34
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_SLVRDY_B		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_C		6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_C		7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_SLVRDY_C		8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_D		9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_D		10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_SLVRDY_D		11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_E		12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_E		13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_SLVRDY_E		14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_F		15
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_F		16
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_SLVRDY_F		17
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_H1		18
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_H1		19
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_H2		20
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_H2		21
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_I1		22
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_I1		23
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_I2		24
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_I2		25
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_J1		26
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_J1		27
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_CLKEN_J2		28
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_RSTN_J2		29
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_0_UARTCLKSEL	30
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0		0x38
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_B		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_C		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_D		3
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_E		4
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_F		5
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_N		6
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_O		7
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_P		8
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG0_SCON_R		9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1		0x3c
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_N		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_N		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_SLVRDY_N		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_O		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_O		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_SLVRDY_O		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_K		6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_K		7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_L		8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_L		9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_M		10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_M		11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_P		12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_P		13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_SLVRDY_P		14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_CLKEN_R		15
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_RSTN_R		16
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_1_SLVRDY_R		17
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1	0x40
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_A	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_A	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_B	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_B	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_C	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_C		7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_C	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_D	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_D		10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_D	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_E	12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_E		13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_E	14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_F	15
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_F		16
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_F	17
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_G	18
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_G		19
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_G	20
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_H	21
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_H		22
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_H	23
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_I	24
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_I		25
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_I	26
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_CLKEN_J	27
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_RSTN_J		28
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW1_SLVRDY_J	29
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2	0x44
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_CLKEN_K	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_RSTN_K		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_SLVRDY_K	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_CLKEN_L	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_RSTN_L		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_SLVRDY_L	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_CLKEN_M	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_RSTN_M		7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_SLVRDY_M	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_CLKEN_N	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_RSTN_N		10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_SLVRDY_N	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_CLKEN_O	12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_RSTN_O		13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_SLVRDY_O	14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_CLKEN_P	15
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_RSTN_P		16
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_FW2_SLVRDY_P	17
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV	0x48
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV_DIV	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6DIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA		0x4c
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_RSTN_B		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_SLVRDY_B		6
+#define RZN1_SYSCTRL_REG_PWRCTRL_DMA_MIREQ_B		7
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH		0x50
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH_SLVRDY_A	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASH_RSTN_B		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0		0x54
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0_RSTN_B		5
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA		0x58
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA_SCON_B		3
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA_MIRACK_B		4
+#define RZN1_SYSCTRL_REG_PWRSTAT_DMA_MISTAT_B		5
+#define RZN1_SYSCTRL_REG_PWRSTAT_NFLASH		0x5c
+#define RZN1_SYSCTRL_REG_PWRSTAT_NFLASH_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_NFLASH_MIRACK_A	1
+#define RZN1_SYSCTRL_REG_PWRSTAT_NFLASH_MISTAT_A	2
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI0		0x60
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI0_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI0_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI0_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV	0x64
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1DIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_DDRC		0x64
+#define RZN1_SYSCTRL_REG_PWRCTRL_DDRC_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_DDRC_MIREQ_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_DDRC_RSTN_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_DDRC_CLKEN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_DDRC_RSTN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_EETH		0x68
+#define RZN1_SYSCTRL_REG_PWRCTRL_EETH_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_EETH_CLKEN_B		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_EETH_CLKEN_C		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC0		0x6c
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC0_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC0_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC0_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC0_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC1		0x70
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC1_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC1_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC1_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_MAC1_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRSTAT_DDRC		0x74
+#define RZN1_SYSCTRL_REG_PWRSTAT_DDRC_MIRACK_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_DDRC_MISTAT_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC0		0x78
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC0_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC0_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC0_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC1		0x7c
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC1_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC1_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_MAC1_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT		0x80
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT_MIREQ_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT_CLKEN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT_RSTN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_ECAT_CLKEN_C		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS		0x84
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS_MIREQ_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS_RSTN_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS_RSTN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_SERCOS_CLKEN_C		5
+#define RZN1_SYSCTRL_REG_PWRSTAT_ECAT		0x88
+#define RZN1_SYSCTRL_REG_PWRSTAT_ECAT_MIRACK_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_ECAT_MISTAT_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_SERCOS		0x8c
+#define RZN1_SYSCTRL_REG_PWRSTAT_SERCOS_MIRACK_A	0
+#define RZN1_SYSCTRL_REG_PWRSTAT_SERCOS_MISTAT_A	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1		0x90
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI1_RSTN_B		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR		0x90
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR_MIREQ_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR_RSTN_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR_CLKEN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR_CLKEN_C		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_HSR_RSTN_C		5
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV	0x94
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHDIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI1		0x98
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI1_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI1_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_QSPI1_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_HSR		0x98
+#define RZN1_SYSCTRL_REG_PWRSTAT_HSR_MIRACK_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_HSR_MISTAT_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_SWITCH		0x9c
+#define RZN1_SYSCTRL_REG_PWRSTAT_SWITCH_SCON_A		0
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX		0xa0
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX0		0
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX1		1
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX2		2
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX3		3
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX4		4
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX5		5
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX6		6
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX7		7
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX8		8
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX9		9
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX10		10
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX11		11
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX12		12
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX13		13
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX14		14
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D1MX15		15
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX0		16
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX1		17
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX2		18
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX3		19
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX4		20
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX5		21
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX6		22
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX7		23
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX8		24
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX9		25
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX10		26
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX11		27
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX12		28
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX13		29
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX14		30
+#define RZN1_SYSCTRL_REG_CFG_DMAMUX_D2MX15		31
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_1A	0xa4
+#define RZN1_SYSCTRL_REG_RSTSTAT		0xa8
+#define RZN1_SYSCTRL_REG_RSTSTAT_WDA7RST_ST		1
+#define RZN1_SYSCTRL_REG_RSTSTAT_WDA7RST_ST_MASK	0x6
+#define RZN1_SYSCTRL_REG_RSTSTAT_WDM3RST_ST		3
+#define RZN1_SYSCTRL_REG_RSTSTAT_CM3LOCKUPRST_ST	4
+#define RZN1_SYSCTRL_REG_RSTSTAT_CM3SYSRESET_ST		5
+#define RZN1_SYSCTRL_REG_RSTSTAT_SWRST_ST		6
+#define RZN1_SYSCTRL_REG_RSTSTAT_PORRST_ST		31
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_1B	0xb0
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_2A	0xb4
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_2B	0xb8
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC		0xbc
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG0		0
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG0_MASK	0x1f
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG1		8
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG1_MASK	0x1f00
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG2		16
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG2_MASK	0x1f0000
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG3		24
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_TSRC_TRIG3_MASK	0x1f000000
+#define RZN1_SYSCTRL_REG_USBSTAT		0xc0
+#define RZN1_SYSCTRL_REG_USBSTAT_PLL_LOCK		0
+#define RZN1_SYSCTRL_REG_CFG_SDIO1		0xc4
+#define RZN1_SYSCTRL_REG_CFG_SDIO1_BASECLKFREQ		0
+#define RZN1_SYSCTRL_REG_CFG_SDIO1_BASECLKFREQ_MASK	0xff
+#define RZN1_SYSCTRL_REG_CFG_SDIO1_SLOTTYPE		8
+#define RZN1_SYSCTRL_REG_CFG_SDIO1_SLOTTYPE_MASK	0x300
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1		0xc8
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1_MIREQ_A		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1_CLKEN_B		4
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO1		0xcc
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO1_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO1_MIRACK_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_SDIO1_MISTAT_A		2
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT	0xd0
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_F_SEC	0
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_I_SEC	1
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_Z_SEC	2
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_YD_SEC	3
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_YC_SEC	4
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_YS_SEC	5
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_CSA_SEC	6
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_INIT_CSB_SEC	7
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG	0xd4
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_UA_SEC	0
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_UB_SEC	1
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_J_SEC	2
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_K_SEC	3
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_NA_SEC	4
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_NB_SEC	5
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_QA_SEC	6
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_QB_SEC	7
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_RA_SEC	8
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_PC_SEC	9
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_MA_SEC	10
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_MB_SEC	11
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_MC_SEC	12
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_MD_SEC	13
+#define RZN1_SYSCTRL_REG_CFG_FW_STATIC_TZA_TARG_W_SEC	14
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_3A	0xd8
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_3B	0xdc
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_3B_PORTEN	0
+#define RZN1_SYSCTRL_REG_CFG_GPIOT_PTEN_3B_PORTEN_MASK	0x3ff
+#define RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV		0xe0
+#define RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV_DIV_MASK	0x1f
+#define RZN1_SYSCTRL_REG_PWRCTRL_OPPDIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV		0xe4
+#define RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV_DIV_MASK	0x7
+#define RZN1_SYSCTRL_REG_PWRCTRL_CA7DIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ	0xe8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_Q	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_Q	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_Q	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_R	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_R	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_R	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_S	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_S	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_S	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_T	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_T	10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_T	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_U	12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_U	13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_U	14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_V	15
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_V	16
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_V	17
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_W	18
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_W	19
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_W	20
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_CLKEN_X	21
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_RSTN_X	22
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG2_25MHZ_SLVRDY_X	23
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2	0xec
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AG1	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AG1	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AG2	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AG2	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AH1	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AH1	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AH2	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AH2	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AI1	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AI1	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AI2	10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AI2	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AJ1	12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AJ1	13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AJ2	14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AJ2	15
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AK1	16
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AK1	17
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AK2	18
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AK2	19
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AL1	20
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AL1	21
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_CLKEN_AL2	22
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_RSTN_AL2	23
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2_UARTCLKSEL	24
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ	0xf0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_CLKEN_Y	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_RSTN_Y	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_SLVRDY_Y	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_CLKEN_Z	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_RSTN_Z	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_SLVRDY_Z	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_CLKEN_AA	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_RSTN_AA	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_SLVRDY_AA	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_CLKEN_AB	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_RSTN_AB	10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_SLVRDY_AB	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_CLKEN_UF	12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_RSTN_UF	13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG3_48MHZ_MIREQ_UF	14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW		0xf4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_CLKEN_AC	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_RSTN_AC		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_SLVRDY_AC	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_CLKEN_AD	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_RSTN_AD		4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_SLVRDY_AD	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_CLKEN_AE	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_RSTN_AE		7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_SLVRDY_AE	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_CLKEN_AF	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_RSTN_AF		10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_SLVRDY_AF	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_CLKEN_UI	12
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_RSTN_UI		13
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_FW_MIREQ_UI	14
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV	0xf8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR2DIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3	0xfc
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_CLKEN_AM	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_RSTN_AM	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_CLKEN_AN	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_RSTN_AN	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_CLKEN_AO	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_RSTN_AO	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_CLKEN_AP	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3_RSTN_AP	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV	0x100
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR3DIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4	0x104
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_CLKEN_AQ	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_RSTN_AQ	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_CLKEN_AR	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_RSTN_AR	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_CLKEN_AS	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_RSTN_AS	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_CLKEN_AT	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4_RSTN_AT	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV	0x108
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG1_PR4DIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1	0x10c
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_CLKEN_AU	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_RSTN_AU	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_CLKEN_AV	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_RSTN_AV	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_CLKEN_AW	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_RSTN_AW	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_CLKEN_AX	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1_RSTN_AX	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV	0x110
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG4_PR1DIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6	0x114
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_CLKEN_BC	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_RSTN_BC	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_SLVRDY_BC	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_CLKEN_BD	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_RSTN_BD	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_SLVRDY_BD	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_CLKEN_BE	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_RSTN_BE	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_SLVRDY_BE	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_CLKEN_BF	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_RSTN_BF	10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PGEXT2_PR6_SLVRDY_BF	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5	0x118
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_CLKEN_AZ	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_RSTN_AZ	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_SLVRDY_AZ	5
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_CLKEN_BA	6
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_RSTN_BA	7
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_SLVRDY_BA	8
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_CLKEN_BB	9
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_RSTN_BB	10
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5_SLVRDY_BB	11
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV	0x11c
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG5_PR5DIV_BUSY	31
+#define RZN1_SYSCTRL_REG_RSTEN			0x120
+#define RZN1_SYSCTRL_REG_RSTEN_MRESET_EN		0
+#define RZN1_SYSCTRL_REG_RSTEN_WDA7RST_EN		1
+#define RZN1_SYSCTRL_REG_RSTEN_WDA7RST_EN_MASK		0x6
+#define RZN1_SYSCTRL_REG_RSTEN_WDM3RST_EN		3
+#define RZN1_SYSCTRL_REG_RSTEN_CM3LOCKUPRST_EN		4
+#define RZN1_SYSCTRL_REG_RSTEN_CM3SYSRESET_EN		5
+#define RZN1_SYSCTRL_REG_RSTEN_SWRST_EN			6
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV	0x124
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_QSPI0DIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV	0x128
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO0DIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV	0x12c
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_SDIO1DIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCH		0x130
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCH_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCH_SLVRDY_A	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCH_CLKEN_B		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCH_RSTN_B		3
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV	0x134
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV_DIV_MASK	0x3ff
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_ADCDIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV	0x138
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_I2CDIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV	0x13c
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV_DIV	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV_DIV_MASK	0xff
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_UARTDIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_RTC		0x140
+#define RZN1_SYSCTRL_REG_PWRCTRL_RTC_CLKEN_RTC		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_RTC_RST_RTC		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_RTC_IDLE_REQ		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_RTC_RSTN_FW_RTC	3
+#define RZN1_SYSCTRL_REG_PWRSTAT_RTC		0x144
+#define RZN1_SYSCTRL_REG_PWRSTAT_RTC_RTC_IACK		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_RTC_RTC_IDLE		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_RTC_PWR_GOOD		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV	0x148
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV_DIV		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV_DIV_MASK	0x7f
+#define RZN1_SYSCTRL_REG_PWRCTRL_NFLASHDIV_BUSY		31
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV	0x150
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV_DIV	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV_DIV_MASK	0xf
+#define RZN1_SYSCTRL_REG_PWRCTRL_PG0_MOTORDIV_BUSY	31
+#define RZN1_SYSCTRL_REG_PWRCTRL_ROM		0x154
+#define RZN1_SYSCTRL_REG_PWRCTRL_ROM_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_ROM_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_ROM_SLVRDY_A		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW		0x158
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_B		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_C		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_D		3
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_E		4
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_F		5
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_G		6
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_H		7
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_I		8
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_J		9
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_K		10
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_L		11
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_M		12
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_N		13
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_O		14
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG1_FW_SCON_P		15
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ	0x15c
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_Q	0
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_R	1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_S	2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_T	3
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_U	4
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_V	5
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_W	6
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG2_25MHZ_SCON_X	7
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ	0x160
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ_SCON_Y	0
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ_SCON_Z	1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ_SCON_AA	2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ_SCON_AB	3
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ_MIRACK_UF	4
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG3_48MHZ_MISTAT_UF	5
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW		0x164
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW_SCON_AC		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW_SCON_AD		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW_SCON_AE		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW_SCON_AF		3
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW_MIRACK_UI	4
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG4_FW_MISTAT_UI	5
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG5_PR5	0x168
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG5_PR5_SCON_AZ	1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG5_PR5_SCON_BA	2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PG5_PR5_SCON_BB	3
+#define RZN1_SYSCTRL_REG_PWRSTAT_PGEXT2_PR6	0x16c
+#define RZN1_SYSCTRL_REG_PWRSTAT_PGEXT2_PR6_SCON_BC	0
+#define RZN1_SYSCTRL_REG_PWRSTAT_PGEXT2_PR6_SCON_BD	1
+#define RZN1_SYSCTRL_REG_PWRSTAT_PGEXT2_PR6_SCON_BE	2
+#define RZN1_SYSCTRL_REG_PWRSTAT_PGEXT2_PR6_SCON_BF	3
+#define RZN1_SYSCTRL_REG_PWRSTAT_ROM		0x170
+#define RZN1_SYSCTRL_REG_PWRSTAT_ROM_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_CM3		0x174
+#define RZN1_SYSCTRL_REG_PWRCTRL_CM3_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_CM3_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_CM3_MIREQ_A		2
+#define RZN1_SYSCTRL_REG_PWRSTAT_CM3		0x178
+#define RZN1_SYSCTRL_REG_PWRSTAT_CM3_MIRACK_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_CM3_MISTAT_A		1
+#define RZN1_SYSCTRL_REG_PWRSTAT_RINCTRL	0x17c
+#define RZN1_SYSCTRL_REG_PWRSTAT_RINCTRL_SCON_A		0
+#define RZN1_SYSCTRL_REG_PWRSTAT_SWITCHCTRL	0x180
+#define RZN1_SYSCTRL_REG_PWRSTAT_SWITCHCTRL_SCON_A	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_RINCTRL	0x184
+#define RZN1_SYSCTRL_REG_PWRCTRL_RINCTRL_CLKEN_A	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_RINCTRL_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_RINCTRL_SLVRDY_A	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL	0x188
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_CLKEN_A	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_RSTN_A	1
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_SLVRDY_A	2
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_RSTN_CLK25	3
+#define RZN1_SYSCTRL_REG_PWRCTRL_SWITCHCTRL_RSTN_ETH	4
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS		0x18c
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_CLKEN_A		0
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_RSTN_A		1
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_CLKEN_B		2
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV	0x190
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV_DIV	0
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV_DIV_MASK	0x3ff
+#define RZN1_SYSCTRL_REG_PWRCTRL_HWRTOS_MDCDIV_BUSY	31
+#define RZN1_SYSCTRL_REG_RSTCTRL		0x198
+#define RZN1_SYSCTRL_REG_RSTCTRL_WDA7RST_REQ		1
+#define RZN1_SYSCTRL_REG_RSTCTRL_WDA7RST_REQ_MASK	0x6
+#define RZN1_SYSCTRL_REG_RSTCTRL_WDM3RST_REQ		3
+#define RZN1_SYSCTRL_REG_RSTCTRL_CM3LOCKUPRST_REQ	4
+#define RZN1_SYSCTRL_REG_RSTCTRL_CM3SYSRESET_REQ	5
+#define RZN1_SYSCTRL_REG_RSTCTRL_SWRST_REQ		6
+#define RZN1_SYSCTRL_REG_VERSION		0x19c
+#define RZN1_SYSCTRL_REG_VERSION_MINOR			0
+#define RZN1_SYSCTRL_REG_VERSION_MINOR_MASK		0xf
+#define RZN1_SYSCTRL_REG_VERSION_MAJOR			4
+#define RZN1_SYSCTRL_REG_VERSION_MAJOR_MASK		0xf0
+#define RZN1_SYSCTRL_REG_VERSION_PROD			8
+#define RZN1_SYSCTRL_REG_BOOTADDR		0x204
+
+#define RZN1_SYSCTRL_REGSIZE			520
+
+#endif /* __RZN1_SYSCTRL_H__ */
diff --git a/include/renesas/rzn1-utils.h b/include/renesas/rzn1-utils.h
new file mode 100644
index 0000000..15739b4
--- /dev/null
+++ b/include/renesas/rzn1-utils.h
@@ -0,0 +1,73 @@
+/*
+ * (C) Copyright 2015 Renesas Electronics Europe Ltd
+ *
+ * SPDX-License-Identifier:	BSD-2-Clause
+ */
+
+#ifndef __RZN1_UTILS_H__
+#define __RZN1_UTILS_H__
+
+#include <usb.h>
+#include "renesas/rzn1-memory-map.h"
+
+/* System Controller */
+#define sysctrl_readl(addr) \
+	readl(RZN1_SYSTEM_CTRL_BASE + addr)
+#define sysctrl_writel(val, addr) \
+	writel(val, RZN1_SYSTEM_CTRL_BASE + addr)
+
+int rzn1_clk_set_gate(int clkdesc_id, int on);
+void rzn1_clk_reset(int clkdesc_id);
+void rzn1_clk_reset_state(int clkdesc_id, int level);
+
+void rzn1_sysctrl_div(u32 reg, u32 div);
+
+static inline int is_rzn1d(void)
+{
+	u32 ver = sysctrl_readl(RZN1_SYSCTRL_REG_VERSION);
+	if ((ver >> RZN1_SYSCTRL_REG_VERSION_PROD) == 0)
+		return 1;
+	return 0;
+}
+
+/* USB */
+int rzn1_usb_init(int index, enum usb_init_type init);
+
+/* PinMux */
+#define RZN1_DRIVE_SET  	(1 << 31)
+#define RZN1_PULL_SET  		(1 << 30)
+#define RZN1_DRIVE_4MA		(RZN1_DRIVE_SET | (0 << 10))
+#define RZN1_DRIVE_6MA		(RZN1_DRIVE_SET | (1 << 10))
+#define RZN1_DRIVE_8MA		(RZN1_DRIVE_SET | (2 << 10))
+#define RZN1_DRIVE_12MA		(RZN1_DRIVE_SET | (3 << 10))
+#define RZN1_DRIVE_MASK		(3 << 10)
+#define RZN1_PULL_NONE		(RZN1_PULL_SET | (0 << 8))
+#define RZN1_PULL_UP		(RZN1_PULL_SET | (1 << 8))
+#define RZN1_PULL_DOWN		(RZN1_PULL_SET | (3 << 8))
+#define RZN1_PULL_MASK		(3 << 8)
+
+void rzn1_pinmux_set(u32 setting);
+void rzn1_pinmux_select(u8 pin, u32 func, u32 attrib);
+
+/* Ethernet */
+void rzn1_mt5pt_switch_enable_port(int port);
+void rzn1_mt5pt_switch_setup_port_speed(int port, int speed);
+void rzn1_mt5pt_switch_init(void);
+
+void rzn1_rin_prot_writel(u32 val, u32 reg);
+void rzn1_rin_switchcore_setup(int port, int duplex, int speed);
+void rzn1_switch_setup_port_speed(int port, int speed, int enable);
+void rzn1_rgmii_rmii_conv_setup(int phy, u32 if_type, int rmii_ref_clk_out);
+void rzn1_rgmii_rmii_conv_speed(int phy, int duplex, int speed);
+void rzn1_rin_init(void);
+void rzn1_rin_reset_clks(void);
+
+/* DDR */
+#define RZN1_DDR2 2
+#define RZN1_DDR3_SINGLE_BANK 3
+#define RZN1_DDR3_DUAL_BANK 32
+void ddr_phy_init(int ddr_type);
+void ddr_phy_enable_wl(void);
+void rzn1_ddr_ctrl_init(const u32 *reg0, const u32 *reg350, u32 ddr_size);
+
+#endif /* __RZN1_UTILS_H__ */
diff --git a/scripts/config_whitelist.txt b/scripts/config_whitelist.txt
index 69dbb28..383ee01 100644
--- a/scripts/config_whitelist.txt
+++ b/scripts/config_whitelist.txt
@@ -160,6 +160,7 @@ CONFIG_ARCH_PXA_IDP
 CONFIG_ARCH_RMOBILE_BOARD_STRING
 CONFIG_ARCH_RMOBILE_EXTRAM_BOOT
 CONFIG_ARCH_RPC
+CONFIG_ARCH_RZN1
 CONFIG_ARCH_S3C2440
 CONFIG_ARCH_SHARK
 CONFIG_ARCH_TEGRA
-- 
2.7.4

